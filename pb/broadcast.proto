
syntax = "proto3";
package GoogleProtoBB;                                             

enum BroadcastInfoKey
{	
	 Recorder_Train_In_Out						=0;
	 CommonTimeReference						=1;
	 Player_Status								=2;
	 Player_Group								=3;
	 Player_Camera								=4;
	 Player_Type								=5;
	 Player_Speed								=6;
	 Player_Consigne							=7;
	 Player_Mode								=8;
	 Player_Extend_Playlist						=9;
	 Camera_Type								=10;
	 Player_Limit_In_Out						=11;
	 Player_Loop_Mode							=12;
	 Player_Loop_Count							=13;
	 Player_Playlist_ID							=14;
	 Player_Playlist_Element_ID					=15;
	 DVE_Mode									=16;
	 DVE_Type									=17;
	 DVE_Channel								=18;
	 DVE_Num									=19;
	 DVE_Den									=20;
	 DVE_CutThreshold							=21;
	 DVE_Custom_Transparency					=22;
	 RTD_Status									=23;			
	 RTD_Type									=24;			
	 RTD_Position								=25;			
	 GFX_Status									=26;			
	 GFX_Position								=27;			
	 GFX_Fade_In_Out_Duration					=28;
	 GFX_Loop_In_Out							=29;			
	 GFX_Loop_Count								=30;			
	 GFX_Preload_Status							=31;			
	 HealthInfo_Storage_Capacity				=32;
	 HealthInfo_Version							=33;			
	 HealthInfo_Mixer_Status					=34;
	 HealthInfo_Network_Bandwidth				=35;
	 HealthInfo_GPU_Temperature					=36;
	 HealthInfo_AJA_Status						=37;
	 HealthInfo_HDD_Status						=38;
	 HealthInfo_ASIO_Status						=39;
	 HealthInfo_External_TimeCode				=40;
	 CustomInfoBroadcast						=41;
	 BMR_Setting								=42;			
	 VuMeter_Live_Mixer_PGM						=43;
	 Recorder_Close_Caption						=44;
	 Player_Close_Caption						=45;
	 CustomInfoNotify							=46;
	 Player_AudioPresetId						=47;
	 PiP_Status									=48;
	 HealthInfo_Server_Memory					=49;
	 Cache_ReplayPlayer_HighResVideo			=50;
	 Cache_ReplayPlayer_ExternalAudio			=51;
	 HealthInfo_ReferenceStatus					=52;
	 HealthInfo_SerialNumber					=53;
	 HealthInfo_RemainingTimePerCam				=54;
	 Film_Effect_Status							=55;
     Tally										=56;	 
}                                                         
enum CnlID 
{
	ID_Replay1_0=0;
	ID_Replay1_15 = 15;
	ID_Replay1_31 = 31;
	ID_Replay1_PGMDirty = 32;
	ID_Replay1_PGMClean = 33;
	ID_Replay1_Import = 34;
	ID_Replay2_0 = 50;
	ID_Replay2_15 = 65;
	ID_Replay2_31 = 81;
	ID_Replay2_PGMDirty = 82;
	ID_Replay2_PGMClean = 83;
	ID_Replay2_Import = 84;
	ID_PGM1 		=100;
	ID_PRV1			=101;
	ID_PGM1v		=102;
	ID_PGM2			=103;
	ID_PGM2v		=104;
	ID_PRV2			=105;
	ID_PGM3			=106;
	ID_PGM3v		=107;
	ID_PRV3			=108;
	ID_PGM4			=109;
	ID_PGM4v		=110;
	ID_PRV4			=111;
	ID_PGM5			=112;
	ID_PGM5v		=113;
	ID_PRV5			=114;
	ID_PGM6			=115;
	ID_PGM6v		=116;
	ID_PRV6			=117;
	ID_PGM7			=118;
	ID_PGM7v		=119;
	ID_PRV7			=120;
	ID_PGM8			=121;
	ID_PGM8v		=122;
	ID_PRV8			=123;
	ID_Live_0 = 150;
	ID_Live_15 = 165;
	ID_Live_31 = 181;
	ID_Live_PGMDirty = 182;
	ID_Live_PGMClean = 183;
	ID_Live_Import = 184;
	ID_Live_PGM2 = 185;
	ID_Live_PGM3 = 186;
	ID_Live_PGM4 = 187;
	ID_Live_PGM5 = 188;
	ID_Live_PGM6 = 189;
	ID_Live_PGM7 = 190;
	ID_Live_PGM8 = 191;
	ID_Replay3_0 = 192;
	ID_Replay3_15 = 207;
	ID_Replay3_31 = 223;
	ID_Replay3_PGMDirty = 224;
	ID_Replay3_PGMClean = 225;
	ID_Replay3_Import = 226;
	ID_PGM2_480_270 = 227;    //only used for Dll.FrameReceiver for cnl register
	ID_PGM3_480_270 = 228;		 //only used for Dll.FrameReceiver for cnl register
	ID_PGM4_480_270= 229;		 //only used for Dll.FrameReceiver for cnl register
	ID_PGM5_480_270= 230;		 //only used for Dll.FrameReceiver for cnl register
	ID_PGM6_480_270= 231;		 //only used for Dll.FrameReceiver for cnl register
	ID_PGM7_480_270= 232;		 //only used for Dll.FrameReceiver for cnl register
	ID_PGM8_480_270= 233;		 //only used for Dll.FrameReceiver for cnl register
	ID_TGA_0= 234;				  //only used for Dll.FrameReceiver for cnl register
	ID_TGA_1= 235;				  //only used for Dll.FrameReceiver for cnl register
	ID_Cnl_Max=236;
};
enum CamID 
{	
	ID_Cam_0 = 0;
};
message Value_Recorder_Train_In_Out
{	
	uint32			count =1;
	repeated uint64			trainIn=2;
	repeated uint64			trainOut=3;
};
	
message Value_Player_Status
{
	message StatusInfo
	{
		CnlID		id=1;
		uint32		status=2;
	};
	uint32			count =1;
	repeated StatusInfo		 statusInfo=2;
};	

message Value_Camera_Type
{
	message ItemInfo{
		uint32 camID=1;
		bool  isNetworking=2;
	};
	uint32			count = 1;
	repeated ItemInfo	items=2;
};

message Value_Recorder_ClosedCaption
{
	message ItemInfo{
		uint32 camID=1;
		bool  hasClosedCaption=2;
	};
	uint32				count = 1;
	repeated ItemInfo	items=2;
};

message Value_Player_ClosedCaption
{
	message ItemInfo{
		uint32 playerid=1;
		bool  hasClosedCaption=2;
	};
	uint32				count = 1;
	repeated ItemInfo	items=2;
};


message Value_Player_Group
{
	message GroupInfo
	{
		CnlID		id=1;
		uint32		group=2;
	};
	uint32			 count = 1;
	repeated GroupInfo		 groupInfo=2;
};

message Value_Player_Camera
{
	message CameraInfo
	{
		CnlID		id=1;
		CamID		camera=2;
	};
	uint32			 count = 1;
	repeated CameraInfo		 cameraInfo=2;
};

message Value_Player_Type
{
	
enum PlayerType 
{
	PLAYER_TYPE_REPLAY=0;
	PLAYER_TYPE_LIVE=1;
};
	message TypeInfo
	{
		CnlID				id=1;
		PlayerType	type=2;
	};
	uint32				count = 1;
	repeated TypeInfo			typeInfo=2;
};

message Value_Player_AudioPresetId
{
	message TypeInfo
	{
		CnlID				id=1;
		uint32				audioPresetId=2;//-1 means not preset assigned
	};
	uint32				count = 1;
	repeated TypeInfo			typeInfo=2;
};

message Value_Player_Speed
{
	message SpeedInfo
	{
		CnlID				id=1;
		int32				speedN=2;
		int32				speedD=3;
	};
	uint32				count = 1;
	repeated SpeedInfo			speedInfo=2;
};

message Value_Player_Consigne
{
	message ConsigneInfo
	{
		CnlID				id=1;
		uint64			consigne=2;
	};
	uint32				count = 1;
	repeated ConsigneInfo		consigneInfo=2;
};

message Value_Player_Mode
{
	
enum PlayerMode
{
	clipMode=0;
	playlistMode=1;
};
	message ModeInfo
	{
		CnlID				id=1;
		PlayerMode		playerMode=2;
	};
	uint32				count = 1;
	repeated ModeInfo			modeInfo=2;
};

message Value_Player_Extend_Playlist
{
	message ExtendPlaylistInfo
	{
		CnlID				id=1;
		bool				bExtendPlaylist=2;
	};
	uint32				count = 1;
	repeated ExtendPlaylistInfo  extendPlaylistInfo=2;
};

message Value_Player_Limit_In_Out
{
	message LimitInfo
	{
		CnlID				id=1;
		bool				isLimitInRelative=2;
		bool				isLimitOutRelative=3;
		uint64			limitIn=4;
		uint64			limitOut=5;
	};
	uint32				count = 1;
	repeated LimitInfo			limitInfo=2;
};

message Value_Player_Loop_Mode
{
	
enum PlayerLoopMode
{
	OFF = 0;
	STD=1;
	PING_PONG=2;
};
	message LoopModeInfo
	{
		CnlID				id=1;
		PlayerLoopMode	loopMode=2;
	};
	uint32				count = 1;
	repeated LoopModeInfo		loopModeInfo=2;
};

message Value_Player_Loop_Count
{
	message LoopCountInfo
	{
		CnlID				id=1;
		uint32				loopCount=2;
	};
	uint32				count = 1;
	repeated LoopCountInfo		loopCountInfo=2;
};

message Value_Player_Playlist_ID
{
	message PlaylistIDInfo
	{
		CnlID	id=1;
		uint32	idSize=2;
		bytes playlistID=3;
	};
	uint32				count = 1;
	repeated PlaylistIDInfo		playlistIDInfo=2;
};

message Value_Player_Playlist_Element_ID
{
	message ElementIDInfo
	{
		CnlID				id=1;
		uint32				idSize=2;
		bytes elementID=3;
	};
	uint32				count = 1;
	repeated ElementIDInfo		elementIDInfo=2;
};

message Value_DVE_Mode
{
	
enum DVEMode 
{
	offMode=0;
	autoMode=1;
	manualMode=2;
};
	message DVEModeInfo
	{
		CnlID id=1;
		DVEMode				mode=2;
	};
	uint32				count = 1;
	repeated DVEModeInfo			modeInfo=2;
};

message Value_DVE_Type
{
	enum  DVEType 
	{
		dve_MIX = 0;
		dve_WIPE_LR=1;
		dve_WIPE_RL=2;
	};
	message DVETypeInfo
	{
		CnlID id=1;
		DVEType	type=2;
	};
	uint32					count = 1;
	repeated DVETypeInfo				typeInfo=2;
};

message Value_DVE_Channel
{
	uint32			 count = 1;
	repeated CnlID			 cnl=2;
};

message Value_DVE_Num
{
	message DVENumInfo
	{
		CnlID		id=1;
		int32		num=2;
	};
	uint32			 count = 1;
	repeated DVENumInfo		 numInfo=2;
};

message Value_DVE_Den
{
	message DVEDenInfo
	{
		CnlID		id=1;
		int32		den=2;
	};
	uint32			 count = 1;
	repeated DVEDenInfo		 denInfo=2;
};

message Value_DVE_CutThreshold
{
	message DVEThresholdInfo
	{
		CnlID		id=1;
		int32		threshold=2;
	};
	uint32			 count = 1;
	repeated DVEThresholdInfo thresholdInfo=2;
};

message Value_DVE_Custom_Transparency
{
	message DVECustomTransparencyInfo
	{
		CnlID		id=1;
		bool		bCustom=2;
	};
	uint32					  count = 1;
	repeated DVECustomTransparencyInfo customInfo=2;
};

message Value_RTD_Status
{
	message RTDStatusInfo
	{
		CnlID		id=1;
		bool		enable=2;
	};
	uint32			 count = 1;
	repeated RTDStatusInfo	 statusInfo=2;
};

enum RTDType 
	{
		rtd1=0;
		rtd2=1;
		rtd3=2;
		rtd4=3;
		rtd5=4;
		rtd6=5;
		rtd7=6;
		rtd_Max=7;
	};

message Value_RTD_Type
{
	message RTDTypeInfo
	{
		CnlID		id=1;
		RTDType	 type=2;
	};
	uint32					 count = 1;
	repeated RTDTypeInfo				 typeInfo=2;
};

message Value_RTD_Position
{
	message RTDPositionInfo
	{
		CnlID		id=1;
		uint32		 position=2;
	};
	uint32			 count = 1;
	repeated RTDPositionInfo	 positionInfo=2;
};
enum GFxCnl{
	a=0;
}
message Value_GFX_Status
{
	message GFXStatus
	{
		CnlID targetCnlID=1;
		GFxCnl gfxCnl=2;
		bool enable=3;
	};
	message PGMGFX
	{
		uint32			 count=1;
		repeated GFXStatus gfxStatus=2;
	};
	uint32			 pgmCount=1;
	repeated PGMGFX pgmGfx=2;
};

message Value_GFX_Position
{
	message GFXPosition
	{
		CnlID	 targetCnlID=1;
		GFxCnl	 gfxCnl=2;
		uint32 position=3;
	};
	message PGMGFX
	{
		uint32			 count=1;
		repeated GFXPosition gfxPosition=2;
	};
	uint32			 pgmCount=1;
	repeated PGMGFX pgmGfx=2;
};

message Value_GFX_Fade_In_Out_Duration
{
	message GFXFadeDuration
	{
		CnlID		targetCnlID=1;
		GFxCnl		gfxCnl=2;
		uint32		fadeInDuration=3;
		uint32		fadeOutDuration=4;
	};
	message PGMGFX
	{
		uint32			 count=1;
		repeated GFXFadeDuration gfxFadeDuration=2;
	};
	uint32				pgmCount=1;
	repeated PGMGFX pgmGfx=2;
};

message Value_GFX_Loop_In_Out
{
	message GFXLoopInOut
	{
		CnlID targetCnlID=1;
		GFxCnl gfxCnl=2;
		uint32 loopIn=3;
		uint32 loopOut=4;
	};
	message PGMGFX
	{
		uint32			count=1;
		repeated GFXLoopInOut gfxLoopInOut=2;
	};
	uint32				pgmCount=1;
	repeated PGMGFX pgmGfx=2;
};

message Value_GFX_Loop_Count
{
	message GFXLoopCnt
	{
		CnlID targetCnlID=1;
		GFxCnl gfxCnl=2;
		uint32 loopCnt=3;
	};
	message PGMGFX
	{
		uint32		  count=1;
		repeated GFXLoopCnt gfxLoopCnt=2;
	};
	uint32				pgmCount=1;
	repeated PGMGFX pgmGfx=2;
};
enum TGAChannel 
{	TGAChannel_gfx1=0;
	TGAChannel_gfx2=1;
	TGAChannel_gfx3=2;
	TGAChannel_rtd1=3;
	TGAChannel_rtd2=4;
	TGAChannel_PiP_PGM=5;
	TGAChannel_PiP_PRV=6;
	TGAChannel_rtd3=7;
	TGAChannel_rtd4=8;
	TGAChannel_rtd5=9;
	TGAChannel_rtd6=10;
	TGAChannel_rtd7=11;
	TGAChannel_max=12;
};

enum TGAChannelStatus
{
	TGAChannelStatus_None=0;
	TGAChannelStatus_PreloadingSecure=1;
	TGAChannelStatus_Preloaded=2;
	TGAChannelStatus_PreloadingNotSecure=3;
};
message Value_GFX_Preload_Status
{
	message GFXPreloadStatus
	{
		TGAChannel			gfxCnl=1;
		TGAChannelStatus	preloadingStatus=2;
		uint32			preloadNum=3;
		uint32			preloadDen=4;
		uint32			idSize=5;
		bytes id=6;
	};
	uint32				count=1;
	repeated GFXPreloadStatus gfxPreloadStatus=2;
};

message Value_HealthInfo_Version
{
	uint32			 version0=1;
	uint32			 version1=2;
	uint32			 version2=3;
	uint32			 version3=4;
};

message Value_HealthInfo_Mixer_Status
{
	bool			 hasConnectedAudioMixer=1;
};

message Value_HealthInfo_Network_Bandwidth
{
	uint32			networkBandwidth=1;
};

message Value_HealthInfo_GPU_Temperature
{
	uint32				count = 1;
	repeated int32 temperatureGPU=2;
};

message Value_HealthInfo_AJA_Status
{
	message InfoAJA
	{
		int32	 temperatureAJA=1;
		bool	 lostAJA=2;
	};

	uint32				count = 1;
	repeated InfoAJA status=2;
};

message Value_HealthInfo_HDD_Status
{
	uint32			hddFaulty=1;
};

message Value_HealthInfo_ASIO_Status
{
	
	message ValueStatusPair
{
	uint32 val=1;
	bool isGood=2;	
};
	message AsioStatus
{
	ValueStatusPair sampleRate=1;
	ValueStatusPair bufferSize=2;
	ValueStatusPair inputLatency=3;
	ValueStatusPair outputLatency=4;
};
	AsioStatus			status=1;
};

message Value_HealthInfo_External_TimeCode
{
	bool				isExternalTC=1;
};

message Value_CustomInfo
{
	message InfoPair
	{
		uint32 keySize=1;
		uint32 valueSize=2;
		bytes key=3;
		bytes value=4;
	};

	uint32				nbCustomInfo=1;
	repeated InfoPair infoArray=2;
};

message Value_BMR_Setting
{
	uint32				type=1;
	uint32			bufSize=2;
	bytes buf=3;
};

message Value_VuMeter_Live_Mixer_PGM
{
	message VuMeter
	{
		uint32 count=1;
		repeated float dbTbl=2;
	};

	VuMeter				mixerMeter=1;

	uint32 countofLiveMeter=2;
	repeated VuMeter liveMeter=3;

	uint32 countofPRV=4;
	repeated VuMeter prvMeter=5;

	uint32 countofPGM=6;   //each PGM has clean ,dirty and player vumeters
	message PGMUV {
		VuMeter uvClean=1;
		VuMeter dirty=2;
		VuMeter player=3;
	};
	repeated PGMUV pgmMeter=7;  //clean1,dirty1 and player1,clean2 dirty2,player2
					  //and so on
};
enum PiPType 
	{
		PiP_PGM=0;
		PiP_PRV=1;
		PiP_Max=2;
	};

message Value_PiP_Status
{
	message PiPStatus
	{
		CnlID targetCnlID=1;
		PiPType pipCnl=2;
		bool enable=3;
		uint32	 bgFadeInDuration=4;
		uint32	 bgFadeOutDuration=5;
		uint32	 bgLoopIn=6;
		uint32	 bgLoopOut=7;
		uint32	 bgLoopCnt=8;
	};
	message PGMPiP
	{
		uint32			 count=1;
		repeated PiPStatus gfxStatus=2;
	};
	uint32			 pgmCount=1;
	repeated PGMPiP pgmPiP=2;
};

message Value_Server_Memory
{
	uint32			currentMemory_GB=1;
	uint32			expectedMemory_GB=2;
};

message Value_Cache_ReplayPlayer_HighResVideo
{
	message Range
	{
		uint64 currentFrameID=1;
		uint64 out=2;
	};
	uint32				count = 1;
	repeated Range				range=2;
};

message Value_Cache_ReplayPlayer_ExternalAudio
{
	message Range
	{
		uint64 currentFrameID=1;
		uint64 out=2;
	};
	uint32				count = 1;
	repeated Range				range=2;
};

message Value_Storage_Capacity
{
	uint32			blockSize_MB = 1;
	uint32			nbBlockUsed = 2;
	uint32			nbBlockTotal = 3;
};

enum  ReferenceStatus
{
	None=0;
	InvalidGenlock=1;
	ValidGenlock=2;
};

message Value_HealthInfo_ReferenceStatus
{
	ReferenceStatus		referenceStatus=1;
};

message Value_HealthInfo_SerialNumber
{
	message ServerInfo
	{
		int32				ip=1;
		uint32			snSize=2;
		bytes sn=3;
	};

	uint32			nbServer=1;
	repeated ServerInfo serverInfo=2;
};

message Value_HealthInfo_RemainingTimePerCam
{
	message RemainingTime
	{
		CamID	 cam=1;
		uint32 remainingSecond=2;
	};

	uint32				count = 1;
	repeated RemainingTime		remainingTime=2;
};

message Value_Film_Effect_Status
{
	repeated bool				PGM_enabled=1;
	repeated bool				PRV_enabled=2;
};

message Value_Common_TimeReference
{
	uint64			timeReference=1;
};
message BroadCastData{
	Value_Recorder_Train_In_Out      value_Recorder_Train_In_Out=1;
Value_Player_Status      value_Player_Status=2;
Value_Camera_Type      value_Camera_Type=3;
Value_Recorder_ClosedCaption      value_Recorder_ClosedCaption=4;
Value_Player_ClosedCaption      value_Player_ClosedCaption=5;
Value_Player_Group      value_Player_Group=6;
Value_Player_Camera      value_Player_Camera=7;
Value_Player_Type      value_Player_Type=8;
Value_Player_AudioPresetId      value_Player_AudioPresetId=9;
Value_Player_Speed      value_Player_Speed=10;
Value_Player_Consigne      value_Player_Consigne=11;
Value_Player_Mode      value_Player_Mode=12;
Value_Player_Extend_Playlist      value_Player_Extend_Playlist=13;
Value_Player_Limit_In_Out      value_Player_Limit_In_Out=14;
Value_Player_Loop_Mode      value_Player_Loop_Mode=15;
Value_Player_Loop_Count      value_Player_Loop_Count=16;
Value_Player_Playlist_ID      value_Player_Playlist_ID=17;
Value_Player_Playlist_Element_ID      value_Player_Playlist_Element_ID=18;
Value_DVE_Mode      value_DVE_Mode=19;
Value_DVE_Type      value_DVE_Type=20;
Value_DVE_Channel      value_DVE_Channel=21;
Value_DVE_Num      value_DVE_Num=22;
Value_DVE_Den      value_DVE_Den=23;
Value_DVE_CutThreshold      value_DVE_CutThreshold=24;
Value_DVE_Custom_Transparency      value_DVE_Custom_Transparency=25;
Value_RTD_Status      value_RTD_Status=26;
Value_RTD_Type      value_RTD_Type=27;
Value_RTD_Position      value_RTD_Position=28;
Value_GFX_Status      value_GFX_Status=29;
Value_GFX_Position      value_GFX_Position=30;
Value_GFX_Fade_In_Out_Duration      value_GFX_Fade_In_Out_Duration=31;
Value_GFX_Loop_In_Out      value_GFX_Loop_In_Out=32;
Value_GFX_Loop_Count      value_GFX_Loop_Count=33;
Value_GFX_Preload_Status      value_GFX_Preload_Status=34;
Value_HealthInfo_Version      value_HealthInfo_Version=35;
Value_HealthInfo_Mixer_Status      value_HealthInfo_Mixer_Status=36;
Value_HealthInfo_Network_Bandwidth      value_HealthInfo_Network_Bandwidth=37;
Value_HealthInfo_GPU_Temperature      value_HealthInfo_GPU_Temperature=38;
Value_HealthInfo_AJA_Status      value_HealthInfo_AJA_Status=39;
Value_HealthInfo_HDD_Status      value_HealthInfo_HDD_Status=40;
Value_HealthInfo_ASIO_Status      value_HealthInfo_ASIO_Status=41;
Value_HealthInfo_External_TimeCode      value_HealthInfo_External_TimeCode=42;
Value_CustomInfo      value_CustomInfo=43;
Value_BMR_Setting      value_BMR_Setting=44;
Value_VuMeter_Live_Mixer_PGM      value_VuMeter_Live_Mixer_PGM=45;
Value_PiP_Status      value_PiP_Status=46;
Value_Server_Memory      value_Server_Memory=47;
Value_Cache_ReplayPlayer_HighResVideo      value_Cache_ReplayPlayer_HighResVideo=48;
Value_Cache_ReplayPlayer_ExternalAudio      value_Cache_ReplayPlayer_ExternalAudio=49;
Value_Storage_Capacity      value_Storage_Capacity=50;
Value_HealthInfo_ReferenceStatus      value_HealthInfo_ReferenceStatus=51;
Value_HealthInfo_SerialNumber      value_HealthInfo_SerialNumber=52;
Value_HealthInfo_RemainingTimePerCam      value_HealthInfo_RemainingTimePerCam=53;
Value_Film_Effect_Status      value_Film_Effect_Status=54;
Value_Common_TimeReference      value_Common_TimeReference=55;


}
