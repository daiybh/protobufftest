// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: broadcast.proto

#include "broadcast.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_broadcast_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_Player_Status_StatusInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_Recorder_Train_In_Out;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_Player_Status;
}  // namespace protobuf_broadcast_2eproto
namespace GoogleProtoBB {
class Value_Recorder_Train_In_OutDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Recorder_Train_In_Out>
      _instance;
} _Value_Recorder_Train_In_Out_default_instance_;
class Value_Player_Status_StatusInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Player_Status_StatusInfo>
      _instance;
} _Value_Player_Status_StatusInfo_default_instance_;
class Value_Player_StatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Player_Status>
      _instance;
} _Value_Player_Status_default_instance_;
class BroadCastHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BroadCastHeader>
      _instance;
} _BroadCastHeader_default_instance_;
class BroadCastDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BroadCastData>
      _instance;
} _BroadCastData_default_instance_;
}  // namespace GoogleProtoBB
namespace protobuf_broadcast_2eproto {
static void InitDefaultsValue_Recorder_Train_In_Out() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Recorder_Train_In_Out_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Recorder_Train_In_Out();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Recorder_Train_In_Out::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_Recorder_Train_In_Out =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_Recorder_Train_In_Out}, {}};

static void InitDefaultsValue_Player_Status_StatusInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Player_Status_StatusInfo_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Player_Status_StatusInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Player_Status_StatusInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_Player_Status_StatusInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_Player_Status_StatusInfo}, {}};

static void InitDefaultsValue_Player_Status() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Player_Status_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Player_Status();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Player_Status::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_Player_Status =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_Player_Status}, {
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Status_StatusInfo.base,}};

static void InitDefaultsBroadCastHeader() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_BroadCastHeader_default_instance_;
    new (ptr) ::GoogleProtoBB::BroadCastHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::BroadCastHeader::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BroadCastHeader =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBroadCastHeader}, {}};

static void InitDefaultsBroadCastData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_BroadCastData_default_instance_;
    new (ptr) ::GoogleProtoBB::BroadCastData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::BroadCastData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_BroadCastData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsBroadCastData}, {
      &protobuf_broadcast_2eproto::scc_info_Value_Recorder_Train_In_Out.base,
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Status.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Recorder_Train_In_Out.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Player_Status_StatusInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Player_Status.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BroadCastHeader.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BroadCastData.base);
}

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Recorder_Train_In_Out, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Recorder_Train_In_Out, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Recorder_Train_In_Out, trainin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Recorder_Train_In_Out, trainout_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Status_StatusInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Status_StatusInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Status_StatusInfo, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Status, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Status, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Status, statusinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastHeader, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastHeader, datasize_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, recorder_train_in_out_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, player_status_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::GoogleProtoBB::Value_Recorder_Train_In_Out)},
  { 8, -1, sizeof(::GoogleProtoBB::Value_Player_Status_StatusInfo)},
  { 15, -1, sizeof(::GoogleProtoBB::Value_Player_Status)},
  { 22, -1, sizeof(::GoogleProtoBB::BroadCastHeader)},
  { 29, -1, sizeof(::GoogleProtoBB::BroadCastData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Recorder_Train_In_Out_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Player_Status_StatusInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Player_Status_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_BroadCastHeader_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_BroadCastData_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "broadcast.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017broadcast.proto\022\rGoogleProtoBB\"O\n\033Valu"
      "e_Recorder_Train_In_Out\022\r\n\005count\030\001 \001(\r\022\017"
      "\n\007trainIn\030\002 \003(\004\022\020\n\010trainOut\030\003 \003(\004\"\221\001\n\023Va"
      "lue_Player_Status\022\r\n\005count\030\001 \001(\r\022A\n\nstat"
      "usInfo\030\002 \003(\0132-.GoogleProtoBB.Value_Playe"
      "r_Status.StatusInfo\032(\n\nStatusInfo\022\n\n\002id\030"
      "\001 \001(\r\022\016\n\006status\030\002 \001(\r\"Q\n\017BroadCastHeader"
      "\022,\n\003key\030\001 \001(\0162\037.GoogleProtoBB.BroadcastI"
      "nfoKey\022\020\n\010dataSize\030\002 \001(\r\"\225\001\n\rBroadCastDa"
      "ta\022I\n\025Recorder_Train_In_Out\030\001 \001(\0132*.Goog"
      "leProtoBB.Value_Recorder_Train_In_Out\0229\n"
      "\rPlayer_Status\030\002 \001(\0132\".GoogleProtoBB.Val"
      "ue_Player_Status*\322\n\n\020BroadcastInfoKey\022\031\n"
      "\025Recorder_Train_In_Out\020\000\022\027\n\023CommonTimeRe"
      "ference\020\001\022\021\n\rPlayer_Status\020\002\022\020\n\014Player_G"
      "roup\020\003\022\021\n\rPlayer_Camera\020\004\022\017\n\013Player_Type"
      "\020\005\022\020\n\014Player_Speed\020\006\022\023\n\017Player_Consigne\020"
      "\007\022\017\n\013Player_Mode\020\010\022\032\n\026Player_Extend_Play"
      "list\020\t\022\017\n\013Camera_Type\020\n\022\027\n\023Player_Limit_"
      "In_Out\020\013\022\024\n\020Player_Loop_Mode\020\014\022\025\n\021Player"
      "_Loop_Count\020\r\022\026\n\022Player_Playlist_ID\020\016\022\036\n"
      "\032Player_Playlist_Element_ID\020\017\022\014\n\010DVE_Mod"
      "e\020\020\022\014\n\010DVE_Type\020\021\022\017\n\013DVE_Channel\020\022\022\013\n\007DV"
      "E_Num\020\023\022\013\n\007DVE_Den\020\024\022\024\n\020DVE_CutThreshold"
      "\020\025\022\033\n\027DVE_Custom_Transparency\020\026\022\016\n\nRTD_S"
      "tatus\020\027\022\014\n\010RTD_Type\020\030\022\020\n\014RTD_Position\020\031\022"
      "\016\n\nGFX_Status\020\032\022\020\n\014GFX_Position\020\033\022\034\n\030GFX"
      "_Fade_In_Out_Duration\020\034\022\023\n\017GFX_Loop_In_O"
      "ut\020\035\022\022\n\016GFX_Loop_Count\020\036\022\026\n\022GFX_Preload_"
      "Status\020\037\022\037\n\033HealthInfo_Storage_Capacity\020"
      " \022\026\n\022HealthInfo_Version\020!\022\033\n\027HealthInfo_"
      "Mixer_Status\020\"\022 \n\034HealthInfo_Network_Ban"
      "dwidth\020#\022\036\n\032HealthInfo_GPU_Temperature\020$"
      "\022\031\n\025HealthInfo_AJA_Status\020%\022\031\n\025HealthInf"
      "o_HDD_Status\020&\022\032\n\026HealthInfo_ASIO_Status"
      "\020\'\022 \n\034HealthInfo_External_TimeCode\020(\022\027\n\023"
      "CustomInfoBroadcast\020)\022\017\n\013BMR_Setting\020*\022\032"
      "\n\026VuMeter_Live_Mixer_PGM\020+\022\032\n\026Recorder_C"
      "lose_Caption\020,\022\030\n\024Player_Close_Caption\020-"
      "\022\024\n\020CustomInfoNotify\020.\022\030\n\024Player_AudioPr"
      "esetId\020/\022\016\n\nPiP_Status\0200\022\034\n\030HealthInfo_S"
      "erver_Memory\0201\022#\n\037Cache_ReplayPlayer_Hig"
      "hResVideo\0202\022$\n Cache_ReplayPlayer_Extern"
      "alAudio\0203\022\036\n\032HealthInfo_ReferenceStatus\020"
      "4\022\033\n\027HealthInfo_SerialNumber\0205\022\"\n\036Health"
      "Info_RemainingTimePerCam\0206\022\026\n\022Film_Effec"
      "t_Status\0207\022\t\n\005Tally\0208b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1869);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "broadcast.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_broadcast_2eproto
namespace GoogleProtoBB {
const ::google::protobuf::EnumDescriptor* BroadcastInfoKey_descriptor() {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_broadcast_2eproto::file_level_enum_descriptors[0];
}
bool BroadcastInfoKey_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Value_Recorder_Train_In_Out::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Recorder_Train_In_Out::kCountFieldNumber;
const int Value_Recorder_Train_In_Out::kTrainInFieldNumber;
const int Value_Recorder_Train_In_Out::kTrainOutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Recorder_Train_In_Out::Value_Recorder_Train_In_Out()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Recorder_Train_In_Out.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Recorder_Train_In_Out)
}
Value_Recorder_Train_In_Out::Value_Recorder_Train_In_Out(const Value_Recorder_Train_In_Out& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      trainin_(from.trainin_),
      trainout_(from.trainout_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Recorder_Train_In_Out)
}

void Value_Recorder_Train_In_Out::SharedCtor() {
  count_ = 0u;
}

Value_Recorder_Train_In_Out::~Value_Recorder_Train_In_Out() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Recorder_Train_In_Out)
  SharedDtor();
}

void Value_Recorder_Train_In_Out::SharedDtor() {
}

void Value_Recorder_Train_In_Out::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Recorder_Train_In_Out::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Recorder_Train_In_Out& Value_Recorder_Train_In_Out::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Recorder_Train_In_Out.base);
  return *internal_default_instance();
}


void Value_Recorder_Train_In_Out::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Recorder_Train_In_Out)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  trainin_.Clear();
  trainout_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_Recorder_Train_In_Out::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Recorder_Train_In_Out)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 trainIn = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_trainin())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_trainin())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 trainOut = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_trainout())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 26u, input, this->mutable_trainout())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Recorder_Train_In_Out)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Recorder_Train_In_Out)
  return false;
#undef DO_
}

void Value_Recorder_Train_In_Out::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Recorder_Train_In_Out)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated uint64 trainIn = 2;
  if (this->trainin_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _trainin_cached_byte_size_));
  }
  for (int i = 0, n = this->trainin_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->trainin(i), output);
  }

  // repeated uint64 trainOut = 3;
  if (this->trainout_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _trainout_cached_byte_size_));
  }
  for (int i = 0, n = this->trainout_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->trainout(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Recorder_Train_In_Out)
}

::google::protobuf::uint8* Value_Recorder_Train_In_Out::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Recorder_Train_In_Out)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated uint64 trainIn = 2;
  if (this->trainin_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _trainin_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->trainin_, target);
  }

  // repeated uint64 trainOut = 3;
  if (this->trainout_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _trainout_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->trainout_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Recorder_Train_In_Out)
  return target;
}

size_t Value_Recorder_Train_In_Out::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Recorder_Train_In_Out)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 trainIn = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->trainin_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _trainin_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 trainOut = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->trainout_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _trainout_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Recorder_Train_In_Out::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Recorder_Train_In_Out)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Recorder_Train_In_Out* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Recorder_Train_In_Out>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Recorder_Train_In_Out)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Recorder_Train_In_Out)
    MergeFrom(*source);
  }
}

void Value_Recorder_Train_In_Out::MergeFrom(const Value_Recorder_Train_In_Out& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Recorder_Train_In_Out)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  trainin_.MergeFrom(from.trainin_);
  trainout_.MergeFrom(from.trainout_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_Recorder_Train_In_Out::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Recorder_Train_In_Out)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Recorder_Train_In_Out::CopyFrom(const Value_Recorder_Train_In_Out& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Recorder_Train_In_Out)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Recorder_Train_In_Out::IsInitialized() const {
  return true;
}

void Value_Recorder_Train_In_Out::Swap(Value_Recorder_Train_In_Out* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Recorder_Train_In_Out::InternalSwap(Value_Recorder_Train_In_Out* other) {
  using std::swap;
  trainin_.InternalSwap(&other->trainin_);
  trainout_.InternalSwap(&other->trainout_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Recorder_Train_In_Out::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Player_Status_StatusInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Player_Status_StatusInfo::kIdFieldNumber;
const int Value_Player_Status_StatusInfo::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Player_Status_StatusInfo::Value_Player_Status_StatusInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Status_StatusInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Player_Status.StatusInfo)
}
Value_Player_Status_StatusInfo::Value_Player_Status_StatusInfo(const Value_Player_Status_StatusInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&id_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Player_Status.StatusInfo)
}

void Value_Player_Status_StatusInfo::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&id_)) + sizeof(status_));
}

Value_Player_Status_StatusInfo::~Value_Player_Status_StatusInfo() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Player_Status.StatusInfo)
  SharedDtor();
}

void Value_Player_Status_StatusInfo::SharedDtor() {
}

void Value_Player_Status_StatusInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Player_Status_StatusInfo::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Player_Status_StatusInfo& Value_Player_Status_StatusInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Player_Status_StatusInfo.base);
  return *internal_default_instance();
}


void Value_Player_Status_StatusInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Player_Status.StatusInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&id_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

bool Value_Player_Status_StatusInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Player_Status.StatusInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Player_Status.StatusInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Player_Status.StatusInfo)
  return false;
#undef DO_
}

void Value_Player_Status_StatusInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Player_Status.StatusInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // uint32 status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Player_Status.StatusInfo)
}

::google::protobuf::uint8* Value_Player_Status_StatusInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Player_Status.StatusInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // uint32 status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Player_Status.StatusInfo)
  return target;
}

size_t Value_Player_Status_StatusInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Player_Status.StatusInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // uint32 status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Player_Status_StatusInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Player_Status.StatusInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Player_Status_StatusInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Player_Status_StatusInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Player_Status.StatusInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Player_Status.StatusInfo)
    MergeFrom(*source);
  }
}

void Value_Player_Status_StatusInfo::MergeFrom(const Value_Player_Status_StatusInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Player_Status.StatusInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void Value_Player_Status_StatusInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Player_Status.StatusInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Player_Status_StatusInfo::CopyFrom(const Value_Player_Status_StatusInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Player_Status.StatusInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Player_Status_StatusInfo::IsInitialized() const {
  return true;
}

void Value_Player_Status_StatusInfo::Swap(Value_Player_Status_StatusInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Player_Status_StatusInfo::InternalSwap(Value_Player_Status_StatusInfo* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Player_Status_StatusInfo::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Player_Status::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Player_Status::kCountFieldNumber;
const int Value_Player_Status::kStatusInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Player_Status::Value_Player_Status()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Status.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Player_Status)
}
Value_Player_Status::Value_Player_Status(const Value_Player_Status& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      statusinfo_(from.statusinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Player_Status)
}

void Value_Player_Status::SharedCtor() {
  count_ = 0u;
}

Value_Player_Status::~Value_Player_Status() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Player_Status)
  SharedDtor();
}

void Value_Player_Status::SharedDtor() {
}

void Value_Player_Status::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Player_Status::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Player_Status& Value_Player_Status::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Player_Status.base);
  return *internal_default_instance();
}


void Value_Player_Status::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Player_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  statusinfo_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_Player_Status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Player_Status)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_Player_Status.StatusInfo statusInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_statusinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Player_Status)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Player_Status)
  return false;
#undef DO_
}

void Value_Player_Status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Player_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_Player_Status.StatusInfo statusInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->statusinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->statusinfo(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Player_Status)
}

::google::protobuf::uint8* Value_Player_Status::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Player_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_Player_Status.StatusInfo statusInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->statusinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->statusinfo(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Player_Status)
  return target;
}

size_t Value_Player_Status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Player_Status)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_Player_Status.StatusInfo statusInfo = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->statusinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->statusinfo(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Player_Status::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Player_Status)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Player_Status* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Player_Status>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Player_Status)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Player_Status)
    MergeFrom(*source);
  }
}

void Value_Player_Status::MergeFrom(const Value_Player_Status& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Player_Status)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  statusinfo_.MergeFrom(from.statusinfo_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_Player_Status::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Player_Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Player_Status::CopyFrom(const Value_Player_Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Player_Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Player_Status::IsInitialized() const {
  return true;
}

void Value_Player_Status::Swap(Value_Player_Status* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Player_Status::InternalSwap(Value_Player_Status* other) {
  using std::swap;
  CastToBase(&statusinfo_)->InternalSwap(CastToBase(&other->statusinfo_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Player_Status::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BroadCastHeader::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BroadCastHeader::kKeyFieldNumber;
const int BroadCastHeader::kDataSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BroadCastHeader::BroadCastHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_BroadCastHeader.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.BroadCastHeader)
}
BroadCastHeader::BroadCastHeader(const BroadCastHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&key_, &from.key_,
    static_cast<size_t>(reinterpret_cast<char*>(&datasize_) -
    reinterpret_cast<char*>(&key_)) + sizeof(datasize_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.BroadCastHeader)
}

void BroadCastHeader::SharedCtor() {
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&datasize_) -
      reinterpret_cast<char*>(&key_)) + sizeof(datasize_));
}

BroadCastHeader::~BroadCastHeader() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.BroadCastHeader)
  SharedDtor();
}

void BroadCastHeader::SharedDtor() {
}

void BroadCastHeader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BroadCastHeader::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BroadCastHeader& BroadCastHeader::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_BroadCastHeader.base);
  return *internal_default_instance();
}


void BroadCastHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.BroadCastHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&datasize_) -
      reinterpret_cast<char*>(&key_)) + sizeof(datasize_));
  _internal_metadata_.Clear();
}

bool BroadCastHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.BroadCastHeader)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.BroadcastInfoKey key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_key(static_cast< ::GoogleProtoBB::BroadcastInfoKey >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dataSize = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &datasize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.BroadCastHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.BroadCastHeader)
  return false;
#undef DO_
}

void BroadCastHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.BroadCastHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.BroadcastInfoKey key = 1;
  if (this->key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->key(), output);
  }

  // uint32 dataSize = 2;
  if (this->datasize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->datasize(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.BroadCastHeader)
}

::google::protobuf::uint8* BroadCastHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.BroadCastHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.BroadcastInfoKey key = 1;
  if (this->key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->key(), target);
  }

  // uint32 dataSize = 2;
  if (this->datasize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->datasize(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.BroadCastHeader)
  return target;
}

size_t BroadCastHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.BroadCastHeader)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GoogleProtoBB.BroadcastInfoKey key = 1;
  if (this->key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->key());
  }

  // uint32 dataSize = 2;
  if (this->datasize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->datasize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BroadCastHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.BroadCastHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const BroadCastHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BroadCastHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.BroadCastHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.BroadCastHeader)
    MergeFrom(*source);
  }
}

void BroadCastHeader::MergeFrom(const BroadCastHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.BroadCastHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key() != 0) {
    set_key(from.key());
  }
  if (from.datasize() != 0) {
    set_datasize(from.datasize());
  }
}

void BroadCastHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.BroadCastHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BroadCastHeader::CopyFrom(const BroadCastHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.BroadCastHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BroadCastHeader::IsInitialized() const {
  return true;
}

void BroadCastHeader::Swap(BroadCastHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BroadCastHeader::InternalSwap(BroadCastHeader* other) {
  using std::swap;
  swap(key_, other->key_);
  swap(datasize_, other->datasize_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BroadCastHeader::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BroadCastData::InitAsDefaultInstance() {
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->recorder_train_in_out_ = const_cast< ::GoogleProtoBB::Value_Recorder_Train_In_Out*>(
      ::GoogleProtoBB::Value_Recorder_Train_In_Out::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->player_status_ = const_cast< ::GoogleProtoBB::Value_Player_Status*>(
      ::GoogleProtoBB::Value_Player_Status::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BroadCastData::kRecorderTrainInOutFieldNumber;
const int BroadCastData::kPlayerStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BroadCastData::BroadCastData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_BroadCastData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.BroadCastData)
}
BroadCastData::BroadCastData(const BroadCastData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_recorder_train_in_out()) {
    recorder_train_in_out_ = new ::GoogleProtoBB::Value_Recorder_Train_In_Out(*from.recorder_train_in_out_);
  } else {
    recorder_train_in_out_ = NULL;
  }
  if (from.has_player_status()) {
    player_status_ = new ::GoogleProtoBB::Value_Player_Status(*from.player_status_);
  } else {
    player_status_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.BroadCastData)
}

void BroadCastData::SharedCtor() {
  ::memset(&recorder_train_in_out_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_status_) -
      reinterpret_cast<char*>(&recorder_train_in_out_)) + sizeof(player_status_));
}

BroadCastData::~BroadCastData() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.BroadCastData)
  SharedDtor();
}

void BroadCastData::SharedDtor() {
  if (this != internal_default_instance()) delete recorder_train_in_out_;
  if (this != internal_default_instance()) delete player_status_;
}

void BroadCastData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BroadCastData::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BroadCastData& BroadCastData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_BroadCastData.base);
  return *internal_default_instance();
}


void BroadCastData::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.BroadCastData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && recorder_train_in_out_ != NULL) {
    delete recorder_train_in_out_;
  }
  recorder_train_in_out_ = NULL;
  if (GetArenaNoVirtual() == NULL && player_status_ != NULL) {
    delete player_status_;
  }
  player_status_ = NULL;
  _internal_metadata_.Clear();
}

bool BroadCastData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.BroadCastData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.Value_Recorder_Train_In_Out Recorder_Train_In_Out = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_recorder_train_in_out()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_Player_Status Player_Status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.BroadCastData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.BroadCastData)
  return false;
#undef DO_
}

void BroadCastData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.BroadCastData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.Value_Recorder_Train_In_Out Recorder_Train_In_Out = 1;
  if (this->has_recorder_train_in_out()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_recorder_train_in_out(), output);
  }

  // .GoogleProtoBB.Value_Player_Status Player_Status = 2;
  if (this->has_player_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_player_status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.BroadCastData)
}

::google::protobuf::uint8* BroadCastData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.BroadCastData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.Value_Recorder_Train_In_Out Recorder_Train_In_Out = 1;
  if (this->has_recorder_train_in_out()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_recorder_train_in_out(), deterministic, target);
  }

  // .GoogleProtoBB.Value_Player_Status Player_Status = 2;
  if (this->has_player_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_player_status(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.BroadCastData)
  return target;
}

size_t BroadCastData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.BroadCastData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GoogleProtoBB.Value_Recorder_Train_In_Out Recorder_Train_In_Out = 1;
  if (this->has_recorder_train_in_out()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *recorder_train_in_out_);
  }

  // .GoogleProtoBB.Value_Player_Status Player_Status = 2;
  if (this->has_player_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *player_status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BroadCastData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.BroadCastData)
  GOOGLE_DCHECK_NE(&from, this);
  const BroadCastData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BroadCastData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.BroadCastData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.BroadCastData)
    MergeFrom(*source);
  }
}

void BroadCastData::MergeFrom(const BroadCastData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.BroadCastData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_recorder_train_in_out()) {
    mutable_recorder_train_in_out()->::GoogleProtoBB::Value_Recorder_Train_In_Out::MergeFrom(from.recorder_train_in_out());
  }
  if (from.has_player_status()) {
    mutable_player_status()->::GoogleProtoBB::Value_Player_Status::MergeFrom(from.player_status());
  }
}

void BroadCastData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.BroadCastData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BroadCastData::CopyFrom(const BroadCastData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.BroadCastData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BroadCastData::IsInitialized() const {
  return true;
}

void BroadCastData::Swap(BroadCastData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BroadCastData::InternalSwap(BroadCastData* other) {
  using std::swap;
  swap(recorder_train_in_out_, other->recorder_train_in_out_);
  swap(player_status_, other->player_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BroadCastData::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace GoogleProtoBB
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Recorder_Train_In_Out* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Recorder_Train_In_Out >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Recorder_Train_In_Out >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Player_Status_StatusInfo* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Player_Status_StatusInfo >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Player_Status_StatusInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Player_Status* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Player_Status >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Player_Status >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::BroadCastHeader* Arena::CreateMaybeMessage< ::GoogleProtoBB::BroadCastHeader >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::BroadCastHeader >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::BroadCastData* Arena::CreateMaybeMessage< ::GoogleProtoBB::BroadCastData >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::BroadCastData >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
