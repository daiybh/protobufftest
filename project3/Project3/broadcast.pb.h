// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: broadcast.proto

#ifndef PROTOBUF_INCLUDED_broadcast_2eproto
#define PROTOBUF_INCLUDED_broadcast_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto 

namespace protobuf_broadcast_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[10];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_broadcast_2eproto
namespace GoogleProtoBB {
class BroadCastData;
class BroadCastDataDefaultTypeInternal;
extern BroadCastDataDefaultTypeInternal _BroadCastData_default_instance_;
class Value_Camera_Type;
class Value_Camera_TypeDefaultTypeInternal;
extern Value_Camera_TypeDefaultTypeInternal _Value_Camera_Type_default_instance_;
class Value_Camera_Type_ItemInfo;
class Value_Camera_Type_ItemInfoDefaultTypeInternal;
extern Value_Camera_Type_ItemInfoDefaultTypeInternal _Value_Camera_Type_ItemInfo_default_instance_;
class Value_Player_ClosedCaption;
class Value_Player_ClosedCaptionDefaultTypeInternal;
extern Value_Player_ClosedCaptionDefaultTypeInternal _Value_Player_ClosedCaption_default_instance_;
class Value_Player_ClosedCaption_ItemInfo;
class Value_Player_ClosedCaption_ItemInfoDefaultTypeInternal;
extern Value_Player_ClosedCaption_ItemInfoDefaultTypeInternal _Value_Player_ClosedCaption_ItemInfo_default_instance_;
class Value_Player_Status;
class Value_Player_StatusDefaultTypeInternal;
extern Value_Player_StatusDefaultTypeInternal _Value_Player_Status_default_instance_;
class Value_Player_Status_StatusInfo;
class Value_Player_Status_StatusInfoDefaultTypeInternal;
extern Value_Player_Status_StatusInfoDefaultTypeInternal _Value_Player_Status_StatusInfo_default_instance_;
class Value_Recorder_ClosedCaption;
class Value_Recorder_ClosedCaptionDefaultTypeInternal;
extern Value_Recorder_ClosedCaptionDefaultTypeInternal _Value_Recorder_ClosedCaption_default_instance_;
class Value_Recorder_ClosedCaption_ItemInfo;
class Value_Recorder_ClosedCaption_ItemInfoDefaultTypeInternal;
extern Value_Recorder_ClosedCaption_ItemInfoDefaultTypeInternal _Value_Recorder_ClosedCaption_ItemInfo_default_instance_;
class Value_Recorder_Train_In_Out;
class Value_Recorder_Train_In_OutDefaultTypeInternal;
extern Value_Recorder_Train_In_OutDefaultTypeInternal _Value_Recorder_Train_In_Out_default_instance_;
}  // namespace GoogleProtoBB
namespace google {
namespace protobuf {
template<> ::GoogleProtoBB::BroadCastData* Arena::CreateMaybeMessage<::GoogleProtoBB::BroadCastData>(Arena*);
template<> ::GoogleProtoBB::Value_Camera_Type* Arena::CreateMaybeMessage<::GoogleProtoBB::Value_Camera_Type>(Arena*);
template<> ::GoogleProtoBB::Value_Camera_Type_ItemInfo* Arena::CreateMaybeMessage<::GoogleProtoBB::Value_Camera_Type_ItemInfo>(Arena*);
template<> ::GoogleProtoBB::Value_Player_ClosedCaption* Arena::CreateMaybeMessage<::GoogleProtoBB::Value_Player_ClosedCaption>(Arena*);
template<> ::GoogleProtoBB::Value_Player_ClosedCaption_ItemInfo* Arena::CreateMaybeMessage<::GoogleProtoBB::Value_Player_ClosedCaption_ItemInfo>(Arena*);
template<> ::GoogleProtoBB::Value_Player_Status* Arena::CreateMaybeMessage<::GoogleProtoBB::Value_Player_Status>(Arena*);
template<> ::GoogleProtoBB::Value_Player_Status_StatusInfo* Arena::CreateMaybeMessage<::GoogleProtoBB::Value_Player_Status_StatusInfo>(Arena*);
template<> ::GoogleProtoBB::Value_Recorder_ClosedCaption* Arena::CreateMaybeMessage<::GoogleProtoBB::Value_Recorder_ClosedCaption>(Arena*);
template<> ::GoogleProtoBB::Value_Recorder_ClosedCaption_ItemInfo* Arena::CreateMaybeMessage<::GoogleProtoBB::Value_Recorder_ClosedCaption_ItemInfo>(Arena*);
template<> ::GoogleProtoBB::Value_Recorder_Train_In_Out* Arena::CreateMaybeMessage<::GoogleProtoBB::Value_Recorder_Train_In_Out>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace GoogleProtoBB {

enum BroadcastInfoKey {
  Recorder_Train_In_Out = 0,
  CommonTimeReference = 1,
  Player_Status = 2,
  Player_Group = 3,
  Player_Camera = 4,
  Player_Type = 5,
  Player_Speed = 6,
  Player_Consigne = 7,
  Player_Mode = 8,
  Player_Extend_Playlist = 9,
  Camera_Type = 10,
  Player_Limit_In_Out = 11,
  Player_Loop_Mode = 12,
  Player_Loop_Count = 13,
  Player_Playlist_ID = 14,
  Player_Playlist_Element_ID = 15,
  DVE_Mode = 16,
  DVE_Type = 17,
  DVE_Channel = 18,
  DVE_Num = 19,
  DVE_Den = 20,
  DVE_CutThreshold = 21,
  DVE_Custom_Transparency = 22,
  RTD_Status = 23,
  RTD_Type = 24,
  RTD_Position = 25,
  GFX_Status = 26,
  GFX_Position = 27,
  GFX_Fade_In_Out_Duration = 28,
  GFX_Loop_In_Out = 29,
  GFX_Loop_Count = 30,
  GFX_Preload_Status = 31,
  HealthInfo_Storage_Capacity = 32,
  HealthInfo_Version = 33,
  HealthInfo_Mixer_Status = 34,
  HealthInfo_Network_Bandwidth = 35,
  HealthInfo_GPU_Temperature = 36,
  HealthInfo_AJA_Status = 37,
  HealthInfo_HDD_Status = 38,
  HealthInfo_ASIO_Status = 39,
  HealthInfo_External_TimeCode = 40,
  CustomInfoBroadcast = 41,
  BMR_Setting = 42,
  VuMeter_Live_Mixer_PGM = 43,
  Recorder_Close_Caption = 44,
  Player_Close_Caption = 45,
  CustomInfoNotify = 46,
  Player_AudioPresetId = 47,
  PiP_Status = 48,
  HealthInfo_Server_Memory = 49,
  Cache_ReplayPlayer_HighResVideo = 50,
  Cache_ReplayPlayer_ExternalAudio = 51,
  HealthInfo_ReferenceStatus = 52,
  HealthInfo_SerialNumber = 53,
  HealthInfo_RemainingTimePerCam = 54,
  Film_Effect_Status = 55,
  Tally = 56,
  BroadcastInfoKey_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BroadcastInfoKey_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BroadcastInfoKey_IsValid(int value);
const BroadcastInfoKey BroadcastInfoKey_MIN = Recorder_Train_In_Out;
const BroadcastInfoKey BroadcastInfoKey_MAX = Tally;
const int BroadcastInfoKey_ARRAYSIZE = BroadcastInfoKey_MAX + 1;

const ::google::protobuf::EnumDescriptor* BroadcastInfoKey_descriptor();
inline const ::std::string& BroadcastInfoKey_Name(BroadcastInfoKey value) {
  return ::google::protobuf::internal::NameOfEnum(
    BroadcastInfoKey_descriptor(), value);
}
inline bool BroadcastInfoKey_Parse(
    const ::std::string& name, BroadcastInfoKey* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BroadcastInfoKey>(
    BroadcastInfoKey_descriptor(), name, value);
}
enum CnlID {
  ID_Replay1_0 = 0,
  ID_Replay1_15 = 15,
  ID_Replay1_31 = 31,
  ID_Replay1_PGMDirty = 32,
  ID_Replay1_PGMClean = 33,
  ID_Replay1_Import = 34,
  ID_Replay2_0 = 50,
  ID_Replay2_15 = 65,
  ID_Replay2_31 = 81,
  ID_Replay2_PGMDirty = 82,
  ID_Replay2_PGMClean = 83,
  ID_Replay2_Import = 84,
  ID_PGM1 = 100,
  ID_PRV1 = 101,
  ID_PGM1v = 102,
  ID_PGM2 = 103,
  ID_PGM2v = 104,
  ID_PRV2 = 105,
  ID_PGM3 = 106,
  ID_PGM3v = 107,
  ID_PRV3 = 108,
  ID_PGM4 = 109,
  ID_PGM4v = 110,
  ID_PRV4 = 111,
  ID_PGM5 = 112,
  ID_PGM5v = 113,
  ID_PRV5 = 114,
  ID_PGM6 = 115,
  ID_PGM6v = 116,
  ID_PRV6 = 117,
  ID_PGM7 = 118,
  ID_PGM7v = 119,
  ID_PRV7 = 120,
  ID_PGM8 = 121,
  ID_PGM8v = 122,
  ID_PRV8 = 123,
  ID_Live_0 = 150,
  ID_Live_15 = 165,
  ID_Live_31 = 181,
  ID_Live_PGMDirty = 182,
  ID_Live_PGMClean = 183,
  ID_Live_Import = 184,
  ID_Live_PGM2 = 185,
  ID_Live_PGM3 = 186,
  ID_Live_PGM4 = 187,
  ID_Live_PGM5 = 188,
  ID_Live_PGM6 = 189,
  ID_Live_PGM7 = 190,
  ID_Live_PGM8 = 191,
  ID_Replay3_0 = 192,
  ID_Replay3_15 = 207,
  ID_Replay3_31 = 223,
  ID_Replay3_PGMDirty = 224,
  ID_Replay3_PGMClean = 225,
  ID_Replay3_Import = 226,
  ID_PGM2_480_270 = 227,
  ID_PGM3_480_270 = 228,
  ID_PGM4_480_270 = 229,
  ID_PGM5_480_270 = 230,
  ID_PGM6_480_270 = 231,
  ID_PGM7_480_270 = 232,
  ID_PGM8_480_270 = 233,
  ID_TGA_0 = 234,
  ID_TGA_1 = 235,
  ID_Cnl_Max = 236,
  CnlID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CnlID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CnlID_IsValid(int value);
const CnlID CnlID_MIN = ID_Replay1_0;
const CnlID CnlID_MAX = ID_Cnl_Max;
const int CnlID_ARRAYSIZE = CnlID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CnlID_descriptor();
inline const ::std::string& CnlID_Name(CnlID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CnlID_descriptor(), value);
}
inline bool CnlID_Parse(
    const ::std::string& name, CnlID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CnlID>(
    CnlID_descriptor(), name, value);
}
// ===================================================================

class Value_Recorder_Train_In_Out : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GoogleProtoBB.Value_Recorder_Train_In_Out) */ {
 public:
  Value_Recorder_Train_In_Out();
  virtual ~Value_Recorder_Train_In_Out();

  Value_Recorder_Train_In_Out(const Value_Recorder_Train_In_Out& from);

  inline Value_Recorder_Train_In_Out& operator=(const Value_Recorder_Train_In_Out& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Value_Recorder_Train_In_Out(Value_Recorder_Train_In_Out&& from) noexcept
    : Value_Recorder_Train_In_Out() {
    *this = ::std::move(from);
  }

  inline Value_Recorder_Train_In_Out& operator=(Value_Recorder_Train_In_Out&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Value_Recorder_Train_In_Out& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Value_Recorder_Train_In_Out* internal_default_instance() {
    return reinterpret_cast<const Value_Recorder_Train_In_Out*>(
               &_Value_Recorder_Train_In_Out_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Value_Recorder_Train_In_Out* other);
  friend void swap(Value_Recorder_Train_In_Out& a, Value_Recorder_Train_In_Out& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Value_Recorder_Train_In_Out* New() const final {
    return CreateMaybeMessage<Value_Recorder_Train_In_Out>(NULL);
  }

  Value_Recorder_Train_In_Out* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Value_Recorder_Train_In_Out>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Value_Recorder_Train_In_Out& from);
  void MergeFrom(const Value_Recorder_Train_In_Out& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Value_Recorder_Train_In_Out* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 trainIn = 2;
  int trainin_size() const;
  void clear_trainin();
  static const int kTrainInFieldNumber = 2;
  ::google::protobuf::uint64 trainin(int index) const;
  void set_trainin(int index, ::google::protobuf::uint64 value);
  void add_trainin(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      trainin() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_trainin();

  // repeated uint64 trainOut = 3;
  int trainout_size() const;
  void clear_trainout();
  static const int kTrainOutFieldNumber = 3;
  ::google::protobuf::uint64 trainout(int index) const;
  void set_trainout(int index, ::google::protobuf::uint64 value);
  void add_trainout(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      trainout() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_trainout();

  // uint32 count = 1;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GoogleProtoBB.Value_Recorder_Train_In_Out)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > trainin_;
  mutable int _trainin_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > trainout_;
  mutable int _trainout_cached_byte_size_;
  ::google::protobuf::uint32 count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_broadcast_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Value_Player_Status_StatusInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GoogleProtoBB.Value_Player_Status.StatusInfo) */ {
 public:
  Value_Player_Status_StatusInfo();
  virtual ~Value_Player_Status_StatusInfo();

  Value_Player_Status_StatusInfo(const Value_Player_Status_StatusInfo& from);

  inline Value_Player_Status_StatusInfo& operator=(const Value_Player_Status_StatusInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Value_Player_Status_StatusInfo(Value_Player_Status_StatusInfo&& from) noexcept
    : Value_Player_Status_StatusInfo() {
    *this = ::std::move(from);
  }

  inline Value_Player_Status_StatusInfo& operator=(Value_Player_Status_StatusInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Value_Player_Status_StatusInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Value_Player_Status_StatusInfo* internal_default_instance() {
    return reinterpret_cast<const Value_Player_Status_StatusInfo*>(
               &_Value_Player_Status_StatusInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Value_Player_Status_StatusInfo* other);
  friend void swap(Value_Player_Status_StatusInfo& a, Value_Player_Status_StatusInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Value_Player_Status_StatusInfo* New() const final {
    return CreateMaybeMessage<Value_Player_Status_StatusInfo>(NULL);
  }

  Value_Player_Status_StatusInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Value_Player_Status_StatusInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Value_Player_Status_StatusInfo& from);
  void MergeFrom(const Value_Player_Status_StatusInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Value_Player_Status_StatusInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .GoogleProtoBB.CnlID id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::GoogleProtoBB::CnlID id() const;
  void set_id(::GoogleProtoBB::CnlID value);

  // uint32 status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GoogleProtoBB.Value_Player_Status.StatusInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int id_;
  ::google::protobuf::uint32 status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_broadcast_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Value_Player_Status : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GoogleProtoBB.Value_Player_Status) */ {
 public:
  Value_Player_Status();
  virtual ~Value_Player_Status();

  Value_Player_Status(const Value_Player_Status& from);

  inline Value_Player_Status& operator=(const Value_Player_Status& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Value_Player_Status(Value_Player_Status&& from) noexcept
    : Value_Player_Status() {
    *this = ::std::move(from);
  }

  inline Value_Player_Status& operator=(Value_Player_Status&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Value_Player_Status& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Value_Player_Status* internal_default_instance() {
    return reinterpret_cast<const Value_Player_Status*>(
               &_Value_Player_Status_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Value_Player_Status* other);
  friend void swap(Value_Player_Status& a, Value_Player_Status& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Value_Player_Status* New() const final {
    return CreateMaybeMessage<Value_Player_Status>(NULL);
  }

  Value_Player_Status* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Value_Player_Status>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Value_Player_Status& from);
  void MergeFrom(const Value_Player_Status& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Value_Player_Status* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Value_Player_Status_StatusInfo StatusInfo;

  // accessors -------------------------------------------------------

  // repeated .GoogleProtoBB.Value_Player_Status.StatusInfo statusInfo = 2;
  int statusinfo_size() const;
  void clear_statusinfo();
  static const int kStatusInfoFieldNumber = 2;
  ::GoogleProtoBB::Value_Player_Status_StatusInfo* mutable_statusinfo(int index);
  ::google::protobuf::RepeatedPtrField< ::GoogleProtoBB::Value_Player_Status_StatusInfo >*
      mutable_statusinfo();
  const ::GoogleProtoBB::Value_Player_Status_StatusInfo& statusinfo(int index) const;
  ::GoogleProtoBB::Value_Player_Status_StatusInfo* add_statusinfo();
  const ::google::protobuf::RepeatedPtrField< ::GoogleProtoBB::Value_Player_Status_StatusInfo >&
      statusinfo() const;

  // uint32 count = 1;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GoogleProtoBB.Value_Player_Status)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::GoogleProtoBB::Value_Player_Status_StatusInfo > statusinfo_;
  ::google::protobuf::uint32 count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_broadcast_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Value_Camera_Type_ItemInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GoogleProtoBB.Value_Camera_Type.ItemInfo) */ {
 public:
  Value_Camera_Type_ItemInfo();
  virtual ~Value_Camera_Type_ItemInfo();

  Value_Camera_Type_ItemInfo(const Value_Camera_Type_ItemInfo& from);

  inline Value_Camera_Type_ItemInfo& operator=(const Value_Camera_Type_ItemInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Value_Camera_Type_ItemInfo(Value_Camera_Type_ItemInfo&& from) noexcept
    : Value_Camera_Type_ItemInfo() {
    *this = ::std::move(from);
  }

  inline Value_Camera_Type_ItemInfo& operator=(Value_Camera_Type_ItemInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Value_Camera_Type_ItemInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Value_Camera_Type_ItemInfo* internal_default_instance() {
    return reinterpret_cast<const Value_Camera_Type_ItemInfo*>(
               &_Value_Camera_Type_ItemInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Value_Camera_Type_ItemInfo* other);
  friend void swap(Value_Camera_Type_ItemInfo& a, Value_Camera_Type_ItemInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Value_Camera_Type_ItemInfo* New() const final {
    return CreateMaybeMessage<Value_Camera_Type_ItemInfo>(NULL);
  }

  Value_Camera_Type_ItemInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Value_Camera_Type_ItemInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Value_Camera_Type_ItemInfo& from);
  void MergeFrom(const Value_Camera_Type_ItemInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Value_Camera_Type_ItemInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 camID = 1;
  void clear_camid();
  static const int kCamIDFieldNumber = 1;
  ::google::protobuf::uint32 camid() const;
  void set_camid(::google::protobuf::uint32 value);

  // bool isNetworking = 2;
  void clear_isnetworking();
  static const int kIsNetworkingFieldNumber = 2;
  bool isnetworking() const;
  void set_isnetworking(bool value);

  // @@protoc_insertion_point(class_scope:GoogleProtoBB.Value_Camera_Type.ItemInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 camid_;
  bool isnetworking_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_broadcast_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Value_Camera_Type : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GoogleProtoBB.Value_Camera_Type) */ {
 public:
  Value_Camera_Type();
  virtual ~Value_Camera_Type();

  Value_Camera_Type(const Value_Camera_Type& from);

  inline Value_Camera_Type& operator=(const Value_Camera_Type& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Value_Camera_Type(Value_Camera_Type&& from) noexcept
    : Value_Camera_Type() {
    *this = ::std::move(from);
  }

  inline Value_Camera_Type& operator=(Value_Camera_Type&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Value_Camera_Type& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Value_Camera_Type* internal_default_instance() {
    return reinterpret_cast<const Value_Camera_Type*>(
               &_Value_Camera_Type_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Value_Camera_Type* other);
  friend void swap(Value_Camera_Type& a, Value_Camera_Type& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Value_Camera_Type* New() const final {
    return CreateMaybeMessage<Value_Camera_Type>(NULL);
  }

  Value_Camera_Type* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Value_Camera_Type>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Value_Camera_Type& from);
  void MergeFrom(const Value_Camera_Type& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Value_Camera_Type* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Value_Camera_Type_ItemInfo ItemInfo;

  // accessors -------------------------------------------------------

  // repeated .GoogleProtoBB.Value_Camera_Type.ItemInfo items = 2;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 2;
  ::GoogleProtoBB::Value_Camera_Type_ItemInfo* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::GoogleProtoBB::Value_Camera_Type_ItemInfo >*
      mutable_items();
  const ::GoogleProtoBB::Value_Camera_Type_ItemInfo& items(int index) const;
  ::GoogleProtoBB::Value_Camera_Type_ItemInfo* add_items();
  const ::google::protobuf::RepeatedPtrField< ::GoogleProtoBB::Value_Camera_Type_ItemInfo >&
      items() const;

  // uint32 count = 1;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GoogleProtoBB.Value_Camera_Type)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::GoogleProtoBB::Value_Camera_Type_ItemInfo > items_;
  ::google::protobuf::uint32 count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_broadcast_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Value_Recorder_ClosedCaption_ItemInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GoogleProtoBB.Value_Recorder_ClosedCaption.ItemInfo) */ {
 public:
  Value_Recorder_ClosedCaption_ItemInfo();
  virtual ~Value_Recorder_ClosedCaption_ItemInfo();

  Value_Recorder_ClosedCaption_ItemInfo(const Value_Recorder_ClosedCaption_ItemInfo& from);

  inline Value_Recorder_ClosedCaption_ItemInfo& operator=(const Value_Recorder_ClosedCaption_ItemInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Value_Recorder_ClosedCaption_ItemInfo(Value_Recorder_ClosedCaption_ItemInfo&& from) noexcept
    : Value_Recorder_ClosedCaption_ItemInfo() {
    *this = ::std::move(from);
  }

  inline Value_Recorder_ClosedCaption_ItemInfo& operator=(Value_Recorder_ClosedCaption_ItemInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Value_Recorder_ClosedCaption_ItemInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Value_Recorder_ClosedCaption_ItemInfo* internal_default_instance() {
    return reinterpret_cast<const Value_Recorder_ClosedCaption_ItemInfo*>(
               &_Value_Recorder_ClosedCaption_ItemInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(Value_Recorder_ClosedCaption_ItemInfo* other);
  friend void swap(Value_Recorder_ClosedCaption_ItemInfo& a, Value_Recorder_ClosedCaption_ItemInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Value_Recorder_ClosedCaption_ItemInfo* New() const final {
    return CreateMaybeMessage<Value_Recorder_ClosedCaption_ItemInfo>(NULL);
  }

  Value_Recorder_ClosedCaption_ItemInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Value_Recorder_ClosedCaption_ItemInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Value_Recorder_ClosedCaption_ItemInfo& from);
  void MergeFrom(const Value_Recorder_ClosedCaption_ItemInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Value_Recorder_ClosedCaption_ItemInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 camID = 1;
  void clear_camid();
  static const int kCamIDFieldNumber = 1;
  ::google::protobuf::uint32 camid() const;
  void set_camid(::google::protobuf::uint32 value);

  // bool hasClosedCaption = 2;
  void clear_hasclosedcaption();
  static const int kHasClosedCaptionFieldNumber = 2;
  bool hasclosedcaption() const;
  void set_hasclosedcaption(bool value);

  // @@protoc_insertion_point(class_scope:GoogleProtoBB.Value_Recorder_ClosedCaption.ItemInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 camid_;
  bool hasclosedcaption_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_broadcast_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Value_Recorder_ClosedCaption : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GoogleProtoBB.Value_Recorder_ClosedCaption) */ {
 public:
  Value_Recorder_ClosedCaption();
  virtual ~Value_Recorder_ClosedCaption();

  Value_Recorder_ClosedCaption(const Value_Recorder_ClosedCaption& from);

  inline Value_Recorder_ClosedCaption& operator=(const Value_Recorder_ClosedCaption& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Value_Recorder_ClosedCaption(Value_Recorder_ClosedCaption&& from) noexcept
    : Value_Recorder_ClosedCaption() {
    *this = ::std::move(from);
  }

  inline Value_Recorder_ClosedCaption& operator=(Value_Recorder_ClosedCaption&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Value_Recorder_ClosedCaption& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Value_Recorder_ClosedCaption* internal_default_instance() {
    return reinterpret_cast<const Value_Recorder_ClosedCaption*>(
               &_Value_Recorder_ClosedCaption_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(Value_Recorder_ClosedCaption* other);
  friend void swap(Value_Recorder_ClosedCaption& a, Value_Recorder_ClosedCaption& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Value_Recorder_ClosedCaption* New() const final {
    return CreateMaybeMessage<Value_Recorder_ClosedCaption>(NULL);
  }

  Value_Recorder_ClosedCaption* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Value_Recorder_ClosedCaption>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Value_Recorder_ClosedCaption& from);
  void MergeFrom(const Value_Recorder_ClosedCaption& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Value_Recorder_ClosedCaption* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Value_Recorder_ClosedCaption_ItemInfo ItemInfo;

  // accessors -------------------------------------------------------

  // repeated .GoogleProtoBB.Value_Recorder_ClosedCaption.ItemInfo items = 2;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 2;
  ::GoogleProtoBB::Value_Recorder_ClosedCaption_ItemInfo* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::GoogleProtoBB::Value_Recorder_ClosedCaption_ItemInfo >*
      mutable_items();
  const ::GoogleProtoBB::Value_Recorder_ClosedCaption_ItemInfo& items(int index) const;
  ::GoogleProtoBB::Value_Recorder_ClosedCaption_ItemInfo* add_items();
  const ::google::protobuf::RepeatedPtrField< ::GoogleProtoBB::Value_Recorder_ClosedCaption_ItemInfo >&
      items() const;

  // uint32 count = 1;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GoogleProtoBB.Value_Recorder_ClosedCaption)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::GoogleProtoBB::Value_Recorder_ClosedCaption_ItemInfo > items_;
  ::google::protobuf::uint32 count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_broadcast_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Value_Player_ClosedCaption_ItemInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GoogleProtoBB.Value_Player_ClosedCaption.ItemInfo) */ {
 public:
  Value_Player_ClosedCaption_ItemInfo();
  virtual ~Value_Player_ClosedCaption_ItemInfo();

  Value_Player_ClosedCaption_ItemInfo(const Value_Player_ClosedCaption_ItemInfo& from);

  inline Value_Player_ClosedCaption_ItemInfo& operator=(const Value_Player_ClosedCaption_ItemInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Value_Player_ClosedCaption_ItemInfo(Value_Player_ClosedCaption_ItemInfo&& from) noexcept
    : Value_Player_ClosedCaption_ItemInfo() {
    *this = ::std::move(from);
  }

  inline Value_Player_ClosedCaption_ItemInfo& operator=(Value_Player_ClosedCaption_ItemInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Value_Player_ClosedCaption_ItemInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Value_Player_ClosedCaption_ItemInfo* internal_default_instance() {
    return reinterpret_cast<const Value_Player_ClosedCaption_ItemInfo*>(
               &_Value_Player_ClosedCaption_ItemInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(Value_Player_ClosedCaption_ItemInfo* other);
  friend void swap(Value_Player_ClosedCaption_ItemInfo& a, Value_Player_ClosedCaption_ItemInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Value_Player_ClosedCaption_ItemInfo* New() const final {
    return CreateMaybeMessage<Value_Player_ClosedCaption_ItemInfo>(NULL);
  }

  Value_Player_ClosedCaption_ItemInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Value_Player_ClosedCaption_ItemInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Value_Player_ClosedCaption_ItemInfo& from);
  void MergeFrom(const Value_Player_ClosedCaption_ItemInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Value_Player_ClosedCaption_ItemInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint32 playerid() const;
  void set_playerid(::google::protobuf::uint32 value);

  // bool hasClosedCaption = 2;
  void clear_hasclosedcaption();
  static const int kHasClosedCaptionFieldNumber = 2;
  bool hasclosedcaption() const;
  void set_hasclosedcaption(bool value);

  // @@protoc_insertion_point(class_scope:GoogleProtoBB.Value_Player_ClosedCaption.ItemInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 playerid_;
  bool hasclosedcaption_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_broadcast_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Value_Player_ClosedCaption : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GoogleProtoBB.Value_Player_ClosedCaption) */ {
 public:
  Value_Player_ClosedCaption();
  virtual ~Value_Player_ClosedCaption();

  Value_Player_ClosedCaption(const Value_Player_ClosedCaption& from);

  inline Value_Player_ClosedCaption& operator=(const Value_Player_ClosedCaption& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Value_Player_ClosedCaption(Value_Player_ClosedCaption&& from) noexcept
    : Value_Player_ClosedCaption() {
    *this = ::std::move(from);
  }

  inline Value_Player_ClosedCaption& operator=(Value_Player_ClosedCaption&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Value_Player_ClosedCaption& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Value_Player_ClosedCaption* internal_default_instance() {
    return reinterpret_cast<const Value_Player_ClosedCaption*>(
               &_Value_Player_ClosedCaption_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(Value_Player_ClosedCaption* other);
  friend void swap(Value_Player_ClosedCaption& a, Value_Player_ClosedCaption& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Value_Player_ClosedCaption* New() const final {
    return CreateMaybeMessage<Value_Player_ClosedCaption>(NULL);
  }

  Value_Player_ClosedCaption* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Value_Player_ClosedCaption>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Value_Player_ClosedCaption& from);
  void MergeFrom(const Value_Player_ClosedCaption& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Value_Player_ClosedCaption* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Value_Player_ClosedCaption_ItemInfo ItemInfo;

  // accessors -------------------------------------------------------

  // repeated .GoogleProtoBB.Value_Player_ClosedCaption.ItemInfo items = 2;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 2;
  ::GoogleProtoBB::Value_Player_ClosedCaption_ItemInfo* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::GoogleProtoBB::Value_Player_ClosedCaption_ItemInfo >*
      mutable_items();
  const ::GoogleProtoBB::Value_Player_ClosedCaption_ItemInfo& items(int index) const;
  ::GoogleProtoBB::Value_Player_ClosedCaption_ItemInfo* add_items();
  const ::google::protobuf::RepeatedPtrField< ::GoogleProtoBB::Value_Player_ClosedCaption_ItemInfo >&
      items() const;

  // uint32 count = 1;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GoogleProtoBB.Value_Player_ClosedCaption)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::GoogleProtoBB::Value_Player_ClosedCaption_ItemInfo > items_;
  ::google::protobuf::uint32 count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_broadcast_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BroadCastData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GoogleProtoBB.BroadCastData) */ {
 public:
  BroadCastData();
  virtual ~BroadCastData();

  BroadCastData(const BroadCastData& from);

  inline BroadCastData& operator=(const BroadCastData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BroadCastData(BroadCastData&& from) noexcept
    : BroadCastData() {
    *this = ::std::move(from);
  }

  inline BroadCastData& operator=(BroadCastData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BroadCastData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BroadCastData* internal_default_instance() {
    return reinterpret_cast<const BroadCastData*>(
               &_BroadCastData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(BroadCastData* other);
  friend void swap(BroadCastData& a, BroadCastData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BroadCastData* New() const final {
    return CreateMaybeMessage<BroadCastData>(NULL);
  }

  BroadCastData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BroadCastData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BroadCastData& from);
  void MergeFrom(const BroadCastData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BroadCastData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .GoogleProtoBB.Value_Recorder_Train_In_Out Recorder_Train_In_Out = 1;
  bool has_recorder_train_in_out() const;
  void clear_recorder_train_in_out();
  static const int kRecorderTrainInOutFieldNumber = 1;
  private:
  const ::GoogleProtoBB::Value_Recorder_Train_In_Out& _internal_recorder_train_in_out() const;
  public:
  const ::GoogleProtoBB::Value_Recorder_Train_In_Out& recorder_train_in_out() const;
  ::GoogleProtoBB::Value_Recorder_Train_In_Out* release_recorder_train_in_out();
  ::GoogleProtoBB::Value_Recorder_Train_In_Out* mutable_recorder_train_in_out();
  void set_allocated_recorder_train_in_out(::GoogleProtoBB::Value_Recorder_Train_In_Out* recorder_train_in_out);

  // .GoogleProtoBB.Value_Player_Status Player_Status = 2;
  bool has_player_status() const;
  void clear_player_status();
  static const int kPlayerStatusFieldNumber = 2;
  private:
  const ::GoogleProtoBB::Value_Player_Status& _internal_player_status() const;
  public:
  const ::GoogleProtoBB::Value_Player_Status& player_status() const;
  ::GoogleProtoBB::Value_Player_Status* release_player_status();
  ::GoogleProtoBB::Value_Player_Status* mutable_player_status();
  void set_allocated_player_status(::GoogleProtoBB::Value_Player_Status* player_status);

  // .GoogleProtoBB.Value_Camera_Type camera_type = 3;
  bool has_camera_type() const;
  void clear_camera_type();
  static const int kCameraTypeFieldNumber = 3;
  private:
  const ::GoogleProtoBB::Value_Camera_Type& _internal_camera_type() const;
  public:
  const ::GoogleProtoBB::Value_Camera_Type& camera_type() const;
  ::GoogleProtoBB::Value_Camera_Type* release_camera_type();
  ::GoogleProtoBB::Value_Camera_Type* mutable_camera_type();
  void set_allocated_camera_type(::GoogleProtoBB::Value_Camera_Type* camera_type);

  // .GoogleProtoBB.Value_Recorder_ClosedCaption Recorder_ClosedCaption = 4;
  bool has_recorder_closedcaption() const;
  void clear_recorder_closedcaption();
  static const int kRecorderClosedCaptionFieldNumber = 4;
  private:
  const ::GoogleProtoBB::Value_Recorder_ClosedCaption& _internal_recorder_closedcaption() const;
  public:
  const ::GoogleProtoBB::Value_Recorder_ClosedCaption& recorder_closedcaption() const;
  ::GoogleProtoBB::Value_Recorder_ClosedCaption* release_recorder_closedcaption();
  ::GoogleProtoBB::Value_Recorder_ClosedCaption* mutable_recorder_closedcaption();
  void set_allocated_recorder_closedcaption(::GoogleProtoBB::Value_Recorder_ClosedCaption* recorder_closedcaption);

  // .GoogleProtoBB.Value_Player_ClosedCaption Player_ClosedCaption = 5;
  bool has_player_closedcaption() const;
  void clear_player_closedcaption();
  static const int kPlayerClosedCaptionFieldNumber = 5;
  private:
  const ::GoogleProtoBB::Value_Player_ClosedCaption& _internal_player_closedcaption() const;
  public:
  const ::GoogleProtoBB::Value_Player_ClosedCaption& player_closedcaption() const;
  ::GoogleProtoBB::Value_Player_ClosedCaption* release_player_closedcaption();
  ::GoogleProtoBB::Value_Player_ClosedCaption* mutable_player_closedcaption();
  void set_allocated_player_closedcaption(::GoogleProtoBB::Value_Player_ClosedCaption* player_closedcaption);

  // @@protoc_insertion_point(class_scope:GoogleProtoBB.BroadCastData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::GoogleProtoBB::Value_Recorder_Train_In_Out* recorder_train_in_out_;
  ::GoogleProtoBB::Value_Player_Status* player_status_;
  ::GoogleProtoBB::Value_Camera_Type* camera_type_;
  ::GoogleProtoBB::Value_Recorder_ClosedCaption* recorder_closedcaption_;
  ::GoogleProtoBB::Value_Player_ClosedCaption* player_closedcaption_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_broadcast_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Value_Recorder_Train_In_Out

// uint32 count = 1;
inline void Value_Recorder_Train_In_Out::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 Value_Recorder_Train_In_Out::count() const {
  // @@protoc_insertion_point(field_get:GoogleProtoBB.Value_Recorder_Train_In_Out.count)
  return count_;
}
inline void Value_Recorder_Train_In_Out::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:GoogleProtoBB.Value_Recorder_Train_In_Out.count)
}

// repeated uint64 trainIn = 2;
inline int Value_Recorder_Train_In_Out::trainin_size() const {
  return trainin_.size();
}
inline void Value_Recorder_Train_In_Out::clear_trainin() {
  trainin_.Clear();
}
inline ::google::protobuf::uint64 Value_Recorder_Train_In_Out::trainin(int index) const {
  // @@protoc_insertion_point(field_get:GoogleProtoBB.Value_Recorder_Train_In_Out.trainIn)
  return trainin_.Get(index);
}
inline void Value_Recorder_Train_In_Out::set_trainin(int index, ::google::protobuf::uint64 value) {
  trainin_.Set(index, value);
  // @@protoc_insertion_point(field_set:GoogleProtoBB.Value_Recorder_Train_In_Out.trainIn)
}
inline void Value_Recorder_Train_In_Out::add_trainin(::google::protobuf::uint64 value) {
  trainin_.Add(value);
  // @@protoc_insertion_point(field_add:GoogleProtoBB.Value_Recorder_Train_In_Out.trainIn)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Value_Recorder_Train_In_Out::trainin() const {
  // @@protoc_insertion_point(field_list:GoogleProtoBB.Value_Recorder_Train_In_Out.trainIn)
  return trainin_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Value_Recorder_Train_In_Out::mutable_trainin() {
  // @@protoc_insertion_point(field_mutable_list:GoogleProtoBB.Value_Recorder_Train_In_Out.trainIn)
  return &trainin_;
}

// repeated uint64 trainOut = 3;
inline int Value_Recorder_Train_In_Out::trainout_size() const {
  return trainout_.size();
}
inline void Value_Recorder_Train_In_Out::clear_trainout() {
  trainout_.Clear();
}
inline ::google::protobuf::uint64 Value_Recorder_Train_In_Out::trainout(int index) const {
  // @@protoc_insertion_point(field_get:GoogleProtoBB.Value_Recorder_Train_In_Out.trainOut)
  return trainout_.Get(index);
}
inline void Value_Recorder_Train_In_Out::set_trainout(int index, ::google::protobuf::uint64 value) {
  trainout_.Set(index, value);
  // @@protoc_insertion_point(field_set:GoogleProtoBB.Value_Recorder_Train_In_Out.trainOut)
}
inline void Value_Recorder_Train_In_Out::add_trainout(::google::protobuf::uint64 value) {
  trainout_.Add(value);
  // @@protoc_insertion_point(field_add:GoogleProtoBB.Value_Recorder_Train_In_Out.trainOut)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Value_Recorder_Train_In_Out::trainout() const {
  // @@protoc_insertion_point(field_list:GoogleProtoBB.Value_Recorder_Train_In_Out.trainOut)
  return trainout_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Value_Recorder_Train_In_Out::mutable_trainout() {
  // @@protoc_insertion_point(field_mutable_list:GoogleProtoBB.Value_Recorder_Train_In_Out.trainOut)
  return &trainout_;
}

// -------------------------------------------------------------------

// Value_Player_Status_StatusInfo

// .GoogleProtoBB.CnlID id = 1;
inline void Value_Player_Status_StatusInfo::clear_id() {
  id_ = 0;
}
inline ::GoogleProtoBB::CnlID Value_Player_Status_StatusInfo::id() const {
  // @@protoc_insertion_point(field_get:GoogleProtoBB.Value_Player_Status.StatusInfo.id)
  return static_cast< ::GoogleProtoBB::CnlID >(id_);
}
inline void Value_Player_Status_StatusInfo::set_id(::GoogleProtoBB::CnlID value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:GoogleProtoBB.Value_Player_Status.StatusInfo.id)
}

// uint32 status = 2;
inline void Value_Player_Status_StatusInfo::clear_status() {
  status_ = 0u;
}
inline ::google::protobuf::uint32 Value_Player_Status_StatusInfo::status() const {
  // @@protoc_insertion_point(field_get:GoogleProtoBB.Value_Player_Status.StatusInfo.status)
  return status_;
}
inline void Value_Player_Status_StatusInfo::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:GoogleProtoBB.Value_Player_Status.StatusInfo.status)
}

// -------------------------------------------------------------------

// Value_Player_Status

// uint32 count = 1;
inline void Value_Player_Status::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 Value_Player_Status::count() const {
  // @@protoc_insertion_point(field_get:GoogleProtoBB.Value_Player_Status.count)
  return count_;
}
inline void Value_Player_Status::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:GoogleProtoBB.Value_Player_Status.count)
}

// repeated .GoogleProtoBB.Value_Player_Status.StatusInfo statusInfo = 2;
inline int Value_Player_Status::statusinfo_size() const {
  return statusinfo_.size();
}
inline void Value_Player_Status::clear_statusinfo() {
  statusinfo_.Clear();
}
inline ::GoogleProtoBB::Value_Player_Status_StatusInfo* Value_Player_Status::mutable_statusinfo(int index) {
  // @@protoc_insertion_point(field_mutable:GoogleProtoBB.Value_Player_Status.statusInfo)
  return statusinfo_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::GoogleProtoBB::Value_Player_Status_StatusInfo >*
Value_Player_Status::mutable_statusinfo() {
  // @@protoc_insertion_point(field_mutable_list:GoogleProtoBB.Value_Player_Status.statusInfo)
  return &statusinfo_;
}
inline const ::GoogleProtoBB::Value_Player_Status_StatusInfo& Value_Player_Status::statusinfo(int index) const {
  // @@protoc_insertion_point(field_get:GoogleProtoBB.Value_Player_Status.statusInfo)
  return statusinfo_.Get(index);
}
inline ::GoogleProtoBB::Value_Player_Status_StatusInfo* Value_Player_Status::add_statusinfo() {
  // @@protoc_insertion_point(field_add:GoogleProtoBB.Value_Player_Status.statusInfo)
  return statusinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GoogleProtoBB::Value_Player_Status_StatusInfo >&
Value_Player_Status::statusinfo() const {
  // @@protoc_insertion_point(field_list:GoogleProtoBB.Value_Player_Status.statusInfo)
  return statusinfo_;
}

// -------------------------------------------------------------------

// Value_Camera_Type_ItemInfo

// uint32 camID = 1;
inline void Value_Camera_Type_ItemInfo::clear_camid() {
  camid_ = 0u;
}
inline ::google::protobuf::uint32 Value_Camera_Type_ItemInfo::camid() const {
  // @@protoc_insertion_point(field_get:GoogleProtoBB.Value_Camera_Type.ItemInfo.camID)
  return camid_;
}
inline void Value_Camera_Type_ItemInfo::set_camid(::google::protobuf::uint32 value) {
  
  camid_ = value;
  // @@protoc_insertion_point(field_set:GoogleProtoBB.Value_Camera_Type.ItemInfo.camID)
}

// bool isNetworking = 2;
inline void Value_Camera_Type_ItemInfo::clear_isnetworking() {
  isnetworking_ = false;
}
inline bool Value_Camera_Type_ItemInfo::isnetworking() const {
  // @@protoc_insertion_point(field_get:GoogleProtoBB.Value_Camera_Type.ItemInfo.isNetworking)
  return isnetworking_;
}
inline void Value_Camera_Type_ItemInfo::set_isnetworking(bool value) {
  
  isnetworking_ = value;
  // @@protoc_insertion_point(field_set:GoogleProtoBB.Value_Camera_Type.ItemInfo.isNetworking)
}

// -------------------------------------------------------------------

// Value_Camera_Type

// uint32 count = 1;
inline void Value_Camera_Type::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 Value_Camera_Type::count() const {
  // @@protoc_insertion_point(field_get:GoogleProtoBB.Value_Camera_Type.count)
  return count_;
}
inline void Value_Camera_Type::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:GoogleProtoBB.Value_Camera_Type.count)
}

// repeated .GoogleProtoBB.Value_Camera_Type.ItemInfo items = 2;
inline int Value_Camera_Type::items_size() const {
  return items_.size();
}
inline void Value_Camera_Type::clear_items() {
  items_.Clear();
}
inline ::GoogleProtoBB::Value_Camera_Type_ItemInfo* Value_Camera_Type::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:GoogleProtoBB.Value_Camera_Type.items)
  return items_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::GoogleProtoBB::Value_Camera_Type_ItemInfo >*
Value_Camera_Type::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:GoogleProtoBB.Value_Camera_Type.items)
  return &items_;
}
inline const ::GoogleProtoBB::Value_Camera_Type_ItemInfo& Value_Camera_Type::items(int index) const {
  // @@protoc_insertion_point(field_get:GoogleProtoBB.Value_Camera_Type.items)
  return items_.Get(index);
}
inline ::GoogleProtoBB::Value_Camera_Type_ItemInfo* Value_Camera_Type::add_items() {
  // @@protoc_insertion_point(field_add:GoogleProtoBB.Value_Camera_Type.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GoogleProtoBB::Value_Camera_Type_ItemInfo >&
Value_Camera_Type::items() const {
  // @@protoc_insertion_point(field_list:GoogleProtoBB.Value_Camera_Type.items)
  return items_;
}

// -------------------------------------------------------------------

// Value_Recorder_ClosedCaption_ItemInfo

// uint32 camID = 1;
inline void Value_Recorder_ClosedCaption_ItemInfo::clear_camid() {
  camid_ = 0u;
}
inline ::google::protobuf::uint32 Value_Recorder_ClosedCaption_ItemInfo::camid() const {
  // @@protoc_insertion_point(field_get:GoogleProtoBB.Value_Recorder_ClosedCaption.ItemInfo.camID)
  return camid_;
}
inline void Value_Recorder_ClosedCaption_ItemInfo::set_camid(::google::protobuf::uint32 value) {
  
  camid_ = value;
  // @@protoc_insertion_point(field_set:GoogleProtoBB.Value_Recorder_ClosedCaption.ItemInfo.camID)
}

// bool hasClosedCaption = 2;
inline void Value_Recorder_ClosedCaption_ItemInfo::clear_hasclosedcaption() {
  hasclosedcaption_ = false;
}
inline bool Value_Recorder_ClosedCaption_ItemInfo::hasclosedcaption() const {
  // @@protoc_insertion_point(field_get:GoogleProtoBB.Value_Recorder_ClosedCaption.ItemInfo.hasClosedCaption)
  return hasclosedcaption_;
}
inline void Value_Recorder_ClosedCaption_ItemInfo::set_hasclosedcaption(bool value) {
  
  hasclosedcaption_ = value;
  // @@protoc_insertion_point(field_set:GoogleProtoBB.Value_Recorder_ClosedCaption.ItemInfo.hasClosedCaption)
}

// -------------------------------------------------------------------

// Value_Recorder_ClosedCaption

// uint32 count = 1;
inline void Value_Recorder_ClosedCaption::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 Value_Recorder_ClosedCaption::count() const {
  // @@protoc_insertion_point(field_get:GoogleProtoBB.Value_Recorder_ClosedCaption.count)
  return count_;
}
inline void Value_Recorder_ClosedCaption::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:GoogleProtoBB.Value_Recorder_ClosedCaption.count)
}

// repeated .GoogleProtoBB.Value_Recorder_ClosedCaption.ItemInfo items = 2;
inline int Value_Recorder_ClosedCaption::items_size() const {
  return items_.size();
}
inline void Value_Recorder_ClosedCaption::clear_items() {
  items_.Clear();
}
inline ::GoogleProtoBB::Value_Recorder_ClosedCaption_ItemInfo* Value_Recorder_ClosedCaption::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:GoogleProtoBB.Value_Recorder_ClosedCaption.items)
  return items_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::GoogleProtoBB::Value_Recorder_ClosedCaption_ItemInfo >*
Value_Recorder_ClosedCaption::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:GoogleProtoBB.Value_Recorder_ClosedCaption.items)
  return &items_;
}
inline const ::GoogleProtoBB::Value_Recorder_ClosedCaption_ItemInfo& Value_Recorder_ClosedCaption::items(int index) const {
  // @@protoc_insertion_point(field_get:GoogleProtoBB.Value_Recorder_ClosedCaption.items)
  return items_.Get(index);
}
inline ::GoogleProtoBB::Value_Recorder_ClosedCaption_ItemInfo* Value_Recorder_ClosedCaption::add_items() {
  // @@protoc_insertion_point(field_add:GoogleProtoBB.Value_Recorder_ClosedCaption.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GoogleProtoBB::Value_Recorder_ClosedCaption_ItemInfo >&
Value_Recorder_ClosedCaption::items() const {
  // @@protoc_insertion_point(field_list:GoogleProtoBB.Value_Recorder_ClosedCaption.items)
  return items_;
}

// -------------------------------------------------------------------

// Value_Player_ClosedCaption_ItemInfo

// uint32 playerid = 1;
inline void Value_Player_ClosedCaption_ItemInfo::clear_playerid() {
  playerid_ = 0u;
}
inline ::google::protobuf::uint32 Value_Player_ClosedCaption_ItemInfo::playerid() const {
  // @@protoc_insertion_point(field_get:GoogleProtoBB.Value_Player_ClosedCaption.ItemInfo.playerid)
  return playerid_;
}
inline void Value_Player_ClosedCaption_ItemInfo::set_playerid(::google::protobuf::uint32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:GoogleProtoBB.Value_Player_ClosedCaption.ItemInfo.playerid)
}

// bool hasClosedCaption = 2;
inline void Value_Player_ClosedCaption_ItemInfo::clear_hasclosedcaption() {
  hasclosedcaption_ = false;
}
inline bool Value_Player_ClosedCaption_ItemInfo::hasclosedcaption() const {
  // @@protoc_insertion_point(field_get:GoogleProtoBB.Value_Player_ClosedCaption.ItemInfo.hasClosedCaption)
  return hasclosedcaption_;
}
inline void Value_Player_ClosedCaption_ItemInfo::set_hasclosedcaption(bool value) {
  
  hasclosedcaption_ = value;
  // @@protoc_insertion_point(field_set:GoogleProtoBB.Value_Player_ClosedCaption.ItemInfo.hasClosedCaption)
}

// -------------------------------------------------------------------

// Value_Player_ClosedCaption

// uint32 count = 1;
inline void Value_Player_ClosedCaption::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 Value_Player_ClosedCaption::count() const {
  // @@protoc_insertion_point(field_get:GoogleProtoBB.Value_Player_ClosedCaption.count)
  return count_;
}
inline void Value_Player_ClosedCaption::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:GoogleProtoBB.Value_Player_ClosedCaption.count)
}

// repeated .GoogleProtoBB.Value_Player_ClosedCaption.ItemInfo items = 2;
inline int Value_Player_ClosedCaption::items_size() const {
  return items_.size();
}
inline void Value_Player_ClosedCaption::clear_items() {
  items_.Clear();
}
inline ::GoogleProtoBB::Value_Player_ClosedCaption_ItemInfo* Value_Player_ClosedCaption::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:GoogleProtoBB.Value_Player_ClosedCaption.items)
  return items_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::GoogleProtoBB::Value_Player_ClosedCaption_ItemInfo >*
Value_Player_ClosedCaption::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:GoogleProtoBB.Value_Player_ClosedCaption.items)
  return &items_;
}
inline const ::GoogleProtoBB::Value_Player_ClosedCaption_ItemInfo& Value_Player_ClosedCaption::items(int index) const {
  // @@protoc_insertion_point(field_get:GoogleProtoBB.Value_Player_ClosedCaption.items)
  return items_.Get(index);
}
inline ::GoogleProtoBB::Value_Player_ClosedCaption_ItemInfo* Value_Player_ClosedCaption::add_items() {
  // @@protoc_insertion_point(field_add:GoogleProtoBB.Value_Player_ClosedCaption.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GoogleProtoBB::Value_Player_ClosedCaption_ItemInfo >&
Value_Player_ClosedCaption::items() const {
  // @@protoc_insertion_point(field_list:GoogleProtoBB.Value_Player_ClosedCaption.items)
  return items_;
}

// -------------------------------------------------------------------

// BroadCastData

// .GoogleProtoBB.Value_Recorder_Train_In_Out Recorder_Train_In_Out = 1;
inline bool BroadCastData::has_recorder_train_in_out() const {
  return this != internal_default_instance() && recorder_train_in_out_ != NULL;
}
inline void BroadCastData::clear_recorder_train_in_out() {
  if (GetArenaNoVirtual() == NULL && recorder_train_in_out_ != NULL) {
    delete recorder_train_in_out_;
  }
  recorder_train_in_out_ = NULL;
}
inline const ::GoogleProtoBB::Value_Recorder_Train_In_Out& BroadCastData::_internal_recorder_train_in_out() const {
  return *recorder_train_in_out_;
}
inline const ::GoogleProtoBB::Value_Recorder_Train_In_Out& BroadCastData::recorder_train_in_out() const {
  const ::GoogleProtoBB::Value_Recorder_Train_In_Out* p = recorder_train_in_out_;
  // @@protoc_insertion_point(field_get:GoogleProtoBB.BroadCastData.Recorder_Train_In_Out)
  return p != NULL ? *p : *reinterpret_cast<const ::GoogleProtoBB::Value_Recorder_Train_In_Out*>(
      &::GoogleProtoBB::_Value_Recorder_Train_In_Out_default_instance_);
}
inline ::GoogleProtoBB::Value_Recorder_Train_In_Out* BroadCastData::release_recorder_train_in_out() {
  // @@protoc_insertion_point(field_release:GoogleProtoBB.BroadCastData.Recorder_Train_In_Out)
  
  ::GoogleProtoBB::Value_Recorder_Train_In_Out* temp = recorder_train_in_out_;
  recorder_train_in_out_ = NULL;
  return temp;
}
inline ::GoogleProtoBB::Value_Recorder_Train_In_Out* BroadCastData::mutable_recorder_train_in_out() {
  
  if (recorder_train_in_out_ == NULL) {
    auto* p = CreateMaybeMessage<::GoogleProtoBB::Value_Recorder_Train_In_Out>(GetArenaNoVirtual());
    recorder_train_in_out_ = p;
  }
  // @@protoc_insertion_point(field_mutable:GoogleProtoBB.BroadCastData.Recorder_Train_In_Out)
  return recorder_train_in_out_;
}
inline void BroadCastData::set_allocated_recorder_train_in_out(::GoogleProtoBB::Value_Recorder_Train_In_Out* recorder_train_in_out) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete recorder_train_in_out_;
  }
  if (recorder_train_in_out) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      recorder_train_in_out = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, recorder_train_in_out, submessage_arena);
    }
    
  } else {
    
  }
  recorder_train_in_out_ = recorder_train_in_out;
  // @@protoc_insertion_point(field_set_allocated:GoogleProtoBB.BroadCastData.Recorder_Train_In_Out)
}

// .GoogleProtoBB.Value_Player_Status Player_Status = 2;
inline bool BroadCastData::has_player_status() const {
  return this != internal_default_instance() && player_status_ != NULL;
}
inline void BroadCastData::clear_player_status() {
  if (GetArenaNoVirtual() == NULL && player_status_ != NULL) {
    delete player_status_;
  }
  player_status_ = NULL;
}
inline const ::GoogleProtoBB::Value_Player_Status& BroadCastData::_internal_player_status() const {
  return *player_status_;
}
inline const ::GoogleProtoBB::Value_Player_Status& BroadCastData::player_status() const {
  const ::GoogleProtoBB::Value_Player_Status* p = player_status_;
  // @@protoc_insertion_point(field_get:GoogleProtoBB.BroadCastData.Player_Status)
  return p != NULL ? *p : *reinterpret_cast<const ::GoogleProtoBB::Value_Player_Status*>(
      &::GoogleProtoBB::_Value_Player_Status_default_instance_);
}
inline ::GoogleProtoBB::Value_Player_Status* BroadCastData::release_player_status() {
  // @@protoc_insertion_point(field_release:GoogleProtoBB.BroadCastData.Player_Status)
  
  ::GoogleProtoBB::Value_Player_Status* temp = player_status_;
  player_status_ = NULL;
  return temp;
}
inline ::GoogleProtoBB::Value_Player_Status* BroadCastData::mutable_player_status() {
  
  if (player_status_ == NULL) {
    auto* p = CreateMaybeMessage<::GoogleProtoBB::Value_Player_Status>(GetArenaNoVirtual());
    player_status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:GoogleProtoBB.BroadCastData.Player_Status)
  return player_status_;
}
inline void BroadCastData::set_allocated_player_status(::GoogleProtoBB::Value_Player_Status* player_status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete player_status_;
  }
  if (player_status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      player_status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, player_status, submessage_arena);
    }
    
  } else {
    
  }
  player_status_ = player_status;
  // @@protoc_insertion_point(field_set_allocated:GoogleProtoBB.BroadCastData.Player_Status)
}

// .GoogleProtoBB.Value_Camera_Type camera_type = 3;
inline bool BroadCastData::has_camera_type() const {
  return this != internal_default_instance() && camera_type_ != NULL;
}
inline void BroadCastData::clear_camera_type() {
  if (GetArenaNoVirtual() == NULL && camera_type_ != NULL) {
    delete camera_type_;
  }
  camera_type_ = NULL;
}
inline const ::GoogleProtoBB::Value_Camera_Type& BroadCastData::_internal_camera_type() const {
  return *camera_type_;
}
inline const ::GoogleProtoBB::Value_Camera_Type& BroadCastData::camera_type() const {
  const ::GoogleProtoBB::Value_Camera_Type* p = camera_type_;
  // @@protoc_insertion_point(field_get:GoogleProtoBB.BroadCastData.camera_type)
  return p != NULL ? *p : *reinterpret_cast<const ::GoogleProtoBB::Value_Camera_Type*>(
      &::GoogleProtoBB::_Value_Camera_Type_default_instance_);
}
inline ::GoogleProtoBB::Value_Camera_Type* BroadCastData::release_camera_type() {
  // @@protoc_insertion_point(field_release:GoogleProtoBB.BroadCastData.camera_type)
  
  ::GoogleProtoBB::Value_Camera_Type* temp = camera_type_;
  camera_type_ = NULL;
  return temp;
}
inline ::GoogleProtoBB::Value_Camera_Type* BroadCastData::mutable_camera_type() {
  
  if (camera_type_ == NULL) {
    auto* p = CreateMaybeMessage<::GoogleProtoBB::Value_Camera_Type>(GetArenaNoVirtual());
    camera_type_ = p;
  }
  // @@protoc_insertion_point(field_mutable:GoogleProtoBB.BroadCastData.camera_type)
  return camera_type_;
}
inline void BroadCastData::set_allocated_camera_type(::GoogleProtoBB::Value_Camera_Type* camera_type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete camera_type_;
  }
  if (camera_type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      camera_type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, camera_type, submessage_arena);
    }
    
  } else {
    
  }
  camera_type_ = camera_type;
  // @@protoc_insertion_point(field_set_allocated:GoogleProtoBB.BroadCastData.camera_type)
}

// .GoogleProtoBB.Value_Recorder_ClosedCaption Recorder_ClosedCaption = 4;
inline bool BroadCastData::has_recorder_closedcaption() const {
  return this != internal_default_instance() && recorder_closedcaption_ != NULL;
}
inline void BroadCastData::clear_recorder_closedcaption() {
  if (GetArenaNoVirtual() == NULL && recorder_closedcaption_ != NULL) {
    delete recorder_closedcaption_;
  }
  recorder_closedcaption_ = NULL;
}
inline const ::GoogleProtoBB::Value_Recorder_ClosedCaption& BroadCastData::_internal_recorder_closedcaption() const {
  return *recorder_closedcaption_;
}
inline const ::GoogleProtoBB::Value_Recorder_ClosedCaption& BroadCastData::recorder_closedcaption() const {
  const ::GoogleProtoBB::Value_Recorder_ClosedCaption* p = recorder_closedcaption_;
  // @@protoc_insertion_point(field_get:GoogleProtoBB.BroadCastData.Recorder_ClosedCaption)
  return p != NULL ? *p : *reinterpret_cast<const ::GoogleProtoBB::Value_Recorder_ClosedCaption*>(
      &::GoogleProtoBB::_Value_Recorder_ClosedCaption_default_instance_);
}
inline ::GoogleProtoBB::Value_Recorder_ClosedCaption* BroadCastData::release_recorder_closedcaption() {
  // @@protoc_insertion_point(field_release:GoogleProtoBB.BroadCastData.Recorder_ClosedCaption)
  
  ::GoogleProtoBB::Value_Recorder_ClosedCaption* temp = recorder_closedcaption_;
  recorder_closedcaption_ = NULL;
  return temp;
}
inline ::GoogleProtoBB::Value_Recorder_ClosedCaption* BroadCastData::mutable_recorder_closedcaption() {
  
  if (recorder_closedcaption_ == NULL) {
    auto* p = CreateMaybeMessage<::GoogleProtoBB::Value_Recorder_ClosedCaption>(GetArenaNoVirtual());
    recorder_closedcaption_ = p;
  }
  // @@protoc_insertion_point(field_mutable:GoogleProtoBB.BroadCastData.Recorder_ClosedCaption)
  return recorder_closedcaption_;
}
inline void BroadCastData::set_allocated_recorder_closedcaption(::GoogleProtoBB::Value_Recorder_ClosedCaption* recorder_closedcaption) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete recorder_closedcaption_;
  }
  if (recorder_closedcaption) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      recorder_closedcaption = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, recorder_closedcaption, submessage_arena);
    }
    
  } else {
    
  }
  recorder_closedcaption_ = recorder_closedcaption;
  // @@protoc_insertion_point(field_set_allocated:GoogleProtoBB.BroadCastData.Recorder_ClosedCaption)
}

// .GoogleProtoBB.Value_Player_ClosedCaption Player_ClosedCaption = 5;
inline bool BroadCastData::has_player_closedcaption() const {
  return this != internal_default_instance() && player_closedcaption_ != NULL;
}
inline void BroadCastData::clear_player_closedcaption() {
  if (GetArenaNoVirtual() == NULL && player_closedcaption_ != NULL) {
    delete player_closedcaption_;
  }
  player_closedcaption_ = NULL;
}
inline const ::GoogleProtoBB::Value_Player_ClosedCaption& BroadCastData::_internal_player_closedcaption() const {
  return *player_closedcaption_;
}
inline const ::GoogleProtoBB::Value_Player_ClosedCaption& BroadCastData::player_closedcaption() const {
  const ::GoogleProtoBB::Value_Player_ClosedCaption* p = player_closedcaption_;
  // @@protoc_insertion_point(field_get:GoogleProtoBB.BroadCastData.Player_ClosedCaption)
  return p != NULL ? *p : *reinterpret_cast<const ::GoogleProtoBB::Value_Player_ClosedCaption*>(
      &::GoogleProtoBB::_Value_Player_ClosedCaption_default_instance_);
}
inline ::GoogleProtoBB::Value_Player_ClosedCaption* BroadCastData::release_player_closedcaption() {
  // @@protoc_insertion_point(field_release:GoogleProtoBB.BroadCastData.Player_ClosedCaption)
  
  ::GoogleProtoBB::Value_Player_ClosedCaption* temp = player_closedcaption_;
  player_closedcaption_ = NULL;
  return temp;
}
inline ::GoogleProtoBB::Value_Player_ClosedCaption* BroadCastData::mutable_player_closedcaption() {
  
  if (player_closedcaption_ == NULL) {
    auto* p = CreateMaybeMessage<::GoogleProtoBB::Value_Player_ClosedCaption>(GetArenaNoVirtual());
    player_closedcaption_ = p;
  }
  // @@protoc_insertion_point(field_mutable:GoogleProtoBB.BroadCastData.Player_ClosedCaption)
  return player_closedcaption_;
}
inline void BroadCastData::set_allocated_player_closedcaption(::GoogleProtoBB::Value_Player_ClosedCaption* player_closedcaption) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete player_closedcaption_;
  }
  if (player_closedcaption) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      player_closedcaption = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, player_closedcaption, submessage_arena);
    }
    
  } else {
    
  }
  player_closedcaption_ = player_closedcaption;
  // @@protoc_insertion_point(field_set_allocated:GoogleProtoBB.BroadCastData.Player_ClosedCaption)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace GoogleProtoBB

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::GoogleProtoBB::BroadcastInfoKey> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GoogleProtoBB::BroadcastInfoKey>() {
  return ::GoogleProtoBB::BroadcastInfoKey_descriptor();
}
template <> struct is_proto_enum< ::GoogleProtoBB::CnlID> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GoogleProtoBB::CnlID>() {
  return ::GoogleProtoBB::CnlID_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_broadcast_2eproto
