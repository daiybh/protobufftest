// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: broadcast.proto

#include "broadcast.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_broadcast_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_BMR_Setting;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_Cache_ReplayPlayer_ExternalAudio_Range;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_Cache_ReplayPlayer_HighResVideo_Range;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_Camera_Type_ItemInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_Common_TimeReference;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_CustomInfo_InfoPair;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_DVE_Channel;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_DVE_Custom_Transparency_DVECustomTransparencyInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_DVE_CutThreshold_DVEThresholdInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_DVE_Den_DVEDenInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_DVE_Mode_DVEModeInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_DVE_Num_DVENumInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_DVE_Type_DVETypeInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_Film_Effect_Status;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_GFX_Fade_In_Out_Duration_GFXFadeDuration;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_GFX_Loop_Count_GFXLoopCnt;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_GFX_Loop_In_Out_GFXLoopInOut;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_GFX_Position_GFXPosition;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_GFX_Preload_Status_GFXPreloadStatus;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_GFX_Status_GFXStatus;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_HealthInfo_AJA_Status_InfoAJA;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_HealthInfo_ASIO_Status_ValueStatusPair;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_HealthInfo_External_TimeCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_HealthInfo_GPU_Temperature;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_HealthInfo_HDD_Status;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_HealthInfo_Mixer_Status;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_HealthInfo_Network_Bandwidth;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_HealthInfo_ReferenceStatus;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_HealthInfo_RemainingTimePerCam_RemainingTime;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_HealthInfo_SerialNumber_ServerInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_HealthInfo_Version;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_PiP_Status_PiPStatus;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_Player_AudioPresetId_TypeInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_Player_Camera_CameraInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_Player_ClosedCaption_ItemInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_Player_Consigne_ConsigneInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_Player_Extend_Playlist_ExtendPlaylistInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_Player_Group_GroupInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_Player_Limit_In_Out_LimitInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_Player_Loop_Count_LoopCountInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_Player_Loop_Mode_LoopModeInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_Player_Mode_ModeInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_Player_Playlist_Element_ID_ElementIDInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_Player_Playlist_ID_PlaylistIDInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_Player_Speed_SpeedInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_Player_Status_StatusInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_Player_Type_TypeInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_RTD_Position_RTDPositionInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_RTD_Status_RTDStatusInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_RTD_Type_RTDTypeInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_Recorder_ClosedCaption_ItemInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_Recorder_Train_In_Out;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_Server_Memory;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_Storage_Capacity;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value_VuMeter_Live_Mixer_PGM_VuMeter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_Cache_ReplayPlayer_ExternalAudio;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_Cache_ReplayPlayer_HighResVideo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_Camera_Type;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_CustomInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_DVE_Custom_Transparency;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_DVE_CutThreshold;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_DVE_Den;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_DVE_Mode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_DVE_Num;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_DVE_Type;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_GFX_Fade_In_Out_Duration;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_GFX_Fade_In_Out_Duration_PGMGFX;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_GFX_Loop_Count;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_GFX_Loop_Count_PGMGFX;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_GFX_Loop_In_Out;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_GFX_Loop_In_Out_PGMGFX;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_GFX_Position;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_GFX_Position_PGMGFX;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_GFX_Preload_Status;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_GFX_Status;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_GFX_Status_PGMGFX;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_HealthInfo_AJA_Status;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_HealthInfo_ASIO_Status;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_HealthInfo_ASIO_Status_AsioStatus;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_HealthInfo_RemainingTimePerCam;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_HealthInfo_SerialNumber;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_PiP_Status;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_PiP_Status_PGMPiP;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_Player_AudioPresetId;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_Player_Camera;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_Player_ClosedCaption;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_Player_Consigne;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_Player_Extend_Playlist;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_Player_Group;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_Player_Limit_In_Out;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_Player_Loop_Count;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_Player_Loop_Mode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_Player_Mode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_Player_Playlist_Element_ID;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_Player_Playlist_ID;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_Player_Speed;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_Player_Status;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_Player_Type;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_RTD_Position;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_RTD_Status;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_RTD_Type;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_Recorder_ClosedCaption;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Value_VuMeter_Live_Mixer_PGM_PGMUV;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_broadcast_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Value_VuMeter_Live_Mixer_PGM;
}  // namespace protobuf_broadcast_2eproto
namespace GoogleProtoBB {
class Value_Recorder_Train_In_OutDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Recorder_Train_In_Out>
      _instance;
} _Value_Recorder_Train_In_Out_default_instance_;
class Value_Player_Status_StatusInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Player_Status_StatusInfo>
      _instance;
} _Value_Player_Status_StatusInfo_default_instance_;
class Value_Player_StatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Player_Status>
      _instance;
} _Value_Player_Status_default_instance_;
class Value_Camera_Type_ItemInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Camera_Type_ItemInfo>
      _instance;
} _Value_Camera_Type_ItemInfo_default_instance_;
class Value_Camera_TypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Camera_Type>
      _instance;
} _Value_Camera_Type_default_instance_;
class Value_Recorder_ClosedCaption_ItemInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Recorder_ClosedCaption_ItemInfo>
      _instance;
} _Value_Recorder_ClosedCaption_ItemInfo_default_instance_;
class Value_Recorder_ClosedCaptionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Recorder_ClosedCaption>
      _instance;
} _Value_Recorder_ClosedCaption_default_instance_;
class Value_Player_ClosedCaption_ItemInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Player_ClosedCaption_ItemInfo>
      _instance;
} _Value_Player_ClosedCaption_ItemInfo_default_instance_;
class Value_Player_ClosedCaptionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Player_ClosedCaption>
      _instance;
} _Value_Player_ClosedCaption_default_instance_;
class Value_Player_Group_GroupInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Player_Group_GroupInfo>
      _instance;
} _Value_Player_Group_GroupInfo_default_instance_;
class Value_Player_GroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Player_Group>
      _instance;
} _Value_Player_Group_default_instance_;
class Value_Player_Camera_CameraInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Player_Camera_CameraInfo>
      _instance;
} _Value_Player_Camera_CameraInfo_default_instance_;
class Value_Player_CameraDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Player_Camera>
      _instance;
} _Value_Player_Camera_default_instance_;
class Value_Player_Type_TypeInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Player_Type_TypeInfo>
      _instance;
} _Value_Player_Type_TypeInfo_default_instance_;
class Value_Player_TypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Player_Type>
      _instance;
} _Value_Player_Type_default_instance_;
class Value_Player_AudioPresetId_TypeInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Player_AudioPresetId_TypeInfo>
      _instance;
} _Value_Player_AudioPresetId_TypeInfo_default_instance_;
class Value_Player_AudioPresetIdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Player_AudioPresetId>
      _instance;
} _Value_Player_AudioPresetId_default_instance_;
class Value_Player_Speed_SpeedInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Player_Speed_SpeedInfo>
      _instance;
} _Value_Player_Speed_SpeedInfo_default_instance_;
class Value_Player_SpeedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Player_Speed>
      _instance;
} _Value_Player_Speed_default_instance_;
class Value_Player_Consigne_ConsigneInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Player_Consigne_ConsigneInfo>
      _instance;
} _Value_Player_Consigne_ConsigneInfo_default_instance_;
class Value_Player_ConsigneDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Player_Consigne>
      _instance;
} _Value_Player_Consigne_default_instance_;
class Value_Player_Mode_ModeInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Player_Mode_ModeInfo>
      _instance;
} _Value_Player_Mode_ModeInfo_default_instance_;
class Value_Player_ModeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Player_Mode>
      _instance;
} _Value_Player_Mode_default_instance_;
class Value_Player_Extend_Playlist_ExtendPlaylistInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Player_Extend_Playlist_ExtendPlaylistInfo>
      _instance;
} _Value_Player_Extend_Playlist_ExtendPlaylistInfo_default_instance_;
class Value_Player_Extend_PlaylistDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Player_Extend_Playlist>
      _instance;
} _Value_Player_Extend_Playlist_default_instance_;
class Value_Player_Limit_In_Out_LimitInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Player_Limit_In_Out_LimitInfo>
      _instance;
} _Value_Player_Limit_In_Out_LimitInfo_default_instance_;
class Value_Player_Limit_In_OutDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Player_Limit_In_Out>
      _instance;
} _Value_Player_Limit_In_Out_default_instance_;
class Value_Player_Loop_Mode_LoopModeInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Player_Loop_Mode_LoopModeInfo>
      _instance;
} _Value_Player_Loop_Mode_LoopModeInfo_default_instance_;
class Value_Player_Loop_ModeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Player_Loop_Mode>
      _instance;
} _Value_Player_Loop_Mode_default_instance_;
class Value_Player_Loop_Count_LoopCountInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Player_Loop_Count_LoopCountInfo>
      _instance;
} _Value_Player_Loop_Count_LoopCountInfo_default_instance_;
class Value_Player_Loop_CountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Player_Loop_Count>
      _instance;
} _Value_Player_Loop_Count_default_instance_;
class Value_Player_Playlist_ID_PlaylistIDInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Player_Playlist_ID_PlaylistIDInfo>
      _instance;
} _Value_Player_Playlist_ID_PlaylistIDInfo_default_instance_;
class Value_Player_Playlist_IDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Player_Playlist_ID>
      _instance;
} _Value_Player_Playlist_ID_default_instance_;
class Value_Player_Playlist_Element_ID_ElementIDInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Player_Playlist_Element_ID_ElementIDInfo>
      _instance;
} _Value_Player_Playlist_Element_ID_ElementIDInfo_default_instance_;
class Value_Player_Playlist_Element_IDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Player_Playlist_Element_ID>
      _instance;
} _Value_Player_Playlist_Element_ID_default_instance_;
class Value_DVE_Mode_DVEModeInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_DVE_Mode_DVEModeInfo>
      _instance;
} _Value_DVE_Mode_DVEModeInfo_default_instance_;
class Value_DVE_ModeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_DVE_Mode>
      _instance;
} _Value_DVE_Mode_default_instance_;
class Value_DVE_Type_DVETypeInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_DVE_Type_DVETypeInfo>
      _instance;
} _Value_DVE_Type_DVETypeInfo_default_instance_;
class Value_DVE_TypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_DVE_Type>
      _instance;
} _Value_DVE_Type_default_instance_;
class Value_DVE_ChannelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_DVE_Channel>
      _instance;
} _Value_DVE_Channel_default_instance_;
class Value_DVE_Num_DVENumInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_DVE_Num_DVENumInfo>
      _instance;
} _Value_DVE_Num_DVENumInfo_default_instance_;
class Value_DVE_NumDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_DVE_Num>
      _instance;
} _Value_DVE_Num_default_instance_;
class Value_DVE_Den_DVEDenInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_DVE_Den_DVEDenInfo>
      _instance;
} _Value_DVE_Den_DVEDenInfo_default_instance_;
class Value_DVE_DenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_DVE_Den>
      _instance;
} _Value_DVE_Den_default_instance_;
class Value_DVE_CutThreshold_DVEThresholdInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_DVE_CutThreshold_DVEThresholdInfo>
      _instance;
} _Value_DVE_CutThreshold_DVEThresholdInfo_default_instance_;
class Value_DVE_CutThresholdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_DVE_CutThreshold>
      _instance;
} _Value_DVE_CutThreshold_default_instance_;
class Value_DVE_Custom_Transparency_DVECustomTransparencyInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_DVE_Custom_Transparency_DVECustomTransparencyInfo>
      _instance;
} _Value_DVE_Custom_Transparency_DVECustomTransparencyInfo_default_instance_;
class Value_DVE_Custom_TransparencyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_DVE_Custom_Transparency>
      _instance;
} _Value_DVE_Custom_Transparency_default_instance_;
class Value_RTD_Status_RTDStatusInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_RTD_Status_RTDStatusInfo>
      _instance;
} _Value_RTD_Status_RTDStatusInfo_default_instance_;
class Value_RTD_StatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_RTD_Status>
      _instance;
} _Value_RTD_Status_default_instance_;
class Value_RTD_Type_RTDTypeInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_RTD_Type_RTDTypeInfo>
      _instance;
} _Value_RTD_Type_RTDTypeInfo_default_instance_;
class Value_RTD_TypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_RTD_Type>
      _instance;
} _Value_RTD_Type_default_instance_;
class Value_RTD_Position_RTDPositionInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_RTD_Position_RTDPositionInfo>
      _instance;
} _Value_RTD_Position_RTDPositionInfo_default_instance_;
class Value_RTD_PositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_RTD_Position>
      _instance;
} _Value_RTD_Position_default_instance_;
class Value_GFX_Status_GFXStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_GFX_Status_GFXStatus>
      _instance;
} _Value_GFX_Status_GFXStatus_default_instance_;
class Value_GFX_Status_PGMGFXDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_GFX_Status_PGMGFX>
      _instance;
} _Value_GFX_Status_PGMGFX_default_instance_;
class Value_GFX_StatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_GFX_Status>
      _instance;
} _Value_GFX_Status_default_instance_;
class Value_GFX_Position_GFXPositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_GFX_Position_GFXPosition>
      _instance;
} _Value_GFX_Position_GFXPosition_default_instance_;
class Value_GFX_Position_PGMGFXDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_GFX_Position_PGMGFX>
      _instance;
} _Value_GFX_Position_PGMGFX_default_instance_;
class Value_GFX_PositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_GFX_Position>
      _instance;
} _Value_GFX_Position_default_instance_;
class Value_GFX_Fade_In_Out_Duration_GFXFadeDurationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_GFX_Fade_In_Out_Duration_GFXFadeDuration>
      _instance;
} _Value_GFX_Fade_In_Out_Duration_GFXFadeDuration_default_instance_;
class Value_GFX_Fade_In_Out_Duration_PGMGFXDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_GFX_Fade_In_Out_Duration_PGMGFX>
      _instance;
} _Value_GFX_Fade_In_Out_Duration_PGMGFX_default_instance_;
class Value_GFX_Fade_In_Out_DurationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_GFX_Fade_In_Out_Duration>
      _instance;
} _Value_GFX_Fade_In_Out_Duration_default_instance_;
class Value_GFX_Loop_In_Out_GFXLoopInOutDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_GFX_Loop_In_Out_GFXLoopInOut>
      _instance;
} _Value_GFX_Loop_In_Out_GFXLoopInOut_default_instance_;
class Value_GFX_Loop_In_Out_PGMGFXDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_GFX_Loop_In_Out_PGMGFX>
      _instance;
} _Value_GFX_Loop_In_Out_PGMGFX_default_instance_;
class Value_GFX_Loop_In_OutDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_GFX_Loop_In_Out>
      _instance;
} _Value_GFX_Loop_In_Out_default_instance_;
class Value_GFX_Loop_Count_GFXLoopCntDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_GFX_Loop_Count_GFXLoopCnt>
      _instance;
} _Value_GFX_Loop_Count_GFXLoopCnt_default_instance_;
class Value_GFX_Loop_Count_PGMGFXDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_GFX_Loop_Count_PGMGFX>
      _instance;
} _Value_GFX_Loop_Count_PGMGFX_default_instance_;
class Value_GFX_Loop_CountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_GFX_Loop_Count>
      _instance;
} _Value_GFX_Loop_Count_default_instance_;
class Value_GFX_Preload_Status_GFXPreloadStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_GFX_Preload_Status_GFXPreloadStatus>
      _instance;
} _Value_GFX_Preload_Status_GFXPreloadStatus_default_instance_;
class Value_GFX_Preload_StatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_GFX_Preload_Status>
      _instance;
} _Value_GFX_Preload_Status_default_instance_;
class Value_HealthInfo_VersionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_HealthInfo_Version>
      _instance;
} _Value_HealthInfo_Version_default_instance_;
class Value_HealthInfo_Mixer_StatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_HealthInfo_Mixer_Status>
      _instance;
} _Value_HealthInfo_Mixer_Status_default_instance_;
class Value_HealthInfo_Network_BandwidthDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_HealthInfo_Network_Bandwidth>
      _instance;
} _Value_HealthInfo_Network_Bandwidth_default_instance_;
class Value_HealthInfo_GPU_TemperatureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_HealthInfo_GPU_Temperature>
      _instance;
} _Value_HealthInfo_GPU_Temperature_default_instance_;
class Value_HealthInfo_AJA_Status_InfoAJADefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_HealthInfo_AJA_Status_InfoAJA>
      _instance;
} _Value_HealthInfo_AJA_Status_InfoAJA_default_instance_;
class Value_HealthInfo_AJA_StatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_HealthInfo_AJA_Status>
      _instance;
} _Value_HealthInfo_AJA_Status_default_instance_;
class Value_HealthInfo_HDD_StatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_HealthInfo_HDD_Status>
      _instance;
} _Value_HealthInfo_HDD_Status_default_instance_;
class Value_HealthInfo_ASIO_Status_ValueStatusPairDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_HealthInfo_ASIO_Status_ValueStatusPair>
      _instance;
} _Value_HealthInfo_ASIO_Status_ValueStatusPair_default_instance_;
class Value_HealthInfo_ASIO_Status_AsioStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_HealthInfo_ASIO_Status_AsioStatus>
      _instance;
} _Value_HealthInfo_ASIO_Status_AsioStatus_default_instance_;
class Value_HealthInfo_ASIO_StatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_HealthInfo_ASIO_Status>
      _instance;
} _Value_HealthInfo_ASIO_Status_default_instance_;
class Value_HealthInfo_External_TimeCodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_HealthInfo_External_TimeCode>
      _instance;
} _Value_HealthInfo_External_TimeCode_default_instance_;
class Value_CustomInfo_InfoPairDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_CustomInfo_InfoPair>
      _instance;
} _Value_CustomInfo_InfoPair_default_instance_;
class Value_CustomInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_CustomInfo>
      _instance;
} _Value_CustomInfo_default_instance_;
class Value_BMR_SettingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_BMR_Setting>
      _instance;
} _Value_BMR_Setting_default_instance_;
class Value_VuMeter_Live_Mixer_PGM_VuMeterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_VuMeter_Live_Mixer_PGM_VuMeter>
      _instance;
} _Value_VuMeter_Live_Mixer_PGM_VuMeter_default_instance_;
class Value_VuMeter_Live_Mixer_PGM_PGMUVDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_VuMeter_Live_Mixer_PGM_PGMUV>
      _instance;
} _Value_VuMeter_Live_Mixer_PGM_PGMUV_default_instance_;
class Value_VuMeter_Live_Mixer_PGMDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_VuMeter_Live_Mixer_PGM>
      _instance;
} _Value_VuMeter_Live_Mixer_PGM_default_instance_;
class Value_PiP_Status_PiPStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_PiP_Status_PiPStatus>
      _instance;
} _Value_PiP_Status_PiPStatus_default_instance_;
class Value_PiP_Status_PGMPiPDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_PiP_Status_PGMPiP>
      _instance;
} _Value_PiP_Status_PGMPiP_default_instance_;
class Value_PiP_StatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_PiP_Status>
      _instance;
} _Value_PiP_Status_default_instance_;
class Value_Server_MemoryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Server_Memory>
      _instance;
} _Value_Server_Memory_default_instance_;
class Value_Cache_ReplayPlayer_HighResVideo_RangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Cache_ReplayPlayer_HighResVideo_Range>
      _instance;
} _Value_Cache_ReplayPlayer_HighResVideo_Range_default_instance_;
class Value_Cache_ReplayPlayer_HighResVideoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Cache_ReplayPlayer_HighResVideo>
      _instance;
} _Value_Cache_ReplayPlayer_HighResVideo_default_instance_;
class Value_Cache_ReplayPlayer_ExternalAudio_RangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Cache_ReplayPlayer_ExternalAudio_Range>
      _instance;
} _Value_Cache_ReplayPlayer_ExternalAudio_Range_default_instance_;
class Value_Cache_ReplayPlayer_ExternalAudioDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Cache_ReplayPlayer_ExternalAudio>
      _instance;
} _Value_Cache_ReplayPlayer_ExternalAudio_default_instance_;
class Value_Storage_CapacityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Storage_Capacity>
      _instance;
} _Value_Storage_Capacity_default_instance_;
class Value_HealthInfo_ReferenceStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_HealthInfo_ReferenceStatus>
      _instance;
} _Value_HealthInfo_ReferenceStatus_default_instance_;
class Value_HealthInfo_SerialNumber_ServerInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_HealthInfo_SerialNumber_ServerInfo>
      _instance;
} _Value_HealthInfo_SerialNumber_ServerInfo_default_instance_;
class Value_HealthInfo_SerialNumberDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_HealthInfo_SerialNumber>
      _instance;
} _Value_HealthInfo_SerialNumber_default_instance_;
class Value_HealthInfo_RemainingTimePerCam_RemainingTimeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_HealthInfo_RemainingTimePerCam_RemainingTime>
      _instance;
} _Value_HealthInfo_RemainingTimePerCam_RemainingTime_default_instance_;
class Value_HealthInfo_RemainingTimePerCamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_HealthInfo_RemainingTimePerCam>
      _instance;
} _Value_HealthInfo_RemainingTimePerCam_default_instance_;
class Value_Film_Effect_StatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Film_Effect_Status>
      _instance;
} _Value_Film_Effect_Status_default_instance_;
class Value_Common_TimeReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value_Common_TimeReference>
      _instance;
} _Value_Common_TimeReference_default_instance_;
class BroadCastDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BroadCastData>
      _instance;
} _BroadCastData_default_instance_;
}  // namespace GoogleProtoBB
namespace protobuf_broadcast_2eproto {
static void InitDefaultsValue_Recorder_Train_In_Out() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Recorder_Train_In_Out_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Recorder_Train_In_Out();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Recorder_Train_In_Out::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_Recorder_Train_In_Out =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_Recorder_Train_In_Out}, {}};

static void InitDefaultsValue_Player_Status_StatusInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Player_Status_StatusInfo_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Player_Status_StatusInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Player_Status_StatusInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_Player_Status_StatusInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_Player_Status_StatusInfo}, {}};

static void InitDefaultsValue_Player_Status() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Player_Status_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Player_Status();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Player_Status::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_Player_Status =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_Player_Status}, {
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Status_StatusInfo.base,}};

static void InitDefaultsValue_Camera_Type_ItemInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Camera_Type_ItemInfo_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Camera_Type_ItemInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Camera_Type_ItemInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_Camera_Type_ItemInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_Camera_Type_ItemInfo}, {}};

static void InitDefaultsValue_Camera_Type() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Camera_Type_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Camera_Type();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Camera_Type::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_Camera_Type =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_Camera_Type}, {
      &protobuf_broadcast_2eproto::scc_info_Value_Camera_Type_ItemInfo.base,}};

static void InitDefaultsValue_Recorder_ClosedCaption_ItemInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Recorder_ClosedCaption_ItemInfo_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Recorder_ClosedCaption_ItemInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Recorder_ClosedCaption_ItemInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_Recorder_ClosedCaption_ItemInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_Recorder_ClosedCaption_ItemInfo}, {}};

static void InitDefaultsValue_Recorder_ClosedCaption() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Recorder_ClosedCaption_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Recorder_ClosedCaption();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Recorder_ClosedCaption::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_Recorder_ClosedCaption =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_Recorder_ClosedCaption}, {
      &protobuf_broadcast_2eproto::scc_info_Value_Recorder_ClosedCaption_ItemInfo.base,}};

static void InitDefaultsValue_Player_ClosedCaption_ItemInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Player_ClosedCaption_ItemInfo_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Player_ClosedCaption_ItemInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Player_ClosedCaption_ItemInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_Player_ClosedCaption_ItemInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_Player_ClosedCaption_ItemInfo}, {}};

static void InitDefaultsValue_Player_ClosedCaption() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Player_ClosedCaption_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Player_ClosedCaption();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Player_ClosedCaption::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_Player_ClosedCaption =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_Player_ClosedCaption}, {
      &protobuf_broadcast_2eproto::scc_info_Value_Player_ClosedCaption_ItemInfo.base,}};

static void InitDefaultsValue_Player_Group_GroupInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Player_Group_GroupInfo_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Player_Group_GroupInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Player_Group_GroupInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_Player_Group_GroupInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_Player_Group_GroupInfo}, {}};

static void InitDefaultsValue_Player_Group() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Player_Group_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Player_Group();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Player_Group::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_Player_Group =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_Player_Group}, {
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Group_GroupInfo.base,}};

static void InitDefaultsValue_Player_Camera_CameraInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Player_Camera_CameraInfo_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Player_Camera_CameraInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Player_Camera_CameraInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_Player_Camera_CameraInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_Player_Camera_CameraInfo}, {}};

static void InitDefaultsValue_Player_Camera() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Player_Camera_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Player_Camera();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Player_Camera::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_Player_Camera =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_Player_Camera}, {
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Camera_CameraInfo.base,}};

static void InitDefaultsValue_Player_Type_TypeInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Player_Type_TypeInfo_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Player_Type_TypeInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Player_Type_TypeInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_Player_Type_TypeInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_Player_Type_TypeInfo}, {}};

static void InitDefaultsValue_Player_Type() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Player_Type_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Player_Type();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Player_Type::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_Player_Type =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_Player_Type}, {
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Type_TypeInfo.base,}};

static void InitDefaultsValue_Player_AudioPresetId_TypeInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Player_AudioPresetId_TypeInfo_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Player_AudioPresetId_TypeInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Player_AudioPresetId_TypeInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_Player_AudioPresetId_TypeInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_Player_AudioPresetId_TypeInfo}, {}};

static void InitDefaultsValue_Player_AudioPresetId() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Player_AudioPresetId_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Player_AudioPresetId();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Player_AudioPresetId::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_Player_AudioPresetId =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_Player_AudioPresetId}, {
      &protobuf_broadcast_2eproto::scc_info_Value_Player_AudioPresetId_TypeInfo.base,}};

static void InitDefaultsValue_Player_Speed_SpeedInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Player_Speed_SpeedInfo_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Player_Speed_SpeedInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Player_Speed_SpeedInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_Player_Speed_SpeedInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_Player_Speed_SpeedInfo}, {}};

static void InitDefaultsValue_Player_Speed() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Player_Speed_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Player_Speed();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Player_Speed::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_Player_Speed =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_Player_Speed}, {
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Speed_SpeedInfo.base,}};

static void InitDefaultsValue_Player_Consigne_ConsigneInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Player_Consigne_ConsigneInfo_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Player_Consigne_ConsigneInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Player_Consigne_ConsigneInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_Player_Consigne_ConsigneInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_Player_Consigne_ConsigneInfo}, {}};

static void InitDefaultsValue_Player_Consigne() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Player_Consigne_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Player_Consigne();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Player_Consigne::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_Player_Consigne =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_Player_Consigne}, {
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Consigne_ConsigneInfo.base,}};

static void InitDefaultsValue_Player_Mode_ModeInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Player_Mode_ModeInfo_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Player_Mode_ModeInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Player_Mode_ModeInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_Player_Mode_ModeInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_Player_Mode_ModeInfo}, {}};

static void InitDefaultsValue_Player_Mode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Player_Mode_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Player_Mode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Player_Mode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_Player_Mode =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_Player_Mode}, {
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Mode_ModeInfo.base,}};

static void InitDefaultsValue_Player_Extend_Playlist_ExtendPlaylistInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Player_Extend_Playlist_ExtendPlaylistInfo_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Player_Extend_Playlist_ExtendPlaylistInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Player_Extend_Playlist_ExtendPlaylistInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_Player_Extend_Playlist_ExtendPlaylistInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_Player_Extend_Playlist_ExtendPlaylistInfo}, {}};

static void InitDefaultsValue_Player_Extend_Playlist() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Player_Extend_Playlist_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Player_Extend_Playlist();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Player_Extend_Playlist::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_Player_Extend_Playlist =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_Player_Extend_Playlist}, {
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Extend_Playlist_ExtendPlaylistInfo.base,}};

static void InitDefaultsValue_Player_Limit_In_Out_LimitInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Player_Limit_In_Out_LimitInfo_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Player_Limit_In_Out_LimitInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Player_Limit_In_Out_LimitInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_Player_Limit_In_Out_LimitInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_Player_Limit_In_Out_LimitInfo}, {}};

static void InitDefaultsValue_Player_Limit_In_Out() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Player_Limit_In_Out_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Player_Limit_In_Out();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Player_Limit_In_Out::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_Player_Limit_In_Out =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_Player_Limit_In_Out}, {
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Limit_In_Out_LimitInfo.base,}};

static void InitDefaultsValue_Player_Loop_Mode_LoopModeInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Player_Loop_Mode_LoopModeInfo_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Player_Loop_Mode_LoopModeInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Player_Loop_Mode_LoopModeInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_Player_Loop_Mode_LoopModeInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_Player_Loop_Mode_LoopModeInfo}, {}};

static void InitDefaultsValue_Player_Loop_Mode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Player_Loop_Mode_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Player_Loop_Mode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Player_Loop_Mode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_Player_Loop_Mode =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_Player_Loop_Mode}, {
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Loop_Mode_LoopModeInfo.base,}};

static void InitDefaultsValue_Player_Loop_Count_LoopCountInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Player_Loop_Count_LoopCountInfo_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Player_Loop_Count_LoopCountInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Player_Loop_Count_LoopCountInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_Player_Loop_Count_LoopCountInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_Player_Loop_Count_LoopCountInfo}, {}};

static void InitDefaultsValue_Player_Loop_Count() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Player_Loop_Count_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Player_Loop_Count();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Player_Loop_Count::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_Player_Loop_Count =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_Player_Loop_Count}, {
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Loop_Count_LoopCountInfo.base,}};

static void InitDefaultsValue_Player_Playlist_ID_PlaylistIDInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Player_Playlist_ID_PlaylistIDInfo_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Player_Playlist_ID_PlaylistIDInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Player_Playlist_ID_PlaylistIDInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_Player_Playlist_ID_PlaylistIDInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_Player_Playlist_ID_PlaylistIDInfo}, {}};

static void InitDefaultsValue_Player_Playlist_ID() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Player_Playlist_ID_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Player_Playlist_ID();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Player_Playlist_ID::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_Player_Playlist_ID =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_Player_Playlist_ID}, {
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Playlist_ID_PlaylistIDInfo.base,}};

static void InitDefaultsValue_Player_Playlist_Element_ID_ElementIDInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Player_Playlist_Element_ID_ElementIDInfo_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Player_Playlist_Element_ID_ElementIDInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Player_Playlist_Element_ID_ElementIDInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_Player_Playlist_Element_ID_ElementIDInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_Player_Playlist_Element_ID_ElementIDInfo}, {}};

static void InitDefaultsValue_Player_Playlist_Element_ID() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Player_Playlist_Element_ID_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Player_Playlist_Element_ID();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Player_Playlist_Element_ID::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_Player_Playlist_Element_ID =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_Player_Playlist_Element_ID}, {
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Playlist_Element_ID_ElementIDInfo.base,}};

static void InitDefaultsValue_DVE_Mode_DVEModeInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_DVE_Mode_DVEModeInfo_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_DVE_Mode_DVEModeInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_DVE_Mode_DVEModeInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_DVE_Mode_DVEModeInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_DVE_Mode_DVEModeInfo}, {}};

static void InitDefaultsValue_DVE_Mode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_DVE_Mode_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_DVE_Mode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_DVE_Mode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_DVE_Mode =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_DVE_Mode}, {
      &protobuf_broadcast_2eproto::scc_info_Value_DVE_Mode_DVEModeInfo.base,}};

static void InitDefaultsValue_DVE_Type_DVETypeInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_DVE_Type_DVETypeInfo_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_DVE_Type_DVETypeInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_DVE_Type_DVETypeInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_DVE_Type_DVETypeInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_DVE_Type_DVETypeInfo}, {}};

static void InitDefaultsValue_DVE_Type() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_DVE_Type_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_DVE_Type();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_DVE_Type::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_DVE_Type =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_DVE_Type}, {
      &protobuf_broadcast_2eproto::scc_info_Value_DVE_Type_DVETypeInfo.base,}};

static void InitDefaultsValue_DVE_Channel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_DVE_Channel_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_DVE_Channel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_DVE_Channel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_DVE_Channel =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_DVE_Channel}, {}};

static void InitDefaultsValue_DVE_Num_DVENumInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_DVE_Num_DVENumInfo_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_DVE_Num_DVENumInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_DVE_Num_DVENumInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_DVE_Num_DVENumInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_DVE_Num_DVENumInfo}, {}};

static void InitDefaultsValue_DVE_Num() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_DVE_Num_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_DVE_Num();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_DVE_Num::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_DVE_Num =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_DVE_Num}, {
      &protobuf_broadcast_2eproto::scc_info_Value_DVE_Num_DVENumInfo.base,}};

static void InitDefaultsValue_DVE_Den_DVEDenInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_DVE_Den_DVEDenInfo_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_DVE_Den_DVEDenInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_DVE_Den_DVEDenInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_DVE_Den_DVEDenInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_DVE_Den_DVEDenInfo}, {}};

static void InitDefaultsValue_DVE_Den() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_DVE_Den_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_DVE_Den();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_DVE_Den::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_DVE_Den =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_DVE_Den}, {
      &protobuf_broadcast_2eproto::scc_info_Value_DVE_Den_DVEDenInfo.base,}};

static void InitDefaultsValue_DVE_CutThreshold_DVEThresholdInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_DVE_CutThreshold_DVEThresholdInfo_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_DVE_CutThreshold_DVEThresholdInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_DVE_CutThreshold_DVEThresholdInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_DVE_CutThreshold_DVEThresholdInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_DVE_CutThreshold_DVEThresholdInfo}, {}};

static void InitDefaultsValue_DVE_CutThreshold() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_DVE_CutThreshold_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_DVE_CutThreshold();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_DVE_CutThreshold::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_DVE_CutThreshold =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_DVE_CutThreshold}, {
      &protobuf_broadcast_2eproto::scc_info_Value_DVE_CutThreshold_DVEThresholdInfo.base,}};

static void InitDefaultsValue_DVE_Custom_Transparency_DVECustomTransparencyInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_DVE_Custom_Transparency_DVECustomTransparencyInfo_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_DVE_Custom_Transparency_DVECustomTransparencyInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_DVE_Custom_Transparency_DVECustomTransparencyInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_DVE_Custom_Transparency_DVECustomTransparencyInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_DVE_Custom_Transparency_DVECustomTransparencyInfo}, {}};

static void InitDefaultsValue_DVE_Custom_Transparency() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_DVE_Custom_Transparency_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_DVE_Custom_Transparency();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_DVE_Custom_Transparency::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_DVE_Custom_Transparency =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_DVE_Custom_Transparency}, {
      &protobuf_broadcast_2eproto::scc_info_Value_DVE_Custom_Transparency_DVECustomTransparencyInfo.base,}};

static void InitDefaultsValue_RTD_Status_RTDStatusInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_RTD_Status_RTDStatusInfo_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_RTD_Status_RTDStatusInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_RTD_Status_RTDStatusInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_RTD_Status_RTDStatusInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_RTD_Status_RTDStatusInfo}, {}};

static void InitDefaultsValue_RTD_Status() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_RTD_Status_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_RTD_Status();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_RTD_Status::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_RTD_Status =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_RTD_Status}, {
      &protobuf_broadcast_2eproto::scc_info_Value_RTD_Status_RTDStatusInfo.base,}};

static void InitDefaultsValue_RTD_Type_RTDTypeInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_RTD_Type_RTDTypeInfo_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_RTD_Type_RTDTypeInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_RTD_Type_RTDTypeInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_RTD_Type_RTDTypeInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_RTD_Type_RTDTypeInfo}, {}};

static void InitDefaultsValue_RTD_Type() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_RTD_Type_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_RTD_Type();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_RTD_Type::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_RTD_Type =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_RTD_Type}, {
      &protobuf_broadcast_2eproto::scc_info_Value_RTD_Type_RTDTypeInfo.base,}};

static void InitDefaultsValue_RTD_Position_RTDPositionInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_RTD_Position_RTDPositionInfo_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_RTD_Position_RTDPositionInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_RTD_Position_RTDPositionInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_RTD_Position_RTDPositionInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_RTD_Position_RTDPositionInfo}, {}};

static void InitDefaultsValue_RTD_Position() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_RTD_Position_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_RTD_Position();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_RTD_Position::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_RTD_Position =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_RTD_Position}, {
      &protobuf_broadcast_2eproto::scc_info_Value_RTD_Position_RTDPositionInfo.base,}};

static void InitDefaultsValue_GFX_Status_GFXStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_GFX_Status_GFXStatus_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_GFX_Status_GFXStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_GFX_Status_GFXStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_GFX_Status_GFXStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_GFX_Status_GFXStatus}, {}};

static void InitDefaultsValue_GFX_Status_PGMGFX() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_GFX_Status_PGMGFX_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_GFX_Status_PGMGFX();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_GFX_Status_PGMGFX::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_GFX_Status_PGMGFX =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_GFX_Status_PGMGFX}, {
      &protobuf_broadcast_2eproto::scc_info_Value_GFX_Status_GFXStatus.base,}};

static void InitDefaultsValue_GFX_Status() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_GFX_Status_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_GFX_Status();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_GFX_Status::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_GFX_Status =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_GFX_Status}, {
      &protobuf_broadcast_2eproto::scc_info_Value_GFX_Status_PGMGFX.base,}};

static void InitDefaultsValue_GFX_Position_GFXPosition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_GFX_Position_GFXPosition_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_GFX_Position_GFXPosition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_GFX_Position_GFXPosition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_GFX_Position_GFXPosition =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_GFX_Position_GFXPosition}, {}};

static void InitDefaultsValue_GFX_Position_PGMGFX() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_GFX_Position_PGMGFX_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_GFX_Position_PGMGFX();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_GFX_Position_PGMGFX::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_GFX_Position_PGMGFX =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_GFX_Position_PGMGFX}, {
      &protobuf_broadcast_2eproto::scc_info_Value_GFX_Position_GFXPosition.base,}};

static void InitDefaultsValue_GFX_Position() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_GFX_Position_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_GFX_Position();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_GFX_Position::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_GFX_Position =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_GFX_Position}, {
      &protobuf_broadcast_2eproto::scc_info_Value_GFX_Position_PGMGFX.base,}};

static void InitDefaultsValue_GFX_Fade_In_Out_Duration_GFXFadeDuration() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_GFX_Fade_In_Out_Duration_GFXFadeDuration_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_GFX_Fade_In_Out_Duration_GFXFadeDuration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_GFX_Fade_In_Out_Duration_GFXFadeDuration::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_GFX_Fade_In_Out_Duration_GFXFadeDuration =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_GFX_Fade_In_Out_Duration_GFXFadeDuration}, {}};

static void InitDefaultsValue_GFX_Fade_In_Out_Duration_PGMGFX() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_GFX_Fade_In_Out_Duration_PGMGFX_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_GFX_Fade_In_Out_Duration_PGMGFX();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_GFX_Fade_In_Out_Duration_PGMGFX::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_GFX_Fade_In_Out_Duration_PGMGFX =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_GFX_Fade_In_Out_Duration_PGMGFX}, {
      &protobuf_broadcast_2eproto::scc_info_Value_GFX_Fade_In_Out_Duration_GFXFadeDuration.base,}};

static void InitDefaultsValue_GFX_Fade_In_Out_Duration() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_GFX_Fade_In_Out_Duration_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_GFX_Fade_In_Out_Duration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_GFX_Fade_In_Out_Duration::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_GFX_Fade_In_Out_Duration =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_GFX_Fade_In_Out_Duration}, {
      &protobuf_broadcast_2eproto::scc_info_Value_GFX_Fade_In_Out_Duration_PGMGFX.base,}};

static void InitDefaultsValue_GFX_Loop_In_Out_GFXLoopInOut() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_GFX_Loop_In_Out_GFXLoopInOut_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_GFX_Loop_In_Out_GFXLoopInOut();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_GFX_Loop_In_Out_GFXLoopInOut::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_GFX_Loop_In_Out_GFXLoopInOut =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_GFX_Loop_In_Out_GFXLoopInOut}, {}};

static void InitDefaultsValue_GFX_Loop_In_Out_PGMGFX() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_GFX_Loop_In_Out_PGMGFX_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_GFX_Loop_In_Out_PGMGFX();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_GFX_Loop_In_Out_PGMGFX::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_GFX_Loop_In_Out_PGMGFX =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_GFX_Loop_In_Out_PGMGFX}, {
      &protobuf_broadcast_2eproto::scc_info_Value_GFX_Loop_In_Out_GFXLoopInOut.base,}};

static void InitDefaultsValue_GFX_Loop_In_Out() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_GFX_Loop_In_Out_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_GFX_Loop_In_Out();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_GFX_Loop_In_Out::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_GFX_Loop_In_Out =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_GFX_Loop_In_Out}, {
      &protobuf_broadcast_2eproto::scc_info_Value_GFX_Loop_In_Out_PGMGFX.base,}};

static void InitDefaultsValue_GFX_Loop_Count_GFXLoopCnt() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_GFX_Loop_Count_GFXLoopCnt_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_GFX_Loop_Count_GFXLoopCnt();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_GFX_Loop_Count_GFXLoopCnt::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_GFX_Loop_Count_GFXLoopCnt =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_GFX_Loop_Count_GFXLoopCnt}, {}};

static void InitDefaultsValue_GFX_Loop_Count_PGMGFX() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_GFX_Loop_Count_PGMGFX_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_GFX_Loop_Count_PGMGFX();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_GFX_Loop_Count_PGMGFX::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_GFX_Loop_Count_PGMGFX =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_GFX_Loop_Count_PGMGFX}, {
      &protobuf_broadcast_2eproto::scc_info_Value_GFX_Loop_Count_GFXLoopCnt.base,}};

static void InitDefaultsValue_GFX_Loop_Count() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_GFX_Loop_Count_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_GFX_Loop_Count();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_GFX_Loop_Count::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_GFX_Loop_Count =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_GFX_Loop_Count}, {
      &protobuf_broadcast_2eproto::scc_info_Value_GFX_Loop_Count_PGMGFX.base,}};

static void InitDefaultsValue_GFX_Preload_Status_GFXPreloadStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_GFX_Preload_Status_GFXPreloadStatus_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_GFX_Preload_Status_GFXPreloadStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_GFX_Preload_Status_GFXPreloadStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_GFX_Preload_Status_GFXPreloadStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_GFX_Preload_Status_GFXPreloadStatus}, {}};

static void InitDefaultsValue_GFX_Preload_Status() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_GFX_Preload_Status_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_GFX_Preload_Status();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_GFX_Preload_Status::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_GFX_Preload_Status =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_GFX_Preload_Status}, {
      &protobuf_broadcast_2eproto::scc_info_Value_GFX_Preload_Status_GFXPreloadStatus.base,}};

static void InitDefaultsValue_HealthInfo_Version() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_HealthInfo_Version_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_HealthInfo_Version();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_HealthInfo_Version::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_HealthInfo_Version =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_HealthInfo_Version}, {}};

static void InitDefaultsValue_HealthInfo_Mixer_Status() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_HealthInfo_Mixer_Status_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_HealthInfo_Mixer_Status();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_HealthInfo_Mixer_Status::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_HealthInfo_Mixer_Status =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_HealthInfo_Mixer_Status}, {}};

static void InitDefaultsValue_HealthInfo_Network_Bandwidth() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_HealthInfo_Network_Bandwidth_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_HealthInfo_Network_Bandwidth();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_HealthInfo_Network_Bandwidth::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_HealthInfo_Network_Bandwidth =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_HealthInfo_Network_Bandwidth}, {}};

static void InitDefaultsValue_HealthInfo_GPU_Temperature() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_HealthInfo_GPU_Temperature_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_HealthInfo_GPU_Temperature();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_HealthInfo_GPU_Temperature::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_HealthInfo_GPU_Temperature =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_HealthInfo_GPU_Temperature}, {}};

static void InitDefaultsValue_HealthInfo_AJA_Status_InfoAJA() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_HealthInfo_AJA_Status_InfoAJA_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_HealthInfo_AJA_Status_InfoAJA();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_HealthInfo_AJA_Status_InfoAJA::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_HealthInfo_AJA_Status_InfoAJA =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_HealthInfo_AJA_Status_InfoAJA}, {}};

static void InitDefaultsValue_HealthInfo_AJA_Status() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_HealthInfo_AJA_Status_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_HealthInfo_AJA_Status();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_HealthInfo_AJA_Status::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_HealthInfo_AJA_Status =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_HealthInfo_AJA_Status}, {
      &protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_AJA_Status_InfoAJA.base,}};

static void InitDefaultsValue_HealthInfo_HDD_Status() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_HealthInfo_HDD_Status_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_HealthInfo_HDD_Status();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_HealthInfo_HDD_Status::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_HealthInfo_HDD_Status =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_HealthInfo_HDD_Status}, {}};

static void InitDefaultsValue_HealthInfo_ASIO_Status_ValueStatusPair() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_HealthInfo_ASIO_Status_ValueStatusPair_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_HealthInfo_ASIO_Status_ValueStatusPair();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_HealthInfo_ASIO_Status_ValueStatusPair::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_HealthInfo_ASIO_Status_ValueStatusPair =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_HealthInfo_ASIO_Status_ValueStatusPair}, {}};

static void InitDefaultsValue_HealthInfo_ASIO_Status_AsioStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_HealthInfo_ASIO_Status_AsioStatus_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_HealthInfo_ASIO_Status_AsioStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_HealthInfo_ASIO_Status_AsioStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_HealthInfo_ASIO_Status_AsioStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_HealthInfo_ASIO_Status_AsioStatus}, {
      &protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_ASIO_Status_ValueStatusPair.base,}};

static void InitDefaultsValue_HealthInfo_ASIO_Status() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_HealthInfo_ASIO_Status_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_HealthInfo_ASIO_Status();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_HealthInfo_ASIO_Status::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_HealthInfo_ASIO_Status =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_HealthInfo_ASIO_Status}, {
      &protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_ASIO_Status_AsioStatus.base,}};

static void InitDefaultsValue_HealthInfo_External_TimeCode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_HealthInfo_External_TimeCode_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_HealthInfo_External_TimeCode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_HealthInfo_External_TimeCode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_HealthInfo_External_TimeCode =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_HealthInfo_External_TimeCode}, {}};

static void InitDefaultsValue_CustomInfo_InfoPair() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_CustomInfo_InfoPair_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_CustomInfo_InfoPair();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_CustomInfo_InfoPair::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_CustomInfo_InfoPair =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_CustomInfo_InfoPair}, {}};

static void InitDefaultsValue_CustomInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_CustomInfo_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_CustomInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_CustomInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_CustomInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_CustomInfo}, {
      &protobuf_broadcast_2eproto::scc_info_Value_CustomInfo_InfoPair.base,}};

static void InitDefaultsValue_BMR_Setting() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_BMR_Setting_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_BMR_Setting();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_BMR_Setting::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_BMR_Setting =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_BMR_Setting}, {}};

static void InitDefaultsValue_VuMeter_Live_Mixer_PGM_VuMeter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_VuMeter_Live_Mixer_PGM_VuMeter_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_VuMeter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_VuMeter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_VuMeter_Live_Mixer_PGM_VuMeter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_VuMeter_Live_Mixer_PGM_VuMeter}, {}};

static void InitDefaultsValue_VuMeter_Live_Mixer_PGM_PGMUV() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_VuMeter_Live_Mixer_PGM_PGMUV_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_PGMUV();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_PGMUV::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_VuMeter_Live_Mixer_PGM_PGMUV =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_VuMeter_Live_Mixer_PGM_PGMUV}, {
      &protobuf_broadcast_2eproto::scc_info_Value_VuMeter_Live_Mixer_PGM_VuMeter.base,}};

static void InitDefaultsValue_VuMeter_Live_Mixer_PGM() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_VuMeter_Live_Mixer_PGM_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Value_VuMeter_Live_Mixer_PGM =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsValue_VuMeter_Live_Mixer_PGM}, {
      &protobuf_broadcast_2eproto::scc_info_Value_VuMeter_Live_Mixer_PGM_VuMeter.base,
      &protobuf_broadcast_2eproto::scc_info_Value_VuMeter_Live_Mixer_PGM_PGMUV.base,}};

static void InitDefaultsValue_PiP_Status_PiPStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_PiP_Status_PiPStatus_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_PiP_Status_PiPStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_PiP_Status_PiPStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_PiP_Status_PiPStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_PiP_Status_PiPStatus}, {}};

static void InitDefaultsValue_PiP_Status_PGMPiP() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_PiP_Status_PGMPiP_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_PiP_Status_PGMPiP();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_PiP_Status_PGMPiP::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_PiP_Status_PGMPiP =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_PiP_Status_PGMPiP}, {
      &protobuf_broadcast_2eproto::scc_info_Value_PiP_Status_PiPStatus.base,}};

static void InitDefaultsValue_PiP_Status() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_PiP_Status_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_PiP_Status();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_PiP_Status::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_PiP_Status =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_PiP_Status}, {
      &protobuf_broadcast_2eproto::scc_info_Value_PiP_Status_PGMPiP.base,}};

static void InitDefaultsValue_Server_Memory() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Server_Memory_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Server_Memory();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Server_Memory::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_Server_Memory =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_Server_Memory}, {}};

static void InitDefaultsValue_Cache_ReplayPlayer_HighResVideo_Range() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Cache_ReplayPlayer_HighResVideo_Range_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Cache_ReplayPlayer_HighResVideo_Range();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Cache_ReplayPlayer_HighResVideo_Range::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_Cache_ReplayPlayer_HighResVideo_Range =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_Cache_ReplayPlayer_HighResVideo_Range}, {}};

static void InitDefaultsValue_Cache_ReplayPlayer_HighResVideo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Cache_ReplayPlayer_HighResVideo_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Cache_ReplayPlayer_HighResVideo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Cache_ReplayPlayer_HighResVideo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_Cache_ReplayPlayer_HighResVideo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_Cache_ReplayPlayer_HighResVideo}, {
      &protobuf_broadcast_2eproto::scc_info_Value_Cache_ReplayPlayer_HighResVideo_Range.base,}};

static void InitDefaultsValue_Cache_ReplayPlayer_ExternalAudio_Range() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Cache_ReplayPlayer_ExternalAudio_Range_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Cache_ReplayPlayer_ExternalAudio_Range();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Cache_ReplayPlayer_ExternalAudio_Range::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_Cache_ReplayPlayer_ExternalAudio_Range =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_Cache_ReplayPlayer_ExternalAudio_Range}, {}};

static void InitDefaultsValue_Cache_ReplayPlayer_ExternalAudio() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Cache_ReplayPlayer_ExternalAudio_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Cache_ReplayPlayer_ExternalAudio();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Cache_ReplayPlayer_ExternalAudio::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_Cache_ReplayPlayer_ExternalAudio =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_Cache_ReplayPlayer_ExternalAudio}, {
      &protobuf_broadcast_2eproto::scc_info_Value_Cache_ReplayPlayer_ExternalAudio_Range.base,}};

static void InitDefaultsValue_Storage_Capacity() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Storage_Capacity_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Storage_Capacity();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Storage_Capacity::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_Storage_Capacity =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_Storage_Capacity}, {}};

static void InitDefaultsValue_HealthInfo_ReferenceStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_HealthInfo_ReferenceStatus_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_HealthInfo_ReferenceStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_HealthInfo_ReferenceStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_HealthInfo_ReferenceStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_HealthInfo_ReferenceStatus}, {}};

static void InitDefaultsValue_HealthInfo_SerialNumber_ServerInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_HealthInfo_SerialNumber_ServerInfo_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_HealthInfo_SerialNumber_ServerInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_HealthInfo_SerialNumber_ServerInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_HealthInfo_SerialNumber_ServerInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_HealthInfo_SerialNumber_ServerInfo}, {}};

static void InitDefaultsValue_HealthInfo_SerialNumber() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_HealthInfo_SerialNumber_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_HealthInfo_SerialNumber();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_HealthInfo_SerialNumber::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_HealthInfo_SerialNumber =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_HealthInfo_SerialNumber}, {
      &protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_SerialNumber_ServerInfo.base,}};

static void InitDefaultsValue_HealthInfo_RemainingTimePerCam_RemainingTime() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_HealthInfo_RemainingTimePerCam_RemainingTime_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_HealthInfo_RemainingTimePerCam_RemainingTime();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_HealthInfo_RemainingTimePerCam_RemainingTime::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_HealthInfo_RemainingTimePerCam_RemainingTime =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_HealthInfo_RemainingTimePerCam_RemainingTime}, {}};

static void InitDefaultsValue_HealthInfo_RemainingTimePerCam() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_HealthInfo_RemainingTimePerCam_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_HealthInfo_RemainingTimePerCam();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_HealthInfo_RemainingTimePerCam::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Value_HealthInfo_RemainingTimePerCam =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValue_HealthInfo_RemainingTimePerCam}, {
      &protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_RemainingTimePerCam_RemainingTime.base,}};

static void InitDefaultsValue_Film_Effect_Status() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Film_Effect_Status_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Film_Effect_Status();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Film_Effect_Status::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_Film_Effect_Status =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_Film_Effect_Status}, {}};

static void InitDefaultsValue_Common_TimeReference() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_Value_Common_TimeReference_default_instance_;
    new (ptr) ::GoogleProtoBB::Value_Common_TimeReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::Value_Common_TimeReference::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value_Common_TimeReference =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue_Common_TimeReference}, {}};

static void InitDefaultsBroadCastData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GoogleProtoBB::_BroadCastData_default_instance_;
    new (ptr) ::GoogleProtoBB::BroadCastData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GoogleProtoBB::BroadCastData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<55> scc_info_BroadCastData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 55, InitDefaultsBroadCastData}, {
      &protobuf_broadcast_2eproto::scc_info_Value_Recorder_Train_In_Out.base,
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Status.base,
      &protobuf_broadcast_2eproto::scc_info_Value_Camera_Type.base,
      &protobuf_broadcast_2eproto::scc_info_Value_Recorder_ClosedCaption.base,
      &protobuf_broadcast_2eproto::scc_info_Value_Player_ClosedCaption.base,
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Group.base,
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Camera.base,
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Type.base,
      &protobuf_broadcast_2eproto::scc_info_Value_Player_AudioPresetId.base,
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Speed.base,
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Consigne.base,
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Mode.base,
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Extend_Playlist.base,
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Limit_In_Out.base,
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Loop_Mode.base,
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Loop_Count.base,
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Playlist_ID.base,
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Playlist_Element_ID.base,
      &protobuf_broadcast_2eproto::scc_info_Value_DVE_Mode.base,
      &protobuf_broadcast_2eproto::scc_info_Value_DVE_Type.base,
      &protobuf_broadcast_2eproto::scc_info_Value_DVE_Channel.base,
      &protobuf_broadcast_2eproto::scc_info_Value_DVE_Num.base,
      &protobuf_broadcast_2eproto::scc_info_Value_DVE_Den.base,
      &protobuf_broadcast_2eproto::scc_info_Value_DVE_CutThreshold.base,
      &protobuf_broadcast_2eproto::scc_info_Value_DVE_Custom_Transparency.base,
      &protobuf_broadcast_2eproto::scc_info_Value_RTD_Status.base,
      &protobuf_broadcast_2eproto::scc_info_Value_RTD_Type.base,
      &protobuf_broadcast_2eproto::scc_info_Value_RTD_Position.base,
      &protobuf_broadcast_2eproto::scc_info_Value_GFX_Status.base,
      &protobuf_broadcast_2eproto::scc_info_Value_GFX_Position.base,
      &protobuf_broadcast_2eproto::scc_info_Value_GFX_Fade_In_Out_Duration.base,
      &protobuf_broadcast_2eproto::scc_info_Value_GFX_Loop_In_Out.base,
      &protobuf_broadcast_2eproto::scc_info_Value_GFX_Loop_Count.base,
      &protobuf_broadcast_2eproto::scc_info_Value_GFX_Preload_Status.base,
      &protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_Version.base,
      &protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_Mixer_Status.base,
      &protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_Network_Bandwidth.base,
      &protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_GPU_Temperature.base,
      &protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_AJA_Status.base,
      &protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_HDD_Status.base,
      &protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_ASIO_Status.base,
      &protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_External_TimeCode.base,
      &protobuf_broadcast_2eproto::scc_info_Value_CustomInfo.base,
      &protobuf_broadcast_2eproto::scc_info_Value_BMR_Setting.base,
      &protobuf_broadcast_2eproto::scc_info_Value_VuMeter_Live_Mixer_PGM.base,
      &protobuf_broadcast_2eproto::scc_info_Value_PiP_Status.base,
      &protobuf_broadcast_2eproto::scc_info_Value_Server_Memory.base,
      &protobuf_broadcast_2eproto::scc_info_Value_Cache_ReplayPlayer_HighResVideo.base,
      &protobuf_broadcast_2eproto::scc_info_Value_Cache_ReplayPlayer_ExternalAudio.base,
      &protobuf_broadcast_2eproto::scc_info_Value_Storage_Capacity.base,
      &protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_ReferenceStatus.base,
      &protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_SerialNumber.base,
      &protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_RemainingTimePerCam.base,
      &protobuf_broadcast_2eproto::scc_info_Value_Film_Effect_Status.base,
      &protobuf_broadcast_2eproto::scc_info_Value_Common_TimeReference.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Recorder_Train_In_Out.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Player_Status_StatusInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Player_Status.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Camera_Type_ItemInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Camera_Type.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Recorder_ClosedCaption_ItemInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Recorder_ClosedCaption.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Player_ClosedCaption_ItemInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Player_ClosedCaption.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Player_Group_GroupInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Player_Group.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Player_Camera_CameraInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Player_Camera.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Player_Type_TypeInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Player_Type.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Player_AudioPresetId_TypeInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Player_AudioPresetId.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Player_Speed_SpeedInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Player_Speed.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Player_Consigne_ConsigneInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Player_Consigne.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Player_Mode_ModeInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Player_Mode.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Player_Extend_Playlist_ExtendPlaylistInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Player_Extend_Playlist.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Player_Limit_In_Out_LimitInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Player_Limit_In_Out.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Player_Loop_Mode_LoopModeInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Player_Loop_Mode.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Player_Loop_Count_LoopCountInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Player_Loop_Count.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Player_Playlist_ID_PlaylistIDInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Player_Playlist_ID.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Player_Playlist_Element_ID_ElementIDInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Player_Playlist_Element_ID.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_DVE_Mode_DVEModeInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_DVE_Mode.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_DVE_Type_DVETypeInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_DVE_Type.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_DVE_Channel.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_DVE_Num_DVENumInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_DVE_Num.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_DVE_Den_DVEDenInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_DVE_Den.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_DVE_CutThreshold_DVEThresholdInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_DVE_CutThreshold.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_DVE_Custom_Transparency_DVECustomTransparencyInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_DVE_Custom_Transparency.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_RTD_Status_RTDStatusInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_RTD_Status.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_RTD_Type_RTDTypeInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_RTD_Type.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_RTD_Position_RTDPositionInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_RTD_Position.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_GFX_Status_GFXStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_GFX_Status_PGMGFX.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_GFX_Status.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_GFX_Position_GFXPosition.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_GFX_Position_PGMGFX.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_GFX_Position.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_GFX_Fade_In_Out_Duration_GFXFadeDuration.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_GFX_Fade_In_Out_Duration_PGMGFX.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_GFX_Fade_In_Out_Duration.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_GFX_Loop_In_Out_GFXLoopInOut.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_GFX_Loop_In_Out_PGMGFX.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_GFX_Loop_In_Out.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_GFX_Loop_Count_GFXLoopCnt.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_GFX_Loop_Count_PGMGFX.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_GFX_Loop_Count.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_GFX_Preload_Status_GFXPreloadStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_GFX_Preload_Status.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_HealthInfo_Version.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_HealthInfo_Mixer_Status.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_HealthInfo_Network_Bandwidth.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_HealthInfo_GPU_Temperature.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_HealthInfo_AJA_Status_InfoAJA.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_HealthInfo_AJA_Status.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_HealthInfo_HDD_Status.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_HealthInfo_ASIO_Status_ValueStatusPair.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_HealthInfo_ASIO_Status_AsioStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_HealthInfo_ASIO_Status.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_HealthInfo_External_TimeCode.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_CustomInfo_InfoPair.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_CustomInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_BMR_Setting.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_VuMeter_Live_Mixer_PGM_VuMeter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_VuMeter_Live_Mixer_PGM_PGMUV.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_VuMeter_Live_Mixer_PGM.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_PiP_Status_PiPStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_PiP_Status_PGMPiP.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_PiP_Status.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Server_Memory.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Cache_ReplayPlayer_HighResVideo_Range.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Cache_ReplayPlayer_HighResVideo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Cache_ReplayPlayer_ExternalAudio_Range.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Cache_ReplayPlayer_ExternalAudio.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Storage_Capacity.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_HealthInfo_ReferenceStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_HealthInfo_SerialNumber_ServerInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_HealthInfo_SerialNumber.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_HealthInfo_RemainingTimePerCam_RemainingTime.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_HealthInfo_RemainingTimePerCam.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Film_Effect_Status.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value_Common_TimeReference.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BroadCastData.base);
}

::google::protobuf::Metadata file_level_metadata[105];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[14];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Recorder_Train_In_Out, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Recorder_Train_In_Out, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Recorder_Train_In_Out, trainin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Recorder_Train_In_Out, trainout_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Status_StatusInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Status_StatusInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Status_StatusInfo, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Status, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Status, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Status, statusinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Camera_Type_ItemInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Camera_Type_ItemInfo, camid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Camera_Type_ItemInfo, isnetworking_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Camera_Type, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Camera_Type, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Camera_Type, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Recorder_ClosedCaption_ItemInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Recorder_ClosedCaption_ItemInfo, camid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Recorder_ClosedCaption_ItemInfo, hasclosedcaption_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Recorder_ClosedCaption, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Recorder_ClosedCaption, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Recorder_ClosedCaption, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_ClosedCaption_ItemInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_ClosedCaption_ItemInfo, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_ClosedCaption_ItemInfo, hasclosedcaption_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_ClosedCaption, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_ClosedCaption, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_ClosedCaption, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Group_GroupInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Group_GroupInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Group_GroupInfo, group_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Group, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Group, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Group, groupinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Camera_CameraInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Camera_CameraInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Camera_CameraInfo, camera_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Camera, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Camera, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Camera, camerainfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Type_TypeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Type_TypeInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Type_TypeInfo, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Type, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Type, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Type, typeinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_AudioPresetId_TypeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_AudioPresetId_TypeInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_AudioPresetId_TypeInfo, audiopresetid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_AudioPresetId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_AudioPresetId, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_AudioPresetId, typeinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Speed_SpeedInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Speed_SpeedInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Speed_SpeedInfo, speedn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Speed_SpeedInfo, speedd_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Speed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Speed, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Speed, speedinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Consigne_ConsigneInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Consigne_ConsigneInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Consigne_ConsigneInfo, consigne_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Consigne, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Consigne, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Consigne, consigneinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Mode_ModeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Mode_ModeInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Mode_ModeInfo, playermode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Mode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Mode, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Mode, modeinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Extend_Playlist_ExtendPlaylistInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Extend_Playlist_ExtendPlaylistInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Extend_Playlist_ExtendPlaylistInfo, bextendplaylist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Extend_Playlist, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Extend_Playlist, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Extend_Playlist, extendplaylistinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Limit_In_Out_LimitInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Limit_In_Out_LimitInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Limit_In_Out_LimitInfo, islimitinrelative_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Limit_In_Out_LimitInfo, islimitoutrelative_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Limit_In_Out_LimitInfo, limitin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Limit_In_Out_LimitInfo, limitout_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Limit_In_Out, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Limit_In_Out, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Limit_In_Out, limitinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Loop_Mode_LoopModeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Loop_Mode_LoopModeInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Loop_Mode_LoopModeInfo, loopmode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Loop_Mode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Loop_Mode, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Loop_Mode, loopmodeinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Loop_Count_LoopCountInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Loop_Count_LoopCountInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Loop_Count_LoopCountInfo, loopcount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Loop_Count, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Loop_Count, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Loop_Count, loopcountinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Playlist_ID_PlaylistIDInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Playlist_ID_PlaylistIDInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Playlist_ID_PlaylistIDInfo, idsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Playlist_ID_PlaylistIDInfo, playlistid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Playlist_ID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Playlist_ID, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Playlist_ID, playlistidinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Playlist_Element_ID_ElementIDInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Playlist_Element_ID_ElementIDInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Playlist_Element_ID_ElementIDInfo, idsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Playlist_Element_ID_ElementIDInfo, elementid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Playlist_Element_ID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Playlist_Element_ID, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Player_Playlist_Element_ID, elementidinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_Mode_DVEModeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_Mode_DVEModeInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_Mode_DVEModeInfo, mode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_Mode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_Mode, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_Mode, modeinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_Type_DVETypeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_Type_DVETypeInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_Type_DVETypeInfo, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_Type, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_Type, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_Type, typeinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_Channel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_Channel, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_Channel, cnl_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_Num_DVENumInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_Num_DVENumInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_Num_DVENumInfo, num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_Num, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_Num, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_Num, numinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_Den_DVEDenInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_Den_DVEDenInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_Den_DVEDenInfo, den_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_Den, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_Den, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_Den, deninfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_CutThreshold_DVEThresholdInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_CutThreshold_DVEThresholdInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_CutThreshold_DVEThresholdInfo, threshold_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_CutThreshold, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_CutThreshold, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_CutThreshold, thresholdinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_Custom_Transparency_DVECustomTransparencyInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_Custom_Transparency_DVECustomTransparencyInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_Custom_Transparency_DVECustomTransparencyInfo, bcustom_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_Custom_Transparency, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_Custom_Transparency, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_DVE_Custom_Transparency, custominfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_RTD_Status_RTDStatusInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_RTD_Status_RTDStatusInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_RTD_Status_RTDStatusInfo, enable_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_RTD_Status, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_RTD_Status, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_RTD_Status, statusinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_RTD_Type_RTDTypeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_RTD_Type_RTDTypeInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_RTD_Type_RTDTypeInfo, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_RTD_Type, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_RTD_Type, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_RTD_Type, typeinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_RTD_Position_RTDPositionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_RTD_Position_RTDPositionInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_RTD_Position_RTDPositionInfo, position_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_RTD_Position, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_RTD_Position, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_RTD_Position, positioninfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Status_GFXStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Status_GFXStatus, targetcnlid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Status_GFXStatus, gfxcnl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Status_GFXStatus, enable_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Status_PGMGFX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Status_PGMGFX, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Status_PGMGFX, gfxstatus_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Status, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Status, pgmcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Status, pgmgfx_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Position_GFXPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Position_GFXPosition, targetcnlid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Position_GFXPosition, gfxcnl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Position_GFXPosition, position_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Position_PGMGFX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Position_PGMGFX, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Position_PGMGFX, gfxposition_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Position, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Position, pgmcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Position, pgmgfx_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Fade_In_Out_Duration_GFXFadeDuration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Fade_In_Out_Duration_GFXFadeDuration, targetcnlid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Fade_In_Out_Duration_GFXFadeDuration, gfxcnl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Fade_In_Out_Duration_GFXFadeDuration, fadeinduration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Fade_In_Out_Duration_GFXFadeDuration, fadeoutduration_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Fade_In_Out_Duration_PGMGFX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Fade_In_Out_Duration_PGMGFX, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Fade_In_Out_Duration_PGMGFX, gfxfadeduration_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Fade_In_Out_Duration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Fade_In_Out_Duration, pgmcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Fade_In_Out_Duration, pgmgfx_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Loop_In_Out_GFXLoopInOut, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Loop_In_Out_GFXLoopInOut, targetcnlid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Loop_In_Out_GFXLoopInOut, gfxcnl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Loop_In_Out_GFXLoopInOut, loopin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Loop_In_Out_GFXLoopInOut, loopout_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Loop_In_Out_PGMGFX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Loop_In_Out_PGMGFX, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Loop_In_Out_PGMGFX, gfxloopinout_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Loop_In_Out, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Loop_In_Out, pgmcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Loop_In_Out, pgmgfx_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Loop_Count_GFXLoopCnt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Loop_Count_GFXLoopCnt, targetcnlid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Loop_Count_GFXLoopCnt, gfxcnl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Loop_Count_GFXLoopCnt, loopcnt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Loop_Count_PGMGFX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Loop_Count_PGMGFX, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Loop_Count_PGMGFX, gfxloopcnt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Loop_Count, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Loop_Count, pgmcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Loop_Count, pgmgfx_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Preload_Status_GFXPreloadStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Preload_Status_GFXPreloadStatus, gfxcnl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Preload_Status_GFXPreloadStatus, preloadingstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Preload_Status_GFXPreloadStatus, preloadnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Preload_Status_GFXPreloadStatus, preloadden_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Preload_Status_GFXPreloadStatus, idsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Preload_Status_GFXPreloadStatus, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Preload_Status, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Preload_Status, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_GFX_Preload_Status, gfxpreloadstatus_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_Version, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_Version, version0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_Version, version1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_Version, version2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_Version, version3_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_Mixer_Status, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_Mixer_Status, hasconnectedaudiomixer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_Network_Bandwidth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_Network_Bandwidth, networkbandwidth_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_GPU_Temperature, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_GPU_Temperature, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_GPU_Temperature, temperaturegpu_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_AJA_Status_InfoAJA, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_AJA_Status_InfoAJA, temperatureaja_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_AJA_Status_InfoAJA, lostaja_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_AJA_Status, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_AJA_Status, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_AJA_Status, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_HDD_Status, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_HDD_Status, hddfaulty_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_ASIO_Status_ValueStatusPair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_ASIO_Status_ValueStatusPair, val_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_ASIO_Status_ValueStatusPair, isgood_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_ASIO_Status_AsioStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_ASIO_Status_AsioStatus, samplerate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_ASIO_Status_AsioStatus, buffersize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_ASIO_Status_AsioStatus, inputlatency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_ASIO_Status_AsioStatus, outputlatency_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_ASIO_Status, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_ASIO_Status, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_External_TimeCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_External_TimeCode, isexternaltc_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_CustomInfo_InfoPair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_CustomInfo_InfoPair, keysize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_CustomInfo_InfoPair, valuesize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_CustomInfo_InfoPair, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_CustomInfo_InfoPair, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_CustomInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_CustomInfo, nbcustominfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_CustomInfo, infoarray_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_BMR_Setting, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_BMR_Setting, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_BMR_Setting, bufsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_BMR_Setting, buf_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_VuMeter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_VuMeter, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_VuMeter, dbtbl_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_PGMUV, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_PGMUV, uvclean_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_PGMUV, dirty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_PGMUV, player_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM, mixermeter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM, countoflivemeter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM, livemeter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM, countofprv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM, prvmeter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM, countofpgm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM, pgmmeter_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_PiP_Status_PiPStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_PiP_Status_PiPStatus, targetcnlid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_PiP_Status_PiPStatus, pipcnl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_PiP_Status_PiPStatus, enable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_PiP_Status_PiPStatus, bgfadeinduration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_PiP_Status_PiPStatus, bgfadeoutduration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_PiP_Status_PiPStatus, bgloopin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_PiP_Status_PiPStatus, bgloopout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_PiP_Status_PiPStatus, bgloopcnt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_PiP_Status_PGMPiP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_PiP_Status_PGMPiP, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_PiP_Status_PGMPiP, gfxstatus_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_PiP_Status, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_PiP_Status, pgmcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_PiP_Status, pgmpip_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Server_Memory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Server_Memory, currentmemory_gb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Server_Memory, expectedmemory_gb_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Cache_ReplayPlayer_HighResVideo_Range, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Cache_ReplayPlayer_HighResVideo_Range, currentframeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Cache_ReplayPlayer_HighResVideo_Range, out_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Cache_ReplayPlayer_HighResVideo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Cache_ReplayPlayer_HighResVideo, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Cache_ReplayPlayer_HighResVideo, range_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Cache_ReplayPlayer_ExternalAudio_Range, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Cache_ReplayPlayer_ExternalAudio_Range, currentframeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Cache_ReplayPlayer_ExternalAudio_Range, out_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Cache_ReplayPlayer_ExternalAudio, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Cache_ReplayPlayer_ExternalAudio, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Cache_ReplayPlayer_ExternalAudio, range_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Storage_Capacity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Storage_Capacity, blocksize_mb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Storage_Capacity, nbblockused_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Storage_Capacity, nbblocktotal_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_ReferenceStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_ReferenceStatus, referencestatus_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_SerialNumber_ServerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_SerialNumber_ServerInfo, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_SerialNumber_ServerInfo, snsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_SerialNumber_ServerInfo, sn_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_SerialNumber, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_SerialNumber, nbserver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_SerialNumber, serverinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_RemainingTimePerCam_RemainingTime, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_RemainingTimePerCam_RemainingTime, cam_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_RemainingTimePerCam_RemainingTime, remainingsecond_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_RemainingTimePerCam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_RemainingTimePerCam, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_HealthInfo_RemainingTimePerCam, remainingtime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Film_Effect_Status, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Film_Effect_Status, pgm_enabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Film_Effect_Status, prv_enabled_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Common_TimeReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::Value_Common_TimeReference, timereference_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_recorder_train_in_out_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_player_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_camera_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_recorder_closedcaption_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_player_closedcaption_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_player_group_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_player_camera_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_player_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_player_audiopresetid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_player_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_player_consigne_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_player_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_player_extend_playlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_player_limit_in_out_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_player_loop_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_player_loop_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_player_playlist_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_player_playlist_element_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_dve_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_dve_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_dve_channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_dve_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_dve_den_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_dve_cutthreshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_dve_custom_transparency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_rtd_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_rtd_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_rtd_position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_gfx_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_gfx_position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_gfx_fade_in_out_duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_gfx_loop_in_out_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_gfx_loop_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_gfx_preload_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_healthinfo_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_healthinfo_mixer_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_healthinfo_network_bandwidth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_healthinfo_gpu_temperature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_healthinfo_aja_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_healthinfo_hdd_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_healthinfo_asio_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_healthinfo_external_timecode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_custominfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_bmr_setting_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_vumeter_live_mixer_pgm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_pip_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_server_memory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_cache_replayplayer_highresvideo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_cache_replayplayer_externalaudio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_storage_capacity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_healthinfo_referencestatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_healthinfo_serialnumber_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_healthinfo_remainingtimepercam_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_film_effect_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GoogleProtoBB::BroadCastData, value_common_timereference_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::GoogleProtoBB::Value_Recorder_Train_In_Out)},
  { 8, -1, sizeof(::GoogleProtoBB::Value_Player_Status_StatusInfo)},
  { 15, -1, sizeof(::GoogleProtoBB::Value_Player_Status)},
  { 22, -1, sizeof(::GoogleProtoBB::Value_Camera_Type_ItemInfo)},
  { 29, -1, sizeof(::GoogleProtoBB::Value_Camera_Type)},
  { 36, -1, sizeof(::GoogleProtoBB::Value_Recorder_ClosedCaption_ItemInfo)},
  { 43, -1, sizeof(::GoogleProtoBB::Value_Recorder_ClosedCaption)},
  { 50, -1, sizeof(::GoogleProtoBB::Value_Player_ClosedCaption_ItemInfo)},
  { 57, -1, sizeof(::GoogleProtoBB::Value_Player_ClosedCaption)},
  { 64, -1, sizeof(::GoogleProtoBB::Value_Player_Group_GroupInfo)},
  { 71, -1, sizeof(::GoogleProtoBB::Value_Player_Group)},
  { 78, -1, sizeof(::GoogleProtoBB::Value_Player_Camera_CameraInfo)},
  { 85, -1, sizeof(::GoogleProtoBB::Value_Player_Camera)},
  { 92, -1, sizeof(::GoogleProtoBB::Value_Player_Type_TypeInfo)},
  { 99, -1, sizeof(::GoogleProtoBB::Value_Player_Type)},
  { 106, -1, sizeof(::GoogleProtoBB::Value_Player_AudioPresetId_TypeInfo)},
  { 113, -1, sizeof(::GoogleProtoBB::Value_Player_AudioPresetId)},
  { 120, -1, sizeof(::GoogleProtoBB::Value_Player_Speed_SpeedInfo)},
  { 128, -1, sizeof(::GoogleProtoBB::Value_Player_Speed)},
  { 135, -1, sizeof(::GoogleProtoBB::Value_Player_Consigne_ConsigneInfo)},
  { 142, -1, sizeof(::GoogleProtoBB::Value_Player_Consigne)},
  { 149, -1, sizeof(::GoogleProtoBB::Value_Player_Mode_ModeInfo)},
  { 156, -1, sizeof(::GoogleProtoBB::Value_Player_Mode)},
  { 163, -1, sizeof(::GoogleProtoBB::Value_Player_Extend_Playlist_ExtendPlaylistInfo)},
  { 170, -1, sizeof(::GoogleProtoBB::Value_Player_Extend_Playlist)},
  { 177, -1, sizeof(::GoogleProtoBB::Value_Player_Limit_In_Out_LimitInfo)},
  { 187, -1, sizeof(::GoogleProtoBB::Value_Player_Limit_In_Out)},
  { 194, -1, sizeof(::GoogleProtoBB::Value_Player_Loop_Mode_LoopModeInfo)},
  { 201, -1, sizeof(::GoogleProtoBB::Value_Player_Loop_Mode)},
  { 208, -1, sizeof(::GoogleProtoBB::Value_Player_Loop_Count_LoopCountInfo)},
  { 215, -1, sizeof(::GoogleProtoBB::Value_Player_Loop_Count)},
  { 222, -1, sizeof(::GoogleProtoBB::Value_Player_Playlist_ID_PlaylistIDInfo)},
  { 230, -1, sizeof(::GoogleProtoBB::Value_Player_Playlist_ID)},
  { 237, -1, sizeof(::GoogleProtoBB::Value_Player_Playlist_Element_ID_ElementIDInfo)},
  { 245, -1, sizeof(::GoogleProtoBB::Value_Player_Playlist_Element_ID)},
  { 252, -1, sizeof(::GoogleProtoBB::Value_DVE_Mode_DVEModeInfo)},
  { 259, -1, sizeof(::GoogleProtoBB::Value_DVE_Mode)},
  { 266, -1, sizeof(::GoogleProtoBB::Value_DVE_Type_DVETypeInfo)},
  { 273, -1, sizeof(::GoogleProtoBB::Value_DVE_Type)},
  { 280, -1, sizeof(::GoogleProtoBB::Value_DVE_Channel)},
  { 287, -1, sizeof(::GoogleProtoBB::Value_DVE_Num_DVENumInfo)},
  { 294, -1, sizeof(::GoogleProtoBB::Value_DVE_Num)},
  { 301, -1, sizeof(::GoogleProtoBB::Value_DVE_Den_DVEDenInfo)},
  { 308, -1, sizeof(::GoogleProtoBB::Value_DVE_Den)},
  { 315, -1, sizeof(::GoogleProtoBB::Value_DVE_CutThreshold_DVEThresholdInfo)},
  { 322, -1, sizeof(::GoogleProtoBB::Value_DVE_CutThreshold)},
  { 329, -1, sizeof(::GoogleProtoBB::Value_DVE_Custom_Transparency_DVECustomTransparencyInfo)},
  { 336, -1, sizeof(::GoogleProtoBB::Value_DVE_Custom_Transparency)},
  { 343, -1, sizeof(::GoogleProtoBB::Value_RTD_Status_RTDStatusInfo)},
  { 350, -1, sizeof(::GoogleProtoBB::Value_RTD_Status)},
  { 357, -1, sizeof(::GoogleProtoBB::Value_RTD_Type_RTDTypeInfo)},
  { 364, -1, sizeof(::GoogleProtoBB::Value_RTD_Type)},
  { 371, -1, sizeof(::GoogleProtoBB::Value_RTD_Position_RTDPositionInfo)},
  { 378, -1, sizeof(::GoogleProtoBB::Value_RTD_Position)},
  { 385, -1, sizeof(::GoogleProtoBB::Value_GFX_Status_GFXStatus)},
  { 393, -1, sizeof(::GoogleProtoBB::Value_GFX_Status_PGMGFX)},
  { 400, -1, sizeof(::GoogleProtoBB::Value_GFX_Status)},
  { 407, -1, sizeof(::GoogleProtoBB::Value_GFX_Position_GFXPosition)},
  { 415, -1, sizeof(::GoogleProtoBB::Value_GFX_Position_PGMGFX)},
  { 422, -1, sizeof(::GoogleProtoBB::Value_GFX_Position)},
  { 429, -1, sizeof(::GoogleProtoBB::Value_GFX_Fade_In_Out_Duration_GFXFadeDuration)},
  { 438, -1, sizeof(::GoogleProtoBB::Value_GFX_Fade_In_Out_Duration_PGMGFX)},
  { 445, -1, sizeof(::GoogleProtoBB::Value_GFX_Fade_In_Out_Duration)},
  { 452, -1, sizeof(::GoogleProtoBB::Value_GFX_Loop_In_Out_GFXLoopInOut)},
  { 461, -1, sizeof(::GoogleProtoBB::Value_GFX_Loop_In_Out_PGMGFX)},
  { 468, -1, sizeof(::GoogleProtoBB::Value_GFX_Loop_In_Out)},
  { 475, -1, sizeof(::GoogleProtoBB::Value_GFX_Loop_Count_GFXLoopCnt)},
  { 483, -1, sizeof(::GoogleProtoBB::Value_GFX_Loop_Count_PGMGFX)},
  { 490, -1, sizeof(::GoogleProtoBB::Value_GFX_Loop_Count)},
  { 497, -1, sizeof(::GoogleProtoBB::Value_GFX_Preload_Status_GFXPreloadStatus)},
  { 508, -1, sizeof(::GoogleProtoBB::Value_GFX_Preload_Status)},
  { 515, -1, sizeof(::GoogleProtoBB::Value_HealthInfo_Version)},
  { 524, -1, sizeof(::GoogleProtoBB::Value_HealthInfo_Mixer_Status)},
  { 530, -1, sizeof(::GoogleProtoBB::Value_HealthInfo_Network_Bandwidth)},
  { 536, -1, sizeof(::GoogleProtoBB::Value_HealthInfo_GPU_Temperature)},
  { 543, -1, sizeof(::GoogleProtoBB::Value_HealthInfo_AJA_Status_InfoAJA)},
  { 550, -1, sizeof(::GoogleProtoBB::Value_HealthInfo_AJA_Status)},
  { 557, -1, sizeof(::GoogleProtoBB::Value_HealthInfo_HDD_Status)},
  { 563, -1, sizeof(::GoogleProtoBB::Value_HealthInfo_ASIO_Status_ValueStatusPair)},
  { 570, -1, sizeof(::GoogleProtoBB::Value_HealthInfo_ASIO_Status_AsioStatus)},
  { 579, -1, sizeof(::GoogleProtoBB::Value_HealthInfo_ASIO_Status)},
  { 585, -1, sizeof(::GoogleProtoBB::Value_HealthInfo_External_TimeCode)},
  { 591, -1, sizeof(::GoogleProtoBB::Value_CustomInfo_InfoPair)},
  { 600, -1, sizeof(::GoogleProtoBB::Value_CustomInfo)},
  { 607, -1, sizeof(::GoogleProtoBB::Value_BMR_Setting)},
  { 615, -1, sizeof(::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_VuMeter)},
  { 622, -1, sizeof(::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_PGMUV)},
  { 630, -1, sizeof(::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM)},
  { 642, -1, sizeof(::GoogleProtoBB::Value_PiP_Status_PiPStatus)},
  { 655, -1, sizeof(::GoogleProtoBB::Value_PiP_Status_PGMPiP)},
  { 662, -1, sizeof(::GoogleProtoBB::Value_PiP_Status)},
  { 669, -1, sizeof(::GoogleProtoBB::Value_Server_Memory)},
  { 676, -1, sizeof(::GoogleProtoBB::Value_Cache_ReplayPlayer_HighResVideo_Range)},
  { 683, -1, sizeof(::GoogleProtoBB::Value_Cache_ReplayPlayer_HighResVideo)},
  { 690, -1, sizeof(::GoogleProtoBB::Value_Cache_ReplayPlayer_ExternalAudio_Range)},
  { 697, -1, sizeof(::GoogleProtoBB::Value_Cache_ReplayPlayer_ExternalAudio)},
  { 704, -1, sizeof(::GoogleProtoBB::Value_Storage_Capacity)},
  { 712, -1, sizeof(::GoogleProtoBB::Value_HealthInfo_ReferenceStatus)},
  { 718, -1, sizeof(::GoogleProtoBB::Value_HealthInfo_SerialNumber_ServerInfo)},
  { 726, -1, sizeof(::GoogleProtoBB::Value_HealthInfo_SerialNumber)},
  { 733, -1, sizeof(::GoogleProtoBB::Value_HealthInfo_RemainingTimePerCam_RemainingTime)},
  { 740, -1, sizeof(::GoogleProtoBB::Value_HealthInfo_RemainingTimePerCam)},
  { 747, -1, sizeof(::GoogleProtoBB::Value_Film_Effect_Status)},
  { 754, -1, sizeof(::GoogleProtoBB::Value_Common_TimeReference)},
  { 760, -1, sizeof(::GoogleProtoBB::BroadCastData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Recorder_Train_In_Out_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Player_Status_StatusInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Player_Status_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Camera_Type_ItemInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Camera_Type_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Recorder_ClosedCaption_ItemInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Recorder_ClosedCaption_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Player_ClosedCaption_ItemInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Player_ClosedCaption_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Player_Group_GroupInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Player_Group_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Player_Camera_CameraInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Player_Camera_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Player_Type_TypeInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Player_Type_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Player_AudioPresetId_TypeInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Player_AudioPresetId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Player_Speed_SpeedInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Player_Speed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Player_Consigne_ConsigneInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Player_Consigne_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Player_Mode_ModeInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Player_Mode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Player_Extend_Playlist_ExtendPlaylistInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Player_Extend_Playlist_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Player_Limit_In_Out_LimitInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Player_Limit_In_Out_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Player_Loop_Mode_LoopModeInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Player_Loop_Mode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Player_Loop_Count_LoopCountInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Player_Loop_Count_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Player_Playlist_ID_PlaylistIDInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Player_Playlist_ID_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Player_Playlist_Element_ID_ElementIDInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Player_Playlist_Element_ID_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_DVE_Mode_DVEModeInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_DVE_Mode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_DVE_Type_DVETypeInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_DVE_Type_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_DVE_Channel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_DVE_Num_DVENumInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_DVE_Num_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_DVE_Den_DVEDenInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_DVE_Den_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_DVE_CutThreshold_DVEThresholdInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_DVE_CutThreshold_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_DVE_Custom_Transparency_DVECustomTransparencyInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_DVE_Custom_Transparency_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_RTD_Status_RTDStatusInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_RTD_Status_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_RTD_Type_RTDTypeInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_RTD_Type_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_RTD_Position_RTDPositionInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_RTD_Position_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_GFX_Status_GFXStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_GFX_Status_PGMGFX_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_GFX_Status_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_GFX_Position_GFXPosition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_GFX_Position_PGMGFX_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_GFX_Position_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_GFX_Fade_In_Out_Duration_GFXFadeDuration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_GFX_Fade_In_Out_Duration_PGMGFX_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_GFX_Fade_In_Out_Duration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_GFX_Loop_In_Out_GFXLoopInOut_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_GFX_Loop_In_Out_PGMGFX_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_GFX_Loop_In_Out_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_GFX_Loop_Count_GFXLoopCnt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_GFX_Loop_Count_PGMGFX_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_GFX_Loop_Count_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_GFX_Preload_Status_GFXPreloadStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_GFX_Preload_Status_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_HealthInfo_Version_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_HealthInfo_Mixer_Status_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_HealthInfo_Network_Bandwidth_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_HealthInfo_GPU_Temperature_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_HealthInfo_AJA_Status_InfoAJA_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_HealthInfo_AJA_Status_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_HealthInfo_HDD_Status_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_HealthInfo_ASIO_Status_ValueStatusPair_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_HealthInfo_ASIO_Status_AsioStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_HealthInfo_ASIO_Status_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_HealthInfo_External_TimeCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_CustomInfo_InfoPair_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_CustomInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_BMR_Setting_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_VuMeter_Live_Mixer_PGM_VuMeter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_VuMeter_Live_Mixer_PGM_PGMUV_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_VuMeter_Live_Mixer_PGM_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_PiP_Status_PiPStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_PiP_Status_PGMPiP_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_PiP_Status_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Server_Memory_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Cache_ReplayPlayer_HighResVideo_Range_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Cache_ReplayPlayer_HighResVideo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Cache_ReplayPlayer_ExternalAudio_Range_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Cache_ReplayPlayer_ExternalAudio_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Storage_Capacity_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_HealthInfo_ReferenceStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_HealthInfo_SerialNumber_ServerInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_HealthInfo_SerialNumber_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_HealthInfo_RemainingTimePerCam_RemainingTime_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_HealthInfo_RemainingTimePerCam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Film_Effect_Status_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_Value_Common_TimeReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GoogleProtoBB::_BroadCastData_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "broadcast.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 105);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017broadcast.proto\022\rGoogleProtoBB\"O\n\033Valu"
      "e_Recorder_Train_In_Out\022\r\n\005count\030\001 \001(\r\022\017"
      "\n\007trainIn\030\002 \003(\004\022\020\n\010trainOut\030\003 \003(\004\"\247\001\n\023Va"
      "lue_Player_Status\022\r\n\005count\030\001 \001(\r\022A\n\nstat"
      "usInfo\030\002 \003(\0132-.GoogleProtoBB.Value_Playe"
      "r_Status.StatusInfo\032>\n\nStatusInfo\022 \n\002id\030"
      "\001 \001(\0162\024.GoogleProtoBB.CnlID\022\016\n\006status\030\002 "
      "\001(\r\"\215\001\n\021Value_Camera_Type\022\r\n\005count\030\001 \001(\r"
      "\0228\n\005items\030\002 \003(\0132).GoogleProtoBB.Value_Ca"
      "mera_Type.ItemInfo\032/\n\010ItemInfo\022\r\n\005camID\030"
      "\001 \001(\r\022\024\n\014isNetworking\030\002 \001(\010\"\247\001\n\034Value_Re"
      "corder_ClosedCaption\022\r\n\005count\030\001 \001(\r\022C\n\005i"
      "tems\030\002 \003(\01324.GoogleProtoBB.Value_Recorde"
      "r_ClosedCaption.ItemInfo\0323\n\010ItemInfo\022\r\n\005"
      "camID\030\001 \001(\r\022\030\n\020hasClosedCaption\030\002 \001(\010\"\246\001"
      "\n\032Value_Player_ClosedCaption\022\r\n\005count\030\001 "
      "\001(\r\022A\n\005items\030\002 \003(\01322.GoogleProtoBB.Value"
      "_Player_ClosedCaption.ItemInfo\0326\n\010ItemIn"
      "fo\022\020\n\010playerid\030\001 \001(\r\022\030\n\020hasClosedCaption"
      "\030\002 \001(\010\"\241\001\n\022Value_Player_Group\022\r\n\005count\030\001"
      " \001(\r\022>\n\tgroupInfo\030\002 \003(\0132+.GoogleProtoBB."
      "Value_Player_Group.GroupInfo\032<\n\tGroupInf"
      "o\022 \n\002id\030\001 \001(\0162\024.GoogleProtoBB.CnlID\022\r\n\005g"
      "roup\030\002 \001(\r\"\275\001\n\023Value_Player_Camera\022\r\n\005co"
      "unt\030\001 \001(\r\022A\n\ncameraInfo\030\002 \003(\0132-.GooglePr"
      "otoBB.Value_Player_Camera.CameraInfo\032T\n\n"
      "CameraInfo\022 \n\002id\030\001 \001(\0162\024.GoogleProtoBB.C"
      "nlID\022$\n\006camera\030\002 \001(\0162\024.GoogleProtoBB.Cam"
      "ID\"\204\002\n\021Value_Player_Type\022\r\n\005count\030\001 \001(\r\022"
      ";\n\010typeInfo\030\002 \003(\0132).GoogleProtoBB.Value_"
      "Player_Type.TypeInfo\032g\n\010TypeInfo\022 \n\002id\030\001"
      " \001(\0162\024.GoogleProtoBB.CnlID\0229\n\004type\030\002 \001(\016"
      "2+.GoogleProtoBB.Value_Player_Type.Playe"
      "rType\":\n\nPlayerType\022\026\n\022PLAYER_TYPE_REPLA"
      "Y\020\000\022\024\n\020PLAYER_TYPE_LIVE\020\001\"\266\001\n\032Value_Play"
      "er_AudioPresetId\022\r\n\005count\030\001 \001(\r\022D\n\010typeI"
      "nfo\030\002 \003(\01322.GoogleProtoBB.Value_Player_A"
      "udioPresetId.TypeInfo\032C\n\010TypeInfo\022 \n\002id\030"
      "\001 \001(\0162\024.GoogleProtoBB.CnlID\022\025\n\raudioPres"
      "etId\030\002 \001(\r\"\262\001\n\022Value_Player_Speed\022\r\n\005cou"
      "nt\030\001 \001(\r\022>\n\tspeedInfo\030\002 \003(\0132+.GoogleProt"
      "oBB.Value_Player_Speed.SpeedInfo\032M\n\tSpee"
      "dInfo\022 \n\002id\030\001 \001(\0162\024.GoogleProtoBB.CnlID\022"
      "\016\n\006speedN\030\002 \001(\005\022\016\n\006speedD\030\003 \001(\005\"\263\001\n\025Valu"
      "e_Player_Consigne\022\r\n\005count\030\001 \001(\r\022G\n\014cons"
      "igneInfo\030\002 \003(\01321.GoogleProtoBB.Value_Pla"
      "yer_Consigne.ConsigneInfo\032B\n\014ConsigneInf"
      "o\022 \n\002id\030\001 \001(\0162\024.GoogleProtoBB.CnlID\022\020\n\010c"
      "onsigne\030\002 \001(\004\"\374\001\n\021Value_Player_Mode\022\r\n\005c"
      "ount\030\001 \001(\r\022;\n\010modeInfo\030\002 \003(\0132).GooglePro"
      "toBB.Value_Player_Mode.ModeInfo\032m\n\010ModeI"
      "nfo\022 \n\002id\030\001 \001(\0162\024.GoogleProtoBB.CnlID\022\?\n"
      "\nplayerMode\030\002 \001(\0162+.GoogleProtoBB.Value_"
      "Player_Mode.PlayerMode\",\n\nPlayerMode\022\014\n\010"
      "clipMode\020\000\022\020\n\014playlistMode\020\001\"\332\001\n\034Value_P"
      "layer_Extend_Playlist\022\r\n\005count\030\001 \001(\r\022Z\n\022"
      "extendPlaylistInfo\030\002 \003(\0132>.GoogleProtoBB"
      ".Value_Player_Extend_Playlist.ExtendPlay"
      "listInfo\032O\n\022ExtendPlaylistInfo\022 \n\002id\030\001 \001"
      "(\0162\024.GoogleProtoBB.CnlID\022\027\n\017bExtendPlayl"
      "ist\030\002 \001(\010\"\373\001\n\031Value_Player_Limit_In_Out\022"
      "\r\n\005count\030\001 \001(\r\022E\n\tlimitInfo\030\002 \003(\01322.Goog"
      "leProtoBB.Value_Player_Limit_In_Out.Limi"
      "tInfo\032\207\001\n\tLimitInfo\022 \n\002id\030\001 \001(\0162\024.Google"
      "ProtoBB.CnlID\022\031\n\021isLimitInRelative\030\002 \001(\010"
      "\022\032\n\022isLimitOutRelative\030\003 \001(\010\022\017\n\007limitIn\030"
      "\004 \001(\004\022\020\n\010limitOut\030\005 \001(\004\"\236\002\n\026Value_Player"
      "_Loop_Mode\022\r\n\005count\030\001 \001(\r\022H\n\014loopModeInf"
      "o\030\002 \003(\01322.GoogleProtoBB.Value_Player_Loo"
      "p_Mode.LoopModeInfo\032x\n\014LoopModeInfo\022 \n\002i"
      "d\030\001 \001(\0162\024.GoogleProtoBB.CnlID\022F\n\010loopMod"
      "e\030\002 \001(\01624.GoogleProtoBB.Value_Player_Loo"
      "p_Mode.PlayerLoopMode\"1\n\016PlayerLoopMode\022"
      "\007\n\003OFF\020\000\022\007\n\003STD\020\001\022\r\n\tPING_PONG\020\002\"\273\001\n\027Val"
      "ue_Player_Loop_Count\022\r\n\005count\030\001 \001(\r\022K\n\rl"
      "oopCountInfo\030\002 \003(\01324.GoogleProtoBB.Value"
      "_Player_Loop_Count.LoopCountInfo\032D\n\rLoop"
      "CountInfo\022 \n\002id\030\001 \001(\0162\024.GoogleProtoBB.Cn"
      "lID\022\021\n\tloopCount\030\002 \001(\r\"\321\001\n\030Value_Player_"
      "Playlist_ID\022\r\n\005count\030\001 \001(\r\022N\n\016playlistID"
      "Info\030\002 \003(\01326.GoogleProtoBB.Value_Player_"
      "Playlist_ID.PlaylistIDInfo\032V\n\016PlaylistID"
      "Info\022 \n\002id\030\001 \001(\0162\024.GoogleProtoBB.CnlID\022\016"
      "\n\006idSize\030\002 \001(\r\022\022\n\nplaylistID\030\003 \001(\014\"\335\001\n V"
      "alue_Player_Playlist_Element_ID\022\r\n\005count"
      "\030\001 \001(\r\022T\n\relementIDInfo\030\002 \003(\0132=.GooglePr"
      "otoBB.Value_Player_Playlist_Element_ID.E"
      "lementIDInfo\032T\n\rElementIDInfo\022 \n\002id\030\001 \001("
      "\0162\024.GoogleProtoBB.CnlID\022\016\n\006idSize\030\002 \001(\r\022"
      "\021\n\telementID\030\003 \001(\014\"\370\001\n\016Value_DVE_Mode\022\r\n"
      "\005count\030\001 \001(\r\022;\n\010modeInfo\030\002 \003(\0132).GoogleP"
      "rotoBB.Value_DVE_Mode.DVEModeInfo\032d\n\013DVE"
      "ModeInfo\022 \n\002id\030\001 \001(\0162\024.GoogleProtoBB.Cnl"
      "ID\0223\n\004mode\030\002 \001(\0162%.GoogleProtoBB.Value_D"
      "VE_Mode.DVEMode\"4\n\007DVEMode\022\013\n\007offMode\020\000\022"
      "\014\n\010autoMode\020\001\022\016\n\nmanualMode\020\002\"\374\001\n\016Value_"
      "DVE_Type\022\r\n\005count\030\001 \001(\r\022;\n\010typeInfo\030\002 \003("
      "\0132).GoogleProtoBB.Value_DVE_Type.DVEType"
      "Info\032d\n\013DVETypeInfo\022 \n\002id\030\001 \001(\0162\024.Google"
      "ProtoBB.CnlID\0223\n\004type\030\002 \001(\0162%.GoogleProt"
      "oBB.Value_DVE_Type.DVEType\"8\n\007DVEType\022\013\n"
      "\007dve_MIX\020\000\022\017\n\013dve_WIPE_LR\020\001\022\017\n\013dve_WIPE_"
      "RL\020\002\"E\n\021Value_DVE_Channel\022\r\n\005count\030\001 \001(\r"
      "\022!\n\003cnl\030\002 \003(\0162\024.GoogleProtoBB.CnlID\"\225\001\n\r"
      "Value_DVE_Num\022\r\n\005count\030\001 \001(\r\0228\n\007numInfo\030"
      "\002 \003(\0132\'.GoogleProtoBB.Value_DVE_Num.DVEN"
      "umInfo\032;\n\nDVENumInfo\022 \n\002id\030\001 \001(\0162\024.Googl"
      "eProtoBB.CnlID\022\013\n\003num\030\002 \001(\005\"\225\001\n\rValue_DV"
      "E_Den\022\r\n\005count\030\001 \001(\r\0228\n\007denInfo\030\002 \003(\0132\'."
      "GoogleProtoBB.Value_DVE_Den.DVEDenInfo\032;"
      "\n\nDVEDenInfo\022 \n\002id\030\001 \001(\0162\024.GoogleProtoBB"
      ".CnlID\022\013\n\003den\030\002 \001(\005\"\277\001\n\026Value_DVE_CutThr"
      "eshold\022\r\n\005count\030\001 \001(\r\022M\n\rthresholdInfo\030\002"
      " \003(\01326.GoogleProtoBB.Value_DVE_CutThresh"
      "old.DVEThresholdInfo\032G\n\020DVEThresholdInfo"
      "\022 \n\002id\030\001 \001(\0162\024.GoogleProtoBB.CnlID\022\021\n\tth"
      "reshold\030\002 \001(\005\"\332\001\n\035Value_DVE_Custom_Trans"
      "parency\022\r\n\005count\030\001 \001(\r\022Z\n\ncustomInfo\030\002 \003"
      "(\0132F.GoogleProtoBB.Value_DVE_Custom_Tran"
      "sparency.DVECustomTransparencyInfo\032N\n\031DV"
      "ECustomTransparencyInfo\022 \n\002id\030\001 \001(\0162\024.Go"
      "ogleProtoBB.CnlID\022\017\n\007bCustom\030\002 \001(\010\"\247\001\n\020V"
      "alue_RTD_Status\022\r\n\005count\030\001 \001(\r\022A\n\nstatus"
      "Info\030\002 \003(\0132-.GoogleProtoBB.Value_RTD_Sta"
      "tus.RTDStatusInfo\032A\n\rRTDStatusInfo\022 \n\002id"
      "\030\001 \001(\0162\024.GoogleProtoBB.CnlID\022\016\n\006enable\030\002"
      " \001(\010\"\263\001\n\016Value_RTD_Type\022\r\n\005count\030\001 \001(\r\022;"
      "\n\010typeInfo\030\002 \003(\0132).GoogleProtoBB.Value_R"
      "TD_Type.RTDTypeInfo\032U\n\013RTDTypeInfo\022 \n\002id"
      "\030\001 \001(\0162\024.GoogleProtoBB.CnlID\022$\n\004type\030\002 \001"
      "(\0162\026.GoogleProtoBB.RTDType\"\263\001\n\022Value_RTD"
      "_Position\022\r\n\005count\030\001 \001(\r\022G\n\014positionInfo"
      "\030\002 \003(\01321.GoogleProtoBB.Value_RTD_Positio"
      "n.RTDPositionInfo\032E\n\017RTDPositionInfo\022 \n\002"
      "id\030\001 \001(\0162\024.GoogleProtoBB.CnlID\022\020\n\010positi"
      "on\030\002 \001(\r\"\242\002\n\020Value_GFX_Status\022\020\n\010pgmCoun"
      "t\030\001 \001(\r\0226\n\006pgmGfx\030\002 \003(\0132&.GoogleProtoBB."
      "Value_GFX_Status.PGMGFX\032m\n\tGFXStatus\022)\n\013"
      "targetCnlID\030\001 \001(\0162\024.GoogleProtoBB.CnlID\022"
      "%\n\006gfxCnl\030\002 \001(\0162\025.GoogleProtoBB.GFxCnl\022\016"
      "\n\006enable\030\003 \001(\010\032U\n\006PGMGFX\022\r\n\005count\030\001 \001(\r\022"
      "<\n\tgfxStatus\030\002 \003(\0132).GoogleProtoBB.Value"
      "_GFX_Status.GFXStatus\"\260\002\n\022Value_GFX_Posi"
      "tion\022\020\n\010pgmCount\030\001 \001(\r\0228\n\006pgmGfx\030\002 \003(\0132("
      ".GoogleProtoBB.Value_GFX_Position.PGMGFX"
      "\032q\n\013GFXPosition\022)\n\013targetCnlID\030\001 \001(\0162\024.G"
      "oogleProtoBB.CnlID\022%\n\006gfxCnl\030\002 \001(\0162\025.Goo"
      "gleProtoBB.GFxCnl\022\020\n\010position\030\003 \001(\r\032[\n\006P"
      "GMGFX\022\r\n\005count\030\001 \001(\r\022B\n\013gfxPosition\030\002 \003("
      "\0132-.GoogleProtoBB.Value_GFX_Position.GFX"
      "Position\"\200\003\n\036Value_GFX_Fade_In_Out_Durat"
      "ion\022\020\n\010pgmCount\030\001 \001(\r\022D\n\006pgmGfx\030\002 \003(\01324."
      "GoogleProtoBB.Value_GFX_Fade_In_Out_Dura"
      "tion.PGMGFX\032\224\001\n\017GFXFadeDuration\022)\n\013targe"
      "tCnlID\030\001 \001(\0162\024.GoogleProtoBB.CnlID\022%\n\006gf"
      "xCnl\030\002 \001(\0162\025.GoogleProtoBB.GFxCnl\022\026\n\016fad"
      "eInDuration\030\003 \001(\r\022\027\n\017fadeOutDuration\030\004 \001"
      "(\r\032o\n\006PGMGFX\022\r\n\005count\030\001 \001(\r\022V\n\017gfxFadeDu"
      "ration\030\002 \003(\0132=.GoogleProtoBB.Value_GFX_F"
      "ade_In_Out_Duration.GFXFadeDuration\"\314\002\n\025"
      "Value_GFX_Loop_In_Out\022\020\n\010pgmCount\030\001 \001(\r\022"
      ";\n\006pgmGfx\030\002 \003(\0132+.GoogleProtoBB.Value_GF"
      "X_Loop_In_Out.PGMGFX\032\201\001\n\014GFXLoopInOut\022)\n"
      "\013targetCnlID\030\001 \001(\0162\024.GoogleProtoBB.CnlID"
      "\022%\n\006gfxCnl\030\002 \001(\0162\025.GoogleProtoBB.GFxCnl\022"
      "\016\n\006loopIn\030\003 \001(\r\022\017\n\007loopOut\030\004 \001(\r\032`\n\006PGMG"
      "FX\022\r\n\005count\030\001 \001(\r\022G\n\014gfxLoopInOut\030\002 \003(\0132"
      "1.GoogleProtoBB.Value_GFX_Loop_In_Out.GF"
      "XLoopInOut\"\262\002\n\024Value_GFX_Loop_Count\022\020\n\010p"
      "gmCount\030\001 \001(\r\022:\n\006pgmGfx\030\002 \003(\0132*.GooglePr"
      "otoBB.Value_GFX_Loop_Count.PGMGFX\032o\n\nGFX"
      "LoopCnt\022)\n\013targetCnlID\030\001 \001(\0162\024.GooglePro"
      "toBB.CnlID\022%\n\006gfxCnl\030\002 \001(\0162\025.GoogleProto"
      "BB.GFxCnl\022\017\n\007loopCnt\030\003 \001(\r\032[\n\006PGMGFX\022\r\n\005"
      "count\030\001 \001(\r\022B\n\ngfxLoopCnt\030\002 \003(\0132..Google"
      "ProtoBB.Value_GFX_Loop_Count.GFXLoopCnt\""
      "\274\002\n\030Value_GFX_Preload_Status\022\r\n\005count\030\001 "
      "\001(\r\022R\n\020gfxPreloadStatus\030\002 \003(\01328.GooglePr"
      "otoBB.Value_GFX_Preload_Status.GFXPreloa"
      "dStatus\032\274\001\n\020GFXPreloadStatus\022)\n\006gfxCnl\030\001"
      " \001(\0162\031.GoogleProtoBB.TGAChannel\0229\n\020prelo"
      "adingStatus\030\002 \001(\0162\037.GoogleProtoBB.TGACha"
      "nnelStatus\022\022\n\npreloadNum\030\003 \001(\r\022\022\n\npreloa"
      "dDen\030\004 \001(\r\022\016\n\006idSize\030\005 \001(\r\022\n\n\002id\030\006 \001(\014\"b"
      "\n\030Value_HealthInfo_Version\022\020\n\010version0\030\001"
      " \001(\r\022\020\n\010version1\030\002 \001(\r\022\020\n\010version2\030\003 \001(\r"
      "\022\020\n\010version3\030\004 \001(\r\"\?\n\035Value_HealthInfo_M"
      "ixer_Status\022\036\n\026hasConnectedAudioMixer\030\001 "
      "\001(\010\">\n\"Value_HealthInfo_Network_Bandwidt"
      "h\022\030\n\020networkBandwidth\030\001 \001(\r\"I\n Value_Hea"
      "lthInfo_GPU_Temperature\022\r\n\005count\030\001 \001(\r\022\026"
      "\n\016temperatureGPU\030\002 \003(\005\"\244\001\n\033Value_HealthI"
      "nfo_AJA_Status\022\r\n\005count\030\001 \001(\r\022B\n\006status\030"
      "\002 \003(\01322.GoogleProtoBB.Value_HealthInfo_A"
      "JA_Status.InfoAJA\0322\n\007InfoAJA\022\026\n\016temperat"
      "ureAJA\030\001 \001(\005\022\017\n\007lostAJA\030\002 \001(\010\"0\n\033Value_H"
      "ealthInfo_HDD_Status\022\021\n\thddFaulty\030\001 \001(\r\""
      "\356\003\n\034Value_HealthInfo_ASIO_Status\022F\n\006stat"
      "us\030\001 \001(\01326.GoogleProtoBB.Value_HealthInf"
      "o_ASIO_Status.AsioStatus\032.\n\017ValueStatusP"
      "air\022\013\n\003val\030\001 \001(\r\022\016\n\006isGood\030\002 \001(\010\032\325\002\n\nAsi"
      "oStatus\022O\n\nsampleRate\030\001 \001(\0132;.GoogleProt"
      "oBB.Value_HealthInfo_ASIO_Status.ValueSt"
      "atusPair\022O\n\nbufferSize\030\002 \001(\0132;.GooglePro"
      "toBB.Value_HealthInfo_ASIO_Status.ValueS"
      "tatusPair\022Q\n\014inputLatency\030\003 \001(\0132;.Google"
      "ProtoBB.Value_HealthInfo_ASIO_Status.Val"
      "ueStatusPair\022R\n\routputLatency\030\004 \001(\0132;.Go"
      "ogleProtoBB.Value_HealthInfo_ASIO_Status"
      ".ValueStatusPair\":\n\"Value_HealthInfo_Ext"
      "ernal_TimeCode\022\024\n\014isExternalTC\030\001 \001(\010\"\261\001\n"
      "\020Value_CustomInfo\022\024\n\014nbCustomInfo\030\001 \001(\r\022"
      ";\n\tinfoArray\030\002 \003(\0132(.GoogleProtoBB.Value"
      "_CustomInfo.InfoPair\032J\n\010InfoPair\022\017\n\007keyS"
      "ize\030\001 \001(\r\022\021\n\tvalueSize\030\002 \001(\r\022\013\n\003key\030\003 \001("
      "\014\022\r\n\005value\030\004 \001(\014\"\?\n\021Value_BMR_Setting\022\014\n"
      "\004type\030\001 \001(\r\022\017\n\007bufSize\030\002 \001(\r\022\013\n\003buf\030\003 \001("
      "\014\"\377\004\n\034Value_VuMeter_Live_Mixer_PGM\022G\n\nmi"
      "xerMeter\030\001 \001(\01323.GoogleProtoBB.Value_VuM"
      "eter_Live_Mixer_PGM.VuMeter\022\030\n\020countofLi"
      "veMeter\030\002 \001(\r\022F\n\tliveMeter\030\003 \003(\01323.Googl"
      "eProtoBB.Value_VuMeter_Live_Mixer_PGM.Vu"
      "Meter\022\022\n\ncountofPRV\030\004 \001(\r\022E\n\010prvMeter\030\005 "
      "\003(\01323.GoogleProtoBB.Value_VuMeter_Live_M"
      "ixer_PGM.VuMeter\022\022\n\ncountofPGM\030\006 \001(\r\022C\n\010"
      "pgmMeter\030\007 \003(\01321.GoogleProtoBB.Value_VuM"
      "eter_Live_Mixer_PGM.PGMUV\032\'\n\007VuMeter\022\r\n\005"
      "count\030\001 \001(\r\022\r\n\005dbTbl\030\002 \003(\002\032\326\001\n\005PGMUV\022D\n\007"
      "uvClean\030\001 \001(\01323.GoogleProtoBB.Value_VuMe"
      "ter_Live_Mixer_PGM.VuMeter\022B\n\005dirty\030\002 \001("
      "\01323.GoogleProtoBB.Value_VuMeter_Live_Mix"
      "er_PGM.VuMeter\022C\n\006player\030\003 \001(\01323.GoogleP"
      "rotoBB.Value_VuMeter_Live_Mixer_PGM.VuMe"
      "ter\"\221\003\n\020Value_PiP_Status\022\020\n\010pgmCount\030\001 \001"
      "(\r\0226\n\006pgmPiP\030\002 \003(\0132&.GoogleProtoBB.Value"
      "_PiP_Status.PGMPiP\032\333\001\n\tPiPStatus\022)\n\013targ"
      "etCnlID\030\001 \001(\0162\024.GoogleProtoBB.CnlID\022&\n\006p"
      "ipCnl\030\002 \001(\0162\026.GoogleProtoBB.PiPType\022\016\n\006e"
      "nable\030\003 \001(\010\022\030\n\020bgFadeInDuration\030\004 \001(\r\022\031\n"
      "\021bgFadeOutDuration\030\005 \001(\r\022\020\n\010bgLoopIn\030\006 \001"
      "(\r\022\021\n\tbgLoopOut\030\007 \001(\r\022\021\n\tbgLoopCnt\030\010 \001(\r"
      "\032U\n\006PGMPiP\022\r\n\005count\030\001 \001(\r\022<\n\tgfxStatus\030\002"
      " \003(\0132).GoogleProtoBB.Value_PiP_Status.Pi"
      "PStatus\"J\n\023Value_Server_Memory\022\030\n\020curren"
      "tMemory_GB\030\001 \001(\r\022\031\n\021expectedMemory_GB\030\002 "
      "\001(\r\"\257\001\n%Value_Cache_ReplayPlayer_HighRes"
      "Video\022\r\n\005count\030\001 \001(\r\022I\n\005range\030\002 \003(\0132:.Go"
      "ogleProtoBB.Value_Cache_ReplayPlayer_Hig"
      "hResVideo.Range\032,\n\005Range\022\026\n\016currentFrame"
      "ID\030\001 \001(\004\022\013\n\003out\030\002 \001(\004\"\261\001\n&Value_Cache_Re"
      "playPlayer_ExternalAudio\022\r\n\005count\030\001 \001(\r\022"
      "J\n\005range\030\002 \003(\0132;.GoogleProtoBB.Value_Cac"
      "he_ReplayPlayer_ExternalAudio.Range\032,\n\005R"
      "ange\022\026\n\016currentFrameID\030\001 \001(\004\022\013\n\003out\030\002 \001("
      "\004\"Y\n\026Value_Storage_Capacity\022\024\n\014blockSize"
      "_MB\030\001 \001(\r\022\023\n\013nbBlockUsed\030\002 \001(\r\022\024\n\014nbBloc"
      "kTotal\030\003 \001(\r\"[\n Value_HealthInfo_Referen"
      "ceStatus\0227\n\017referenceStatus\030\001 \001(\0162\036.Goog"
      "leProtoBB.ReferenceStatus\"\264\001\n\035Value_Heal"
      "thInfo_SerialNumber\022\020\n\010nbServer\030\001 \001(\r\022K\n"
      "\nserverInfo\030\002 \003(\01327.GoogleProtoBB.Value_"
      "HealthInfo_SerialNumber.ServerInfo\0324\n\nSe"
      "rverInfo\022\n\n\002ip\030\001 \001(\005\022\016\n\006snSize\030\002 \001(\r\022\n\n\002"
      "sn\030\003 \001(\014\"\334\001\n$Value_HealthInfo_RemainingT"
      "imePerCam\022\r\n\005count\030\001 \001(\r\022X\n\rremainingTim"
      "e\030\002 \003(\0132A.GoogleProtoBB.Value_HealthInfo"
      "_RemainingTimePerCam.RemainingTime\032K\n\rRe"
      "mainingTime\022!\n\003cam\030\001 \001(\0162\024.GoogleProtoBB"
      ".CamID\022\027\n\017remainingSecond\030\002 \001(\r\"D\n\030Value"
      "_Film_Effect_Status\022\023\n\013PGM_enabled\030\001 \003(\010"
      "\022\023\n\013PRV_enabled\030\002 \003(\010\"3\n\032Value_Common_Ti"
      "meReference\022\025\n\rtimeReference\030\001 \001(\004\"\336\037\n\rB"
      "roadCastData\022O\n\033value_Recorder_Train_In_"
      "Out\030\001 \001(\0132*.GoogleProtoBB.Value_Recorder"
      "_Train_In_Out\022\?\n\023value_Player_Status\030\002 \001"
      "(\0132\".GoogleProtoBB.Value_Player_Status\022;"
      "\n\021value_Camera_Type\030\003 \001(\0132 .GoogleProtoB"
      "B.Value_Camera_Type\022Q\n\034value_Recorder_Cl"
      "osedCaption\030\004 \001(\0132+.GoogleProtoBB.Value_"
      "Recorder_ClosedCaption\022M\n\032value_Player_C"
      "losedCaption\030\005 \001(\0132).GoogleProtoBB.Value"
      "_Player_ClosedCaption\022=\n\022value_Player_Gr"
      "oup\030\006 \001(\0132!.GoogleProtoBB.Value_Player_G"
      "roup\022\?\n\023value_Player_Camera\030\007 \001(\0132\".Goog"
      "leProtoBB.Value_Player_Camera\022;\n\021value_P"
      "layer_Type\030\010 \001(\0132 .GoogleProtoBB.Value_P"
      "layer_Type\022M\n\032value_Player_AudioPresetId"
      "\030\t \001(\0132).GoogleProtoBB.Value_Player_Audi"
      "oPresetId\022=\n\022value_Player_Speed\030\n \001(\0132!."
      "GoogleProtoBB.Value_Player_Speed\022C\n\025valu"
      "e_Player_Consigne\030\013 \001(\0132$.GoogleProtoBB."
      "Value_Player_Consigne\022;\n\021value_Player_Mo"
      "de\030\014 \001(\0132 .GoogleProtoBB.Value_Player_Mo"
      "de\022Q\n\034value_Player_Extend_Playlist\030\r \001(\013"
      "2+.GoogleProtoBB.Value_Player_Extend_Pla"
      "ylist\022K\n\031value_Player_Limit_In_Out\030\016 \001(\013"
      "2(.GoogleProtoBB.Value_Player_Limit_In_O"
      "ut\022E\n\026value_Player_Loop_Mode\030\017 \001(\0132%.Goo"
      "gleProtoBB.Value_Player_Loop_Mode\022G\n\027val"
      "ue_Player_Loop_Count\030\020 \001(\0132&.GoogleProto"
      "BB.Value_Player_Loop_Count\022I\n\030value_Play"
      "er_Playlist_ID\030\021 \001(\0132\'.GoogleProtoBB.Val"
      "ue_Player_Playlist_ID\022Y\n value_Player_Pl"
      "aylist_Element_ID\030\022 \001(\0132/.GoogleProtoBB."
      "Value_Player_Playlist_Element_ID\0225\n\016valu"
      "e_DVE_Mode\030\023 \001(\0132\035.GoogleProtoBB.Value_D"
      "VE_Mode\0225\n\016value_DVE_Type\030\024 \001(\0132\035.Google"
      "ProtoBB.Value_DVE_Type\022;\n\021value_DVE_Chan"
      "nel\030\025 \001(\0132 .GoogleProtoBB.Value_DVE_Chan"
      "nel\0223\n\rvalue_DVE_Num\030\026 \001(\0132\034.GoogleProto"
      "BB.Value_DVE_Num\0223\n\rvalue_DVE_Den\030\027 \001(\0132"
      "\034.GoogleProtoBB.Value_DVE_Den\022E\n\026value_D"
      "VE_CutThreshold\030\030 \001(\0132%.GoogleProtoBB.Va"
      "lue_DVE_CutThreshold\022S\n\035value_DVE_Custom"
      "_Transparency\030\031 \001(\0132,.GoogleProtoBB.Valu"
      "e_DVE_Custom_Transparency\0229\n\020value_RTD_S"
      "tatus\030\032 \001(\0132\037.GoogleProtoBB.Value_RTD_St"
      "atus\0225\n\016value_RTD_Type\030\033 \001(\0132\035.GooglePro"
      "toBB.Value_RTD_Type\022=\n\022value_RTD_Positio"
      "n\030\034 \001(\0132!.GoogleProtoBB.Value_RTD_Positi"
      "on\0229\n\020value_GFX_Status\030\035 \001(\0132\037.GooglePro"
      "toBB.Value_GFX_Status\022=\n\022value_GFX_Posit"
      "ion\030\036 \001(\0132!.GoogleProtoBB.Value_GFX_Posi"
      "tion\022U\n\036value_GFX_Fade_In_Out_Duration\030\037"
      " \001(\0132-.GoogleProtoBB.Value_GFX_Fade_In_O"
      "ut_Duration\022C\n\025value_GFX_Loop_In_Out\030  \001"
      "(\0132$.GoogleProtoBB.Value_GFX_Loop_In_Out"
      "\022A\n\024value_GFX_Loop_Count\030! \001(\0132#.GoogleP"
      "rotoBB.Value_GFX_Loop_Count\022I\n\030value_GFX"
      "_Preload_Status\030\" \001(\0132\'.GoogleProtoBB.Va"
      "lue_GFX_Preload_Status\022I\n\030value_HealthIn"
      "fo_Version\030# \001(\0132\'.GoogleProtoBB.Value_H"
      "ealthInfo_Version\022S\n\035value_HealthInfo_Mi"
      "xer_Status\030$ \001(\0132,.GoogleProtoBB.Value_H"
      "ealthInfo_Mixer_Status\022]\n\"value_HealthIn"
      "fo_Network_Bandwidth\030% \001(\01321.GoogleProto"
      "BB.Value_HealthInfo_Network_Bandwidth\022Y\n"
      " value_HealthInfo_GPU_Temperature\030& \001(\0132"
      "/.GoogleProtoBB.Value_HealthInfo_GPU_Tem"
      "perature\022O\n\033value_HealthInfo_AJA_Status\030"
      "\' \001(\0132*.GoogleProtoBB.Value_HealthInfo_A"
      "JA_Status\022O\n\033value_HealthInfo_HDD_Status"
      "\030( \001(\0132*.GoogleProtoBB.Value_HealthInfo_"
      "HDD_Status\022Q\n\034value_HealthInfo_ASIO_Stat"
      "us\030) \001(\0132+.GoogleProtoBB.Value_HealthInf"
      "o_ASIO_Status\022]\n\"value_HealthInfo_Extern"
      "al_TimeCode\030* \001(\01321.GoogleProtoBB.Value_"
      "HealthInfo_External_TimeCode\0229\n\020value_Cu"
      "stomInfo\030+ \001(\0132\037.GoogleProtoBB.Value_Cus"
      "tomInfo\022;\n\021value_BMR_Setting\030, \001(\0132 .Goo"
      "gleProtoBB.Value_BMR_Setting\022Q\n\034value_Vu"
      "Meter_Live_Mixer_PGM\030- \001(\0132+.GoogleProto"
      "BB.Value_VuMeter_Live_Mixer_PGM\0229\n\020value"
      "_PiP_Status\030. \001(\0132\037.GoogleProtoBB.Value_"
      "PiP_Status\022\?\n\023value_Server_Memory\030/ \001(\0132"
      "\".GoogleProtoBB.Value_Server_Memory\022c\n%v"
      "alue_Cache_ReplayPlayer_HighResVideo\0300 \001"
      "(\01324.GoogleProtoBB.Value_Cache_ReplayPla"
      "yer_HighResVideo\022e\n&value_Cache_ReplayPl"
      "ayer_ExternalAudio\0301 \001(\01325.GoogleProtoBB"
      ".Value_Cache_ReplayPlayer_ExternalAudio\022"
      "E\n\026value_Storage_Capacity\0302 \001(\0132%.Google"
      "ProtoBB.Value_Storage_Capacity\022Y\n value_"
      "HealthInfo_ReferenceStatus\0303 \001(\0132/.Googl"
      "eProtoBB.Value_HealthInfo_ReferenceStatu"
      "s\022S\n\035value_HealthInfo_SerialNumber\0304 \001(\013"
      "2,.GoogleProtoBB.Value_HealthInfo_Serial"
      "Number\022a\n$value_HealthInfo_RemainingTime"
      "PerCam\0305 \001(\01323.GoogleProtoBB.Value_Healt"
      "hInfo_RemainingTimePerCam\022I\n\030value_Film_"
      "Effect_Status\0306 \001(\0132\'.GoogleProtoBB.Valu"
      "e_Film_Effect_Status\022M\n\032value_Common_Tim"
      "eReference\0307 \001(\0132).GoogleProtoBB.Value_C"
      "ommon_TimeReference*\322\n\n\020BroadcastInfoKey"
      "\022\031\n\025Recorder_Train_In_Out\020\000\022\027\n\023CommonTim"
      "eReference\020\001\022\021\n\rPlayer_Status\020\002\022\020\n\014Playe"
      "r_Group\020\003\022\021\n\rPlayer_Camera\020\004\022\017\n\013Player_T"
      "ype\020\005\022\020\n\014Player_Speed\020\006\022\023\n\017Player_Consig"
      "ne\020\007\022\017\n\013Player_Mode\020\010\022\032\n\026Player_Extend_P"
      "laylist\020\t\022\017\n\013Camera_Type\020\n\022\027\n\023Player_Lim"
      "it_In_Out\020\013\022\024\n\020Player_Loop_Mode\020\014\022\025\n\021Pla"
      "yer_Loop_Count\020\r\022\026\n\022Player_Playlist_ID\020\016"
      "\022\036\n\032Player_Playlist_Element_ID\020\017\022\014\n\010DVE_"
      "Mode\020\020\022\014\n\010DVE_Type\020\021\022\017\n\013DVE_Channel\020\022\022\013\n"
      "\007DVE_Num\020\023\022\013\n\007DVE_Den\020\024\022\024\n\020DVE_CutThresh"
      "old\020\025\022\033\n\027DVE_Custom_Transparency\020\026\022\016\n\nRT"
      "D_Status\020\027\022\014\n\010RTD_Type\020\030\022\020\n\014RTD_Position"
      "\020\031\022\016\n\nGFX_Status\020\032\022\020\n\014GFX_Position\020\033\022\034\n\030"
      "GFX_Fade_In_Out_Duration\020\034\022\023\n\017GFX_Loop_I"
      "n_Out\020\035\022\022\n\016GFX_Loop_Count\020\036\022\026\n\022GFX_Prelo"
      "ad_Status\020\037\022\037\n\033HealthInfo_Storage_Capaci"
      "ty\020 \022\026\n\022HealthInfo_Version\020!\022\033\n\027HealthIn"
      "fo_Mixer_Status\020\"\022 \n\034HealthInfo_Network_"
      "Bandwidth\020#\022\036\n\032HealthInfo_GPU_Temperatur"
      "e\020$\022\031\n\025HealthInfo_AJA_Status\020%\022\031\n\025Health"
      "Info_HDD_Status\020&\022\032\n\026HealthInfo_ASIO_Sta"
      "tus\020\'\022 \n\034HealthInfo_External_TimeCode\020(\022"
      "\027\n\023CustomInfoBroadcast\020)\022\017\n\013BMR_Setting\020"
      "*\022\032\n\026VuMeter_Live_Mixer_PGM\020+\022\032\n\026Recorde"
      "r_Close_Caption\020,\022\030\n\024Player_Close_Captio"
      "n\020-\022\024\n\020CustomInfoNotify\020.\022\030\n\024Player_Audi"
      "oPresetId\020/\022\016\n\nPiP_Status\0200\022\034\n\030HealthInf"
      "o_Server_Memory\0201\022#\n\037Cache_ReplayPlayer_"
      "HighResVideo\0202\022$\n Cache_ReplayPlayer_Ext"
      "ernalAudio\0203\022\036\n\032HealthInfo_ReferenceStat"
      "us\0204\022\033\n\027HealthInfo_SerialNumber\0205\022\"\n\036Hea"
      "lthInfo_RemainingTimePerCam\0206\022\026\n\022Film_Ef"
      "fect_Status\0207\022\t\n\005Tally\0208*\223\t\n\005CnlID\022\020\n\014ID"
      "_Replay1_0\020\000\022\021\n\rID_Replay1_15\020\017\022\021\n\rID_Re"
      "play1_31\020\037\022\027\n\023ID_Replay1_PGMDirty\020 \022\027\n\023I"
      "D_Replay1_PGMClean\020!\022\025\n\021ID_Replay1_Impor"
      "t\020\"\022\020\n\014ID_Replay2_0\0202\022\021\n\rID_Replay2_15\020A"
      "\022\021\n\rID_Replay2_31\020Q\022\027\n\023ID_Replay2_PGMDir"
      "ty\020R\022\027\n\023ID_Replay2_PGMClean\020S\022\025\n\021ID_Repl"
      "ay2_Import\020T\022\013\n\007ID_PGM1\020d\022\013\n\007ID_PRV1\020e\022\014"
      "\n\010ID_PGM1v\020f\022\013\n\007ID_PGM2\020g\022\014\n\010ID_PGM2v\020h\022"
      "\013\n\007ID_PRV2\020i\022\013\n\007ID_PGM3\020j\022\014\n\010ID_PGM3v\020k\022"
      "\013\n\007ID_PRV3\020l\022\013\n\007ID_PGM4\020m\022\014\n\010ID_PGM4v\020n\022"
      "\013\n\007ID_PRV4\020o\022\013\n\007ID_PGM5\020p\022\014\n\010ID_PGM5v\020q\022"
      "\013\n\007ID_PRV5\020r\022\013\n\007ID_PGM6\020s\022\014\n\010ID_PGM6v\020t\022"
      "\013\n\007ID_PRV6\020u\022\013\n\007ID_PGM7\020v\022\014\n\010ID_PGM7v\020w\022"
      "\013\n\007ID_PRV7\020x\022\013\n\007ID_PGM8\020y\022\014\n\010ID_PGM8v\020z\022"
      "\013\n\007ID_PRV8\020{\022\016\n\tID_Live_0\020\226\001\022\017\n\nID_Live_"
      "15\020\245\001\022\017\n\nID_Live_31\020\265\001\022\025\n\020ID_Live_PGMDir"
      "ty\020\266\001\022\025\n\020ID_Live_PGMClean\020\267\001\022\023\n\016ID_Live_"
      "Import\020\270\001\022\021\n\014ID_Live_PGM2\020\271\001\022\021\n\014ID_Live_"
      "PGM3\020\272\001\022\021\n\014ID_Live_PGM4\020\273\001\022\021\n\014ID_Live_PG"
      "M5\020\274\001\022\021\n\014ID_Live_PGM6\020\275\001\022\021\n\014ID_Live_PGM7"
      "\020\276\001\022\021\n\014ID_Live_PGM8\020\277\001\022\021\n\014ID_Replay3_0\020\300"
      "\001\022\022\n\rID_Replay3_15\020\317\001\022\022\n\rID_Replay3_31\020\337"
      "\001\022\030\n\023ID_Replay3_PGMDirty\020\340\001\022\030\n\023ID_Replay"
      "3_PGMClean\020\341\001\022\026\n\021ID_Replay3_Import\020\342\001\022\024\n"
      "\017ID_PGM2_480_270\020\343\001\022\024\n\017ID_PGM3_480_270\020\344"
      "\001\022\024\n\017ID_PGM4_480_270\020\345\001\022\024\n\017ID_PGM5_480_2"
      "70\020\346\001\022\024\n\017ID_PGM6_480_270\020\347\001\022\024\n\017ID_PGM7_4"
      "80_270\020\350\001\022\024\n\017ID_PGM8_480_270\020\351\001\022\r\n\010ID_TG"
      "A_0\020\352\001\022\r\n\010ID_TGA_1\020\353\001\022\017\n\nID_Cnl_Max\020\354\001*\025"
      "\n\005CamID\022\014\n\010ID_Cam_0\020\000*\\\n\007RTDType\022\010\n\004rtd1"
      "\020\000\022\010\n\004rtd2\020\001\022\010\n\004rtd3\020\002\022\010\n\004rtd4\020\003\022\010\n\004rtd5"
      "\020\004\022\010\n\004rtd6\020\005\022\010\n\004rtd7\020\006\022\013\n\007rtd_Max\020\007*\017\n\006G"
      "FxCnl\022\005\n\001a\020\000*\242\002\n\nTGAChannel\022\023\n\017TGAChanne"
      "l_gfx1\020\000\022\023\n\017TGAChannel_gfx2\020\001\022\023\n\017TGAChan"
      "nel_gfx3\020\002\022\023\n\017TGAChannel_rtd1\020\003\022\023\n\017TGACh"
      "annel_rtd2\020\004\022\026\n\022TGAChannel_PiP_PGM\020\005\022\026\n\022"
      "TGAChannel_PiP_PRV\020\006\022\023\n\017TGAChannel_rtd3\020"
      "\007\022\023\n\017TGAChannel_rtd4\020\010\022\023\n\017TGAChannel_rtd"
      "5\020\t\022\023\n\017TGAChannel_rtd6\020\n\022\023\n\017TGAChannel_r"
      "td7\020\013\022\022\n\016TGAChannel_max\020\014*\236\001\n\020TGAChannel"
      "Status\022\031\n\025TGAChannelStatus_None\020\000\022%\n!TGA"
      "ChannelStatus_PreloadingSecure\020\001\022\036\n\032TGAC"
      "hannelStatus_Preloaded\020\002\022(\n$TGAChannelSt"
      "atus_PreloadingNotSecure\020\003*0\n\007PiPType\022\013\n"
      "\007PiP_PGM\020\000\022\013\n\007PiP_PRV\020\001\022\013\n\007PiP_Max\020\002*A\n\017"
      "ReferenceStatus\022\010\n\004None\020\000\022\022\n\016InvalidGenl"
      "ock\020\001\022\020\n\014ValidGenlock\020\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 18191);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "broadcast.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_broadcast_2eproto
namespace GoogleProtoBB {
const ::google::protobuf::EnumDescriptor* Value_Player_Type_PlayerType_descriptor() {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_broadcast_2eproto::file_level_enum_descriptors[0];
}
bool Value_Player_Type_PlayerType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Value_Player_Type_PlayerType Value_Player_Type::PLAYER_TYPE_REPLAY;
const Value_Player_Type_PlayerType Value_Player_Type::PLAYER_TYPE_LIVE;
const Value_Player_Type_PlayerType Value_Player_Type::PlayerType_MIN;
const Value_Player_Type_PlayerType Value_Player_Type::PlayerType_MAX;
const int Value_Player_Type::PlayerType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Value_Player_Mode_PlayerMode_descriptor() {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_broadcast_2eproto::file_level_enum_descriptors[1];
}
bool Value_Player_Mode_PlayerMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Value_Player_Mode_PlayerMode Value_Player_Mode::clipMode;
const Value_Player_Mode_PlayerMode Value_Player_Mode::playlistMode;
const Value_Player_Mode_PlayerMode Value_Player_Mode::PlayerMode_MIN;
const Value_Player_Mode_PlayerMode Value_Player_Mode::PlayerMode_MAX;
const int Value_Player_Mode::PlayerMode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Value_Player_Loop_Mode_PlayerLoopMode_descriptor() {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_broadcast_2eproto::file_level_enum_descriptors[2];
}
bool Value_Player_Loop_Mode_PlayerLoopMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Value_Player_Loop_Mode_PlayerLoopMode Value_Player_Loop_Mode::OFF;
const Value_Player_Loop_Mode_PlayerLoopMode Value_Player_Loop_Mode::STD;
const Value_Player_Loop_Mode_PlayerLoopMode Value_Player_Loop_Mode::PING_PONG;
const Value_Player_Loop_Mode_PlayerLoopMode Value_Player_Loop_Mode::PlayerLoopMode_MIN;
const Value_Player_Loop_Mode_PlayerLoopMode Value_Player_Loop_Mode::PlayerLoopMode_MAX;
const int Value_Player_Loop_Mode::PlayerLoopMode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Value_DVE_Mode_DVEMode_descriptor() {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_broadcast_2eproto::file_level_enum_descriptors[3];
}
bool Value_DVE_Mode_DVEMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Value_DVE_Mode_DVEMode Value_DVE_Mode::offMode;
const Value_DVE_Mode_DVEMode Value_DVE_Mode::autoMode;
const Value_DVE_Mode_DVEMode Value_DVE_Mode::manualMode;
const Value_DVE_Mode_DVEMode Value_DVE_Mode::DVEMode_MIN;
const Value_DVE_Mode_DVEMode Value_DVE_Mode::DVEMode_MAX;
const int Value_DVE_Mode::DVEMode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Value_DVE_Type_DVEType_descriptor() {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_broadcast_2eproto::file_level_enum_descriptors[4];
}
bool Value_DVE_Type_DVEType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Value_DVE_Type_DVEType Value_DVE_Type::dve_MIX;
const Value_DVE_Type_DVEType Value_DVE_Type::dve_WIPE_LR;
const Value_DVE_Type_DVEType Value_DVE_Type::dve_WIPE_RL;
const Value_DVE_Type_DVEType Value_DVE_Type::DVEType_MIN;
const Value_DVE_Type_DVEType Value_DVE_Type::DVEType_MAX;
const int Value_DVE_Type::DVEType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* BroadcastInfoKey_descriptor() {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_broadcast_2eproto::file_level_enum_descriptors[5];
}
bool BroadcastInfoKey_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CnlID_descriptor() {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_broadcast_2eproto::file_level_enum_descriptors[6];
}
bool CnlID_IsValid(int value) {
  switch (value) {
    case 0:
    case 15:
    case 31:
    case 32:
    case 33:
    case 34:
    case 50:
    case 65:
    case 81:
    case 82:
    case 83:
    case 84:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 150:
    case 165:
    case 181:
    case 182:
    case 183:
    case 184:
    case 185:
    case 186:
    case 187:
    case 188:
    case 189:
    case 190:
    case 191:
    case 192:
    case 207:
    case 223:
    case 224:
    case 225:
    case 226:
    case 227:
    case 228:
    case 229:
    case 230:
    case 231:
    case 232:
    case 233:
    case 234:
    case 235:
    case 236:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CamID_descriptor() {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_broadcast_2eproto::file_level_enum_descriptors[7];
}
bool CamID_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RTDType_descriptor() {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_broadcast_2eproto::file_level_enum_descriptors[8];
}
bool RTDType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GFxCnl_descriptor() {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_broadcast_2eproto::file_level_enum_descriptors[9];
}
bool GFxCnl_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TGAChannel_descriptor() {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_broadcast_2eproto::file_level_enum_descriptors[10];
}
bool TGAChannel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TGAChannelStatus_descriptor() {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_broadcast_2eproto::file_level_enum_descriptors[11];
}
bool TGAChannelStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PiPType_descriptor() {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_broadcast_2eproto::file_level_enum_descriptors[12];
}
bool PiPType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ReferenceStatus_descriptor() {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_broadcast_2eproto::file_level_enum_descriptors[13];
}
bool ReferenceStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Value_Recorder_Train_In_Out::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Recorder_Train_In_Out::kCountFieldNumber;
const int Value_Recorder_Train_In_Out::kTrainInFieldNumber;
const int Value_Recorder_Train_In_Out::kTrainOutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Recorder_Train_In_Out::Value_Recorder_Train_In_Out()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Recorder_Train_In_Out.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Recorder_Train_In_Out)
}
Value_Recorder_Train_In_Out::Value_Recorder_Train_In_Out(const Value_Recorder_Train_In_Out& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      trainin_(from.trainin_),
      trainout_(from.trainout_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Recorder_Train_In_Out)
}

void Value_Recorder_Train_In_Out::SharedCtor() {
  count_ = 0u;
}

Value_Recorder_Train_In_Out::~Value_Recorder_Train_In_Out() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Recorder_Train_In_Out)
  SharedDtor();
}

void Value_Recorder_Train_In_Out::SharedDtor() {
}

void Value_Recorder_Train_In_Out::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Recorder_Train_In_Out::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Recorder_Train_In_Out& Value_Recorder_Train_In_Out::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Recorder_Train_In_Out.base);
  return *internal_default_instance();
}


void Value_Recorder_Train_In_Out::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Recorder_Train_In_Out)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  trainin_.Clear();
  trainout_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_Recorder_Train_In_Out::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Recorder_Train_In_Out)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 trainIn = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_trainin())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_trainin())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 trainOut = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_trainout())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 26u, input, this->mutable_trainout())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Recorder_Train_In_Out)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Recorder_Train_In_Out)
  return false;
#undef DO_
}

void Value_Recorder_Train_In_Out::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Recorder_Train_In_Out)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated uint64 trainIn = 2;
  if (this->trainin_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _trainin_cached_byte_size_));
  }
  for (int i = 0, n = this->trainin_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->trainin(i), output);
  }

  // repeated uint64 trainOut = 3;
  if (this->trainout_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _trainout_cached_byte_size_));
  }
  for (int i = 0, n = this->trainout_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->trainout(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Recorder_Train_In_Out)
}

::google::protobuf::uint8* Value_Recorder_Train_In_Out::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Recorder_Train_In_Out)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated uint64 trainIn = 2;
  if (this->trainin_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _trainin_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->trainin_, target);
  }

  // repeated uint64 trainOut = 3;
  if (this->trainout_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _trainout_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->trainout_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Recorder_Train_In_Out)
  return target;
}

size_t Value_Recorder_Train_In_Out::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Recorder_Train_In_Out)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 trainIn = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->trainin_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _trainin_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 trainOut = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->trainout_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _trainout_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Recorder_Train_In_Out::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Recorder_Train_In_Out)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Recorder_Train_In_Out* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Recorder_Train_In_Out>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Recorder_Train_In_Out)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Recorder_Train_In_Out)
    MergeFrom(*source);
  }
}

void Value_Recorder_Train_In_Out::MergeFrom(const Value_Recorder_Train_In_Out& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Recorder_Train_In_Out)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  trainin_.MergeFrom(from.trainin_);
  trainout_.MergeFrom(from.trainout_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_Recorder_Train_In_Out::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Recorder_Train_In_Out)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Recorder_Train_In_Out::CopyFrom(const Value_Recorder_Train_In_Out& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Recorder_Train_In_Out)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Recorder_Train_In_Out::IsInitialized() const {
  return true;
}

void Value_Recorder_Train_In_Out::Swap(Value_Recorder_Train_In_Out* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Recorder_Train_In_Out::InternalSwap(Value_Recorder_Train_In_Out* other) {
  using std::swap;
  trainin_.InternalSwap(&other->trainin_);
  trainout_.InternalSwap(&other->trainout_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Recorder_Train_In_Out::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Player_Status_StatusInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Player_Status_StatusInfo::kIdFieldNumber;
const int Value_Player_Status_StatusInfo::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Player_Status_StatusInfo::Value_Player_Status_StatusInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Status_StatusInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Player_Status.StatusInfo)
}
Value_Player_Status_StatusInfo::Value_Player_Status_StatusInfo(const Value_Player_Status_StatusInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&id_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Player_Status.StatusInfo)
}

void Value_Player_Status_StatusInfo::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&id_)) + sizeof(status_));
}

Value_Player_Status_StatusInfo::~Value_Player_Status_StatusInfo() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Player_Status.StatusInfo)
  SharedDtor();
}

void Value_Player_Status_StatusInfo::SharedDtor() {
}

void Value_Player_Status_StatusInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Player_Status_StatusInfo::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Player_Status_StatusInfo& Value_Player_Status_StatusInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Player_Status_StatusInfo.base);
  return *internal_default_instance();
}


void Value_Player_Status_StatusInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Player_Status.StatusInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&id_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

bool Value_Player_Status_StatusInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Player_Status.StatusInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.CnlID id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_id(static_cast< ::GoogleProtoBB::CnlID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Player_Status.StatusInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Player_Status.StatusInfo)
  return false;
#undef DO_
}

void Value_Player_Status_StatusInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Player_Status.StatusInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->id(), output);
  }

  // uint32 status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Player_Status.StatusInfo)
}

::google::protobuf::uint8* Value_Player_Status_StatusInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Player_Status.StatusInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->id(), target);
  }

  // uint32 status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Player_Status.StatusInfo)
  return target;
}

size_t Value_Player_Status_StatusInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Player_Status.StatusInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }

  // uint32 status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Player_Status_StatusInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Player_Status.StatusInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Player_Status_StatusInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Player_Status_StatusInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Player_Status.StatusInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Player_Status.StatusInfo)
    MergeFrom(*source);
  }
}

void Value_Player_Status_StatusInfo::MergeFrom(const Value_Player_Status_StatusInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Player_Status.StatusInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void Value_Player_Status_StatusInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Player_Status.StatusInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Player_Status_StatusInfo::CopyFrom(const Value_Player_Status_StatusInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Player_Status.StatusInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Player_Status_StatusInfo::IsInitialized() const {
  return true;
}

void Value_Player_Status_StatusInfo::Swap(Value_Player_Status_StatusInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Player_Status_StatusInfo::InternalSwap(Value_Player_Status_StatusInfo* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Player_Status_StatusInfo::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Player_Status::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Player_Status::kCountFieldNumber;
const int Value_Player_Status::kStatusInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Player_Status::Value_Player_Status()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Status.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Player_Status)
}
Value_Player_Status::Value_Player_Status(const Value_Player_Status& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      statusinfo_(from.statusinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Player_Status)
}

void Value_Player_Status::SharedCtor() {
  count_ = 0u;
}

Value_Player_Status::~Value_Player_Status() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Player_Status)
  SharedDtor();
}

void Value_Player_Status::SharedDtor() {
}

void Value_Player_Status::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Player_Status::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Player_Status& Value_Player_Status::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Player_Status.base);
  return *internal_default_instance();
}


void Value_Player_Status::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Player_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  statusinfo_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_Player_Status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Player_Status)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_Player_Status.StatusInfo statusInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_statusinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Player_Status)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Player_Status)
  return false;
#undef DO_
}

void Value_Player_Status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Player_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_Player_Status.StatusInfo statusInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->statusinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->statusinfo(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Player_Status)
}

::google::protobuf::uint8* Value_Player_Status::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Player_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_Player_Status.StatusInfo statusInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->statusinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->statusinfo(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Player_Status)
  return target;
}

size_t Value_Player_Status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Player_Status)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_Player_Status.StatusInfo statusInfo = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->statusinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->statusinfo(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Player_Status::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Player_Status)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Player_Status* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Player_Status>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Player_Status)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Player_Status)
    MergeFrom(*source);
  }
}

void Value_Player_Status::MergeFrom(const Value_Player_Status& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Player_Status)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  statusinfo_.MergeFrom(from.statusinfo_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_Player_Status::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Player_Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Player_Status::CopyFrom(const Value_Player_Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Player_Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Player_Status::IsInitialized() const {
  return true;
}

void Value_Player_Status::Swap(Value_Player_Status* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Player_Status::InternalSwap(Value_Player_Status* other) {
  using std::swap;
  CastToBase(&statusinfo_)->InternalSwap(CastToBase(&other->statusinfo_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Player_Status::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Camera_Type_ItemInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Camera_Type_ItemInfo::kCamIDFieldNumber;
const int Value_Camera_Type_ItemInfo::kIsNetworkingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Camera_Type_ItemInfo::Value_Camera_Type_ItemInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Camera_Type_ItemInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Camera_Type.ItemInfo)
}
Value_Camera_Type_ItemInfo::Value_Camera_Type_ItemInfo(const Value_Camera_Type_ItemInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&camid_, &from.camid_,
    static_cast<size_t>(reinterpret_cast<char*>(&isnetworking_) -
    reinterpret_cast<char*>(&camid_)) + sizeof(isnetworking_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Camera_Type.ItemInfo)
}

void Value_Camera_Type_ItemInfo::SharedCtor() {
  ::memset(&camid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isnetworking_) -
      reinterpret_cast<char*>(&camid_)) + sizeof(isnetworking_));
}

Value_Camera_Type_ItemInfo::~Value_Camera_Type_ItemInfo() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Camera_Type.ItemInfo)
  SharedDtor();
}

void Value_Camera_Type_ItemInfo::SharedDtor() {
}

void Value_Camera_Type_ItemInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Camera_Type_ItemInfo::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Camera_Type_ItemInfo& Value_Camera_Type_ItemInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Camera_Type_ItemInfo.base);
  return *internal_default_instance();
}


void Value_Camera_Type_ItemInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Camera_Type.ItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&camid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isnetworking_) -
      reinterpret_cast<char*>(&camid_)) + sizeof(isnetworking_));
  _internal_metadata_.Clear();
}

bool Value_Camera_Type_ItemInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Camera_Type.ItemInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 camID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &camid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isNetworking = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isnetworking_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Camera_Type.ItemInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Camera_Type.ItemInfo)
  return false;
#undef DO_
}

void Value_Camera_Type_ItemInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Camera_Type.ItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 camID = 1;
  if (this->camid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->camid(), output);
  }

  // bool isNetworking = 2;
  if (this->isnetworking() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->isnetworking(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Camera_Type.ItemInfo)
}

::google::protobuf::uint8* Value_Camera_Type_ItemInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Camera_Type.ItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 camID = 1;
  if (this->camid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->camid(), target);
  }

  // bool isNetworking = 2;
  if (this->isnetworking() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->isnetworking(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Camera_Type.ItemInfo)
  return target;
}

size_t Value_Camera_Type_ItemInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Camera_Type.ItemInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 camID = 1;
  if (this->camid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->camid());
  }

  // bool isNetworking = 2;
  if (this->isnetworking() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Camera_Type_ItemInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Camera_Type.ItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Camera_Type_ItemInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Camera_Type_ItemInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Camera_Type.ItemInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Camera_Type.ItemInfo)
    MergeFrom(*source);
  }
}

void Value_Camera_Type_ItemInfo::MergeFrom(const Value_Camera_Type_ItemInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Camera_Type.ItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.camid() != 0) {
    set_camid(from.camid());
  }
  if (from.isnetworking() != 0) {
    set_isnetworking(from.isnetworking());
  }
}

void Value_Camera_Type_ItemInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Camera_Type.ItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Camera_Type_ItemInfo::CopyFrom(const Value_Camera_Type_ItemInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Camera_Type.ItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Camera_Type_ItemInfo::IsInitialized() const {
  return true;
}

void Value_Camera_Type_ItemInfo::Swap(Value_Camera_Type_ItemInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Camera_Type_ItemInfo::InternalSwap(Value_Camera_Type_ItemInfo* other) {
  using std::swap;
  swap(camid_, other->camid_);
  swap(isnetworking_, other->isnetworking_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Camera_Type_ItemInfo::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Camera_Type::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Camera_Type::kCountFieldNumber;
const int Value_Camera_Type::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Camera_Type::Value_Camera_Type()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Camera_Type.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Camera_Type)
}
Value_Camera_Type::Value_Camera_Type(const Value_Camera_Type& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Camera_Type)
}

void Value_Camera_Type::SharedCtor() {
  count_ = 0u;
}

Value_Camera_Type::~Value_Camera_Type() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Camera_Type)
  SharedDtor();
}

void Value_Camera_Type::SharedDtor() {
}

void Value_Camera_Type::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Camera_Type::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Camera_Type& Value_Camera_Type::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Camera_Type.base);
  return *internal_default_instance();
}


void Value_Camera_Type::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Camera_Type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_Camera_Type::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Camera_Type)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_Camera_Type.ItemInfo items = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Camera_Type)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Camera_Type)
  return false;
#undef DO_
}

void Value_Camera_Type::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Camera_Type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_Camera_Type.ItemInfo items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->items(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Camera_Type)
}

::google::protobuf::uint8* Value_Camera_Type::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Camera_Type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_Camera_Type.ItemInfo items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->items(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Camera_Type)
  return target;
}

size_t Value_Camera_Type::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Camera_Type)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_Camera_Type.ItemInfo items = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->items(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Camera_Type::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Camera_Type)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Camera_Type* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Camera_Type>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Camera_Type)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Camera_Type)
    MergeFrom(*source);
  }
}

void Value_Camera_Type::MergeFrom(const Value_Camera_Type& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Camera_Type)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_Camera_Type::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Camera_Type)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Camera_Type::CopyFrom(const Value_Camera_Type& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Camera_Type)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Camera_Type::IsInitialized() const {
  return true;
}

void Value_Camera_Type::Swap(Value_Camera_Type* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Camera_Type::InternalSwap(Value_Camera_Type* other) {
  using std::swap;
  CastToBase(&items_)->InternalSwap(CastToBase(&other->items_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Camera_Type::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Recorder_ClosedCaption_ItemInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Recorder_ClosedCaption_ItemInfo::kCamIDFieldNumber;
const int Value_Recorder_ClosedCaption_ItemInfo::kHasClosedCaptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Recorder_ClosedCaption_ItemInfo::Value_Recorder_ClosedCaption_ItemInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Recorder_ClosedCaption_ItemInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Recorder_ClosedCaption.ItemInfo)
}
Value_Recorder_ClosedCaption_ItemInfo::Value_Recorder_ClosedCaption_ItemInfo(const Value_Recorder_ClosedCaption_ItemInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&camid_, &from.camid_,
    static_cast<size_t>(reinterpret_cast<char*>(&hasclosedcaption_) -
    reinterpret_cast<char*>(&camid_)) + sizeof(hasclosedcaption_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Recorder_ClosedCaption.ItemInfo)
}

void Value_Recorder_ClosedCaption_ItemInfo::SharedCtor() {
  ::memset(&camid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hasclosedcaption_) -
      reinterpret_cast<char*>(&camid_)) + sizeof(hasclosedcaption_));
}

Value_Recorder_ClosedCaption_ItemInfo::~Value_Recorder_ClosedCaption_ItemInfo() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Recorder_ClosedCaption.ItemInfo)
  SharedDtor();
}

void Value_Recorder_ClosedCaption_ItemInfo::SharedDtor() {
}

void Value_Recorder_ClosedCaption_ItemInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Recorder_ClosedCaption_ItemInfo::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Recorder_ClosedCaption_ItemInfo& Value_Recorder_ClosedCaption_ItemInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Recorder_ClosedCaption_ItemInfo.base);
  return *internal_default_instance();
}


void Value_Recorder_ClosedCaption_ItemInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Recorder_ClosedCaption.ItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&camid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hasclosedcaption_) -
      reinterpret_cast<char*>(&camid_)) + sizeof(hasclosedcaption_));
  _internal_metadata_.Clear();
}

bool Value_Recorder_ClosedCaption_ItemInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Recorder_ClosedCaption.ItemInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 camID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &camid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool hasClosedCaption = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hasclosedcaption_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Recorder_ClosedCaption.ItemInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Recorder_ClosedCaption.ItemInfo)
  return false;
#undef DO_
}

void Value_Recorder_ClosedCaption_ItemInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Recorder_ClosedCaption.ItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 camID = 1;
  if (this->camid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->camid(), output);
  }

  // bool hasClosedCaption = 2;
  if (this->hasclosedcaption() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->hasclosedcaption(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Recorder_ClosedCaption.ItemInfo)
}

::google::protobuf::uint8* Value_Recorder_ClosedCaption_ItemInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Recorder_ClosedCaption.ItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 camID = 1;
  if (this->camid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->camid(), target);
  }

  // bool hasClosedCaption = 2;
  if (this->hasclosedcaption() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->hasclosedcaption(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Recorder_ClosedCaption.ItemInfo)
  return target;
}

size_t Value_Recorder_ClosedCaption_ItemInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Recorder_ClosedCaption.ItemInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 camID = 1;
  if (this->camid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->camid());
  }

  // bool hasClosedCaption = 2;
  if (this->hasclosedcaption() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Recorder_ClosedCaption_ItemInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Recorder_ClosedCaption.ItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Recorder_ClosedCaption_ItemInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Recorder_ClosedCaption_ItemInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Recorder_ClosedCaption.ItemInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Recorder_ClosedCaption.ItemInfo)
    MergeFrom(*source);
  }
}

void Value_Recorder_ClosedCaption_ItemInfo::MergeFrom(const Value_Recorder_ClosedCaption_ItemInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Recorder_ClosedCaption.ItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.camid() != 0) {
    set_camid(from.camid());
  }
  if (from.hasclosedcaption() != 0) {
    set_hasclosedcaption(from.hasclosedcaption());
  }
}

void Value_Recorder_ClosedCaption_ItemInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Recorder_ClosedCaption.ItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Recorder_ClosedCaption_ItemInfo::CopyFrom(const Value_Recorder_ClosedCaption_ItemInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Recorder_ClosedCaption.ItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Recorder_ClosedCaption_ItemInfo::IsInitialized() const {
  return true;
}

void Value_Recorder_ClosedCaption_ItemInfo::Swap(Value_Recorder_ClosedCaption_ItemInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Recorder_ClosedCaption_ItemInfo::InternalSwap(Value_Recorder_ClosedCaption_ItemInfo* other) {
  using std::swap;
  swap(camid_, other->camid_);
  swap(hasclosedcaption_, other->hasclosedcaption_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Recorder_ClosedCaption_ItemInfo::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Recorder_ClosedCaption::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Recorder_ClosedCaption::kCountFieldNumber;
const int Value_Recorder_ClosedCaption::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Recorder_ClosedCaption::Value_Recorder_ClosedCaption()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Recorder_ClosedCaption.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Recorder_ClosedCaption)
}
Value_Recorder_ClosedCaption::Value_Recorder_ClosedCaption(const Value_Recorder_ClosedCaption& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Recorder_ClosedCaption)
}

void Value_Recorder_ClosedCaption::SharedCtor() {
  count_ = 0u;
}

Value_Recorder_ClosedCaption::~Value_Recorder_ClosedCaption() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Recorder_ClosedCaption)
  SharedDtor();
}

void Value_Recorder_ClosedCaption::SharedDtor() {
}

void Value_Recorder_ClosedCaption::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Recorder_ClosedCaption::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Recorder_ClosedCaption& Value_Recorder_ClosedCaption::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Recorder_ClosedCaption.base);
  return *internal_default_instance();
}


void Value_Recorder_ClosedCaption::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Recorder_ClosedCaption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_Recorder_ClosedCaption::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Recorder_ClosedCaption)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_Recorder_ClosedCaption.ItemInfo items = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Recorder_ClosedCaption)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Recorder_ClosedCaption)
  return false;
#undef DO_
}

void Value_Recorder_ClosedCaption::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Recorder_ClosedCaption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_Recorder_ClosedCaption.ItemInfo items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->items(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Recorder_ClosedCaption)
}

::google::protobuf::uint8* Value_Recorder_ClosedCaption::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Recorder_ClosedCaption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_Recorder_ClosedCaption.ItemInfo items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->items(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Recorder_ClosedCaption)
  return target;
}

size_t Value_Recorder_ClosedCaption::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Recorder_ClosedCaption)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_Recorder_ClosedCaption.ItemInfo items = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->items(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Recorder_ClosedCaption::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Recorder_ClosedCaption)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Recorder_ClosedCaption* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Recorder_ClosedCaption>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Recorder_ClosedCaption)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Recorder_ClosedCaption)
    MergeFrom(*source);
  }
}

void Value_Recorder_ClosedCaption::MergeFrom(const Value_Recorder_ClosedCaption& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Recorder_ClosedCaption)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_Recorder_ClosedCaption::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Recorder_ClosedCaption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Recorder_ClosedCaption::CopyFrom(const Value_Recorder_ClosedCaption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Recorder_ClosedCaption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Recorder_ClosedCaption::IsInitialized() const {
  return true;
}

void Value_Recorder_ClosedCaption::Swap(Value_Recorder_ClosedCaption* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Recorder_ClosedCaption::InternalSwap(Value_Recorder_ClosedCaption* other) {
  using std::swap;
  CastToBase(&items_)->InternalSwap(CastToBase(&other->items_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Recorder_ClosedCaption::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Player_ClosedCaption_ItemInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Player_ClosedCaption_ItemInfo::kPlayeridFieldNumber;
const int Value_Player_ClosedCaption_ItemInfo::kHasClosedCaptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Player_ClosedCaption_ItemInfo::Value_Player_ClosedCaption_ItemInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Player_ClosedCaption_ItemInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Player_ClosedCaption.ItemInfo)
}
Value_Player_ClosedCaption_ItemInfo::Value_Player_ClosedCaption_ItemInfo(const Value_Player_ClosedCaption_ItemInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&hasclosedcaption_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(hasclosedcaption_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Player_ClosedCaption.ItemInfo)
}

void Value_Player_ClosedCaption_ItemInfo::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hasclosedcaption_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(hasclosedcaption_));
}

Value_Player_ClosedCaption_ItemInfo::~Value_Player_ClosedCaption_ItemInfo() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Player_ClosedCaption.ItemInfo)
  SharedDtor();
}

void Value_Player_ClosedCaption_ItemInfo::SharedDtor() {
}

void Value_Player_ClosedCaption_ItemInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Player_ClosedCaption_ItemInfo::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Player_ClosedCaption_ItemInfo& Value_Player_ClosedCaption_ItemInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Player_ClosedCaption_ItemInfo.base);
  return *internal_default_instance();
}


void Value_Player_ClosedCaption_ItemInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Player_ClosedCaption.ItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hasclosedcaption_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(hasclosedcaption_));
  _internal_metadata_.Clear();
}

bool Value_Player_ClosedCaption_ItemInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Player_ClosedCaption.ItemInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool hasClosedCaption = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hasclosedcaption_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Player_ClosedCaption.ItemInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Player_ClosedCaption.ItemInfo)
  return false;
#undef DO_
}

void Value_Player_ClosedCaption_ItemInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Player_ClosedCaption.ItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->playerid(), output);
  }

  // bool hasClosedCaption = 2;
  if (this->hasclosedcaption() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->hasclosedcaption(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Player_ClosedCaption.ItemInfo)
}

::google::protobuf::uint8* Value_Player_ClosedCaption_ItemInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Player_ClosedCaption.ItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->playerid(), target);
  }

  // bool hasClosedCaption = 2;
  if (this->hasclosedcaption() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->hasclosedcaption(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Player_ClosedCaption.ItemInfo)
  return target;
}

size_t Value_Player_ClosedCaption_ItemInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Player_ClosedCaption.ItemInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->playerid());
  }

  // bool hasClosedCaption = 2;
  if (this->hasclosedcaption() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Player_ClosedCaption_ItemInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Player_ClosedCaption.ItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Player_ClosedCaption_ItemInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Player_ClosedCaption_ItemInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Player_ClosedCaption.ItemInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Player_ClosedCaption.ItemInfo)
    MergeFrom(*source);
  }
}

void Value_Player_ClosedCaption_ItemInfo::MergeFrom(const Value_Player_ClosedCaption_ItemInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Player_ClosedCaption.ItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.hasclosedcaption() != 0) {
    set_hasclosedcaption(from.hasclosedcaption());
  }
}

void Value_Player_ClosedCaption_ItemInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Player_ClosedCaption.ItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Player_ClosedCaption_ItemInfo::CopyFrom(const Value_Player_ClosedCaption_ItemInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Player_ClosedCaption.ItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Player_ClosedCaption_ItemInfo::IsInitialized() const {
  return true;
}

void Value_Player_ClosedCaption_ItemInfo::Swap(Value_Player_ClosedCaption_ItemInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Player_ClosedCaption_ItemInfo::InternalSwap(Value_Player_ClosedCaption_ItemInfo* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(hasclosedcaption_, other->hasclosedcaption_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Player_ClosedCaption_ItemInfo::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Player_ClosedCaption::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Player_ClosedCaption::kCountFieldNumber;
const int Value_Player_ClosedCaption::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Player_ClosedCaption::Value_Player_ClosedCaption()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Player_ClosedCaption.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Player_ClosedCaption)
}
Value_Player_ClosedCaption::Value_Player_ClosedCaption(const Value_Player_ClosedCaption& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Player_ClosedCaption)
}

void Value_Player_ClosedCaption::SharedCtor() {
  count_ = 0u;
}

Value_Player_ClosedCaption::~Value_Player_ClosedCaption() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Player_ClosedCaption)
  SharedDtor();
}

void Value_Player_ClosedCaption::SharedDtor() {
}

void Value_Player_ClosedCaption::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Player_ClosedCaption::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Player_ClosedCaption& Value_Player_ClosedCaption::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Player_ClosedCaption.base);
  return *internal_default_instance();
}


void Value_Player_ClosedCaption::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Player_ClosedCaption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_Player_ClosedCaption::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Player_ClosedCaption)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_Player_ClosedCaption.ItemInfo items = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Player_ClosedCaption)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Player_ClosedCaption)
  return false;
#undef DO_
}

void Value_Player_ClosedCaption::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Player_ClosedCaption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_Player_ClosedCaption.ItemInfo items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->items(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Player_ClosedCaption)
}

::google::protobuf::uint8* Value_Player_ClosedCaption::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Player_ClosedCaption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_Player_ClosedCaption.ItemInfo items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->items(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Player_ClosedCaption)
  return target;
}

size_t Value_Player_ClosedCaption::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Player_ClosedCaption)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_Player_ClosedCaption.ItemInfo items = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->items(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Player_ClosedCaption::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Player_ClosedCaption)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Player_ClosedCaption* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Player_ClosedCaption>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Player_ClosedCaption)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Player_ClosedCaption)
    MergeFrom(*source);
  }
}

void Value_Player_ClosedCaption::MergeFrom(const Value_Player_ClosedCaption& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Player_ClosedCaption)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_Player_ClosedCaption::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Player_ClosedCaption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Player_ClosedCaption::CopyFrom(const Value_Player_ClosedCaption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Player_ClosedCaption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Player_ClosedCaption::IsInitialized() const {
  return true;
}

void Value_Player_ClosedCaption::Swap(Value_Player_ClosedCaption* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Player_ClosedCaption::InternalSwap(Value_Player_ClosedCaption* other) {
  using std::swap;
  CastToBase(&items_)->InternalSwap(CastToBase(&other->items_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Player_ClosedCaption::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Player_Group_GroupInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Player_Group_GroupInfo::kIdFieldNumber;
const int Value_Player_Group_GroupInfo::kGroupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Player_Group_GroupInfo::Value_Player_Group_GroupInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Group_GroupInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Player_Group.GroupInfo)
}
Value_Player_Group_GroupInfo::Value_Player_Group_GroupInfo(const Value_Player_Group_GroupInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&group_) -
    reinterpret_cast<char*>(&id_)) + sizeof(group_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Player_Group.GroupInfo)
}

void Value_Player_Group_GroupInfo::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_) -
      reinterpret_cast<char*>(&id_)) + sizeof(group_));
}

Value_Player_Group_GroupInfo::~Value_Player_Group_GroupInfo() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Player_Group.GroupInfo)
  SharedDtor();
}

void Value_Player_Group_GroupInfo::SharedDtor() {
}

void Value_Player_Group_GroupInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Player_Group_GroupInfo::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Player_Group_GroupInfo& Value_Player_Group_GroupInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Player_Group_GroupInfo.base);
  return *internal_default_instance();
}


void Value_Player_Group_GroupInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Player_Group.GroupInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_) -
      reinterpret_cast<char*>(&id_)) + sizeof(group_));
  _internal_metadata_.Clear();
}

bool Value_Player_Group_GroupInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Player_Group.GroupInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.CnlID id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_id(static_cast< ::GoogleProtoBB::CnlID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Player_Group.GroupInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Player_Group.GroupInfo)
  return false;
#undef DO_
}

void Value_Player_Group_GroupInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Player_Group.GroupInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->id(), output);
  }

  // uint32 group = 2;
  if (this->group() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->group(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Player_Group.GroupInfo)
}

::google::protobuf::uint8* Value_Player_Group_GroupInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Player_Group.GroupInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->id(), target);
  }

  // uint32 group = 2;
  if (this->group() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->group(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Player_Group.GroupInfo)
  return target;
}

size_t Value_Player_Group_GroupInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Player_Group.GroupInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }

  // uint32 group = 2;
  if (this->group() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Player_Group_GroupInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Player_Group.GroupInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Player_Group_GroupInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Player_Group_GroupInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Player_Group.GroupInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Player_Group.GroupInfo)
    MergeFrom(*source);
  }
}

void Value_Player_Group_GroupInfo::MergeFrom(const Value_Player_Group_GroupInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Player_Group.GroupInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.group() != 0) {
    set_group(from.group());
  }
}

void Value_Player_Group_GroupInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Player_Group.GroupInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Player_Group_GroupInfo::CopyFrom(const Value_Player_Group_GroupInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Player_Group.GroupInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Player_Group_GroupInfo::IsInitialized() const {
  return true;
}

void Value_Player_Group_GroupInfo::Swap(Value_Player_Group_GroupInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Player_Group_GroupInfo::InternalSwap(Value_Player_Group_GroupInfo* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(group_, other->group_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Player_Group_GroupInfo::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Player_Group::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Player_Group::kCountFieldNumber;
const int Value_Player_Group::kGroupInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Player_Group::Value_Player_Group()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Group.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Player_Group)
}
Value_Player_Group::Value_Player_Group(const Value_Player_Group& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      groupinfo_(from.groupinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Player_Group)
}

void Value_Player_Group::SharedCtor() {
  count_ = 0u;
}

Value_Player_Group::~Value_Player_Group() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Player_Group)
  SharedDtor();
}

void Value_Player_Group::SharedDtor() {
}

void Value_Player_Group::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Player_Group::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Player_Group& Value_Player_Group::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Player_Group.base);
  return *internal_default_instance();
}


void Value_Player_Group::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Player_Group)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupinfo_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_Player_Group::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Player_Group)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_Player_Group.GroupInfo groupInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_groupinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Player_Group)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Player_Group)
  return false;
#undef DO_
}

void Value_Player_Group::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Player_Group)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_Player_Group.GroupInfo groupInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->groupinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->groupinfo(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Player_Group)
}

::google::protobuf::uint8* Value_Player_Group::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Player_Group)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_Player_Group.GroupInfo groupInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->groupinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->groupinfo(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Player_Group)
  return target;
}

size_t Value_Player_Group::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Player_Group)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_Player_Group.GroupInfo groupInfo = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->groupinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->groupinfo(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Player_Group::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Player_Group)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Player_Group* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Player_Group>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Player_Group)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Player_Group)
    MergeFrom(*source);
  }
}

void Value_Player_Group::MergeFrom(const Value_Player_Group& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Player_Group)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  groupinfo_.MergeFrom(from.groupinfo_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_Player_Group::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Player_Group)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Player_Group::CopyFrom(const Value_Player_Group& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Player_Group)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Player_Group::IsInitialized() const {
  return true;
}

void Value_Player_Group::Swap(Value_Player_Group* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Player_Group::InternalSwap(Value_Player_Group* other) {
  using std::swap;
  CastToBase(&groupinfo_)->InternalSwap(CastToBase(&other->groupinfo_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Player_Group::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Player_Camera_CameraInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Player_Camera_CameraInfo::kIdFieldNumber;
const int Value_Player_Camera_CameraInfo::kCameraFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Player_Camera_CameraInfo::Value_Player_Camera_CameraInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Camera_CameraInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Player_Camera.CameraInfo)
}
Value_Player_Camera_CameraInfo::Value_Player_Camera_CameraInfo(const Value_Player_Camera_CameraInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&camera_) -
    reinterpret_cast<char*>(&id_)) + sizeof(camera_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Player_Camera.CameraInfo)
}

void Value_Player_Camera_CameraInfo::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&camera_) -
      reinterpret_cast<char*>(&id_)) + sizeof(camera_));
}

Value_Player_Camera_CameraInfo::~Value_Player_Camera_CameraInfo() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Player_Camera.CameraInfo)
  SharedDtor();
}

void Value_Player_Camera_CameraInfo::SharedDtor() {
}

void Value_Player_Camera_CameraInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Player_Camera_CameraInfo::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Player_Camera_CameraInfo& Value_Player_Camera_CameraInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Player_Camera_CameraInfo.base);
  return *internal_default_instance();
}


void Value_Player_Camera_CameraInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Player_Camera.CameraInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&camera_) -
      reinterpret_cast<char*>(&id_)) + sizeof(camera_));
  _internal_metadata_.Clear();
}

bool Value_Player_Camera_CameraInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Player_Camera.CameraInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.CnlID id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_id(static_cast< ::GoogleProtoBB::CnlID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.CamID camera = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_camera(static_cast< ::GoogleProtoBB::CamID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Player_Camera.CameraInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Player_Camera.CameraInfo)
  return false;
#undef DO_
}

void Value_Player_Camera_CameraInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Player_Camera.CameraInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->id(), output);
  }

  // .GoogleProtoBB.CamID camera = 2;
  if (this->camera() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->camera(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Player_Camera.CameraInfo)
}

::google::protobuf::uint8* Value_Player_Camera_CameraInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Player_Camera.CameraInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->id(), target);
  }

  // .GoogleProtoBB.CamID camera = 2;
  if (this->camera() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->camera(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Player_Camera.CameraInfo)
  return target;
}

size_t Value_Player_Camera_CameraInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Player_Camera.CameraInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }

  // .GoogleProtoBB.CamID camera = 2;
  if (this->camera() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->camera());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Player_Camera_CameraInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Player_Camera.CameraInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Player_Camera_CameraInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Player_Camera_CameraInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Player_Camera.CameraInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Player_Camera.CameraInfo)
    MergeFrom(*source);
  }
}

void Value_Player_Camera_CameraInfo::MergeFrom(const Value_Player_Camera_CameraInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Player_Camera.CameraInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.camera() != 0) {
    set_camera(from.camera());
  }
}

void Value_Player_Camera_CameraInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Player_Camera.CameraInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Player_Camera_CameraInfo::CopyFrom(const Value_Player_Camera_CameraInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Player_Camera.CameraInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Player_Camera_CameraInfo::IsInitialized() const {
  return true;
}

void Value_Player_Camera_CameraInfo::Swap(Value_Player_Camera_CameraInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Player_Camera_CameraInfo::InternalSwap(Value_Player_Camera_CameraInfo* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(camera_, other->camera_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Player_Camera_CameraInfo::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Player_Camera::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Player_Camera::kCountFieldNumber;
const int Value_Player_Camera::kCameraInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Player_Camera::Value_Player_Camera()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Camera.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Player_Camera)
}
Value_Player_Camera::Value_Player_Camera(const Value_Player_Camera& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      camerainfo_(from.camerainfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Player_Camera)
}

void Value_Player_Camera::SharedCtor() {
  count_ = 0u;
}

Value_Player_Camera::~Value_Player_Camera() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Player_Camera)
  SharedDtor();
}

void Value_Player_Camera::SharedDtor() {
}

void Value_Player_Camera::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Player_Camera::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Player_Camera& Value_Player_Camera::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Player_Camera.base);
  return *internal_default_instance();
}


void Value_Player_Camera::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Player_Camera)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  camerainfo_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_Player_Camera::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Player_Camera)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_Player_Camera.CameraInfo cameraInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_camerainfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Player_Camera)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Player_Camera)
  return false;
#undef DO_
}

void Value_Player_Camera::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Player_Camera)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_Player_Camera.CameraInfo cameraInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->camerainfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->camerainfo(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Player_Camera)
}

::google::protobuf::uint8* Value_Player_Camera::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Player_Camera)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_Player_Camera.CameraInfo cameraInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->camerainfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->camerainfo(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Player_Camera)
  return target;
}

size_t Value_Player_Camera::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Player_Camera)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_Player_Camera.CameraInfo cameraInfo = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->camerainfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->camerainfo(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Player_Camera::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Player_Camera)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Player_Camera* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Player_Camera>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Player_Camera)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Player_Camera)
    MergeFrom(*source);
  }
}

void Value_Player_Camera::MergeFrom(const Value_Player_Camera& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Player_Camera)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  camerainfo_.MergeFrom(from.camerainfo_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_Player_Camera::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Player_Camera)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Player_Camera::CopyFrom(const Value_Player_Camera& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Player_Camera)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Player_Camera::IsInitialized() const {
  return true;
}

void Value_Player_Camera::Swap(Value_Player_Camera* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Player_Camera::InternalSwap(Value_Player_Camera* other) {
  using std::swap;
  CastToBase(&camerainfo_)->InternalSwap(CastToBase(&other->camerainfo_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Player_Camera::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Player_Type_TypeInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Player_Type_TypeInfo::kIdFieldNumber;
const int Value_Player_Type_TypeInfo::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Player_Type_TypeInfo::Value_Player_Type_TypeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Type_TypeInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Player_Type.TypeInfo)
}
Value_Player_Type_TypeInfo::Value_Player_Type_TypeInfo(const Value_Player_Type_TypeInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Player_Type.TypeInfo)
}

void Value_Player_Type_TypeInfo::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
}

Value_Player_Type_TypeInfo::~Value_Player_Type_TypeInfo() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Player_Type.TypeInfo)
  SharedDtor();
}

void Value_Player_Type_TypeInfo::SharedDtor() {
}

void Value_Player_Type_TypeInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Player_Type_TypeInfo::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Player_Type_TypeInfo& Value_Player_Type_TypeInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Player_Type_TypeInfo.base);
  return *internal_default_instance();
}


void Value_Player_Type_TypeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Player_Type.TypeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool Value_Player_Type_TypeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Player_Type.TypeInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.CnlID id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_id(static_cast< ::GoogleProtoBB::CnlID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_Player_Type.PlayerType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::GoogleProtoBB::Value_Player_Type_PlayerType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Player_Type.TypeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Player_Type.TypeInfo)
  return false;
#undef DO_
}

void Value_Player_Type_TypeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Player_Type.TypeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->id(), output);
  }

  // .GoogleProtoBB.Value_Player_Type.PlayerType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Player_Type.TypeInfo)
}

::google::protobuf::uint8* Value_Player_Type_TypeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Player_Type.TypeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->id(), target);
  }

  // .GoogleProtoBB.Value_Player_Type.PlayerType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Player_Type.TypeInfo)
  return target;
}

size_t Value_Player_Type_TypeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Player_Type.TypeInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }

  // .GoogleProtoBB.Value_Player_Type.PlayerType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Player_Type_TypeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Player_Type.TypeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Player_Type_TypeInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Player_Type_TypeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Player_Type.TypeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Player_Type.TypeInfo)
    MergeFrom(*source);
  }
}

void Value_Player_Type_TypeInfo::MergeFrom(const Value_Player_Type_TypeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Player_Type.TypeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Value_Player_Type_TypeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Player_Type.TypeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Player_Type_TypeInfo::CopyFrom(const Value_Player_Type_TypeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Player_Type.TypeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Player_Type_TypeInfo::IsInitialized() const {
  return true;
}

void Value_Player_Type_TypeInfo::Swap(Value_Player_Type_TypeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Player_Type_TypeInfo::InternalSwap(Value_Player_Type_TypeInfo* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Player_Type_TypeInfo::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Player_Type::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Player_Type::kCountFieldNumber;
const int Value_Player_Type::kTypeInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Player_Type::Value_Player_Type()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Type.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Player_Type)
}
Value_Player_Type::Value_Player_Type(const Value_Player_Type& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      typeinfo_(from.typeinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Player_Type)
}

void Value_Player_Type::SharedCtor() {
  count_ = 0u;
}

Value_Player_Type::~Value_Player_Type() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Player_Type)
  SharedDtor();
}

void Value_Player_Type::SharedDtor() {
}

void Value_Player_Type::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Player_Type::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Player_Type& Value_Player_Type::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Player_Type.base);
  return *internal_default_instance();
}


void Value_Player_Type::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Player_Type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  typeinfo_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_Player_Type::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Player_Type)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_Player_Type.TypeInfo typeInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_typeinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Player_Type)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Player_Type)
  return false;
#undef DO_
}

void Value_Player_Type::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Player_Type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_Player_Type.TypeInfo typeInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->typeinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->typeinfo(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Player_Type)
}

::google::protobuf::uint8* Value_Player_Type::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Player_Type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_Player_Type.TypeInfo typeInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->typeinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->typeinfo(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Player_Type)
  return target;
}

size_t Value_Player_Type::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Player_Type)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_Player_Type.TypeInfo typeInfo = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->typeinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->typeinfo(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Player_Type::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Player_Type)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Player_Type* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Player_Type>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Player_Type)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Player_Type)
    MergeFrom(*source);
  }
}

void Value_Player_Type::MergeFrom(const Value_Player_Type& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Player_Type)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  typeinfo_.MergeFrom(from.typeinfo_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_Player_Type::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Player_Type)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Player_Type::CopyFrom(const Value_Player_Type& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Player_Type)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Player_Type::IsInitialized() const {
  return true;
}

void Value_Player_Type::Swap(Value_Player_Type* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Player_Type::InternalSwap(Value_Player_Type* other) {
  using std::swap;
  CastToBase(&typeinfo_)->InternalSwap(CastToBase(&other->typeinfo_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Player_Type::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Player_AudioPresetId_TypeInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Player_AudioPresetId_TypeInfo::kIdFieldNumber;
const int Value_Player_AudioPresetId_TypeInfo::kAudioPresetIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Player_AudioPresetId_TypeInfo::Value_Player_AudioPresetId_TypeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Player_AudioPresetId_TypeInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Player_AudioPresetId.TypeInfo)
}
Value_Player_AudioPresetId_TypeInfo::Value_Player_AudioPresetId_TypeInfo(const Value_Player_AudioPresetId_TypeInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&audiopresetid_) -
    reinterpret_cast<char*>(&id_)) + sizeof(audiopresetid_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Player_AudioPresetId.TypeInfo)
}

void Value_Player_AudioPresetId_TypeInfo::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&audiopresetid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(audiopresetid_));
}

Value_Player_AudioPresetId_TypeInfo::~Value_Player_AudioPresetId_TypeInfo() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Player_AudioPresetId.TypeInfo)
  SharedDtor();
}

void Value_Player_AudioPresetId_TypeInfo::SharedDtor() {
}

void Value_Player_AudioPresetId_TypeInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Player_AudioPresetId_TypeInfo::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Player_AudioPresetId_TypeInfo& Value_Player_AudioPresetId_TypeInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Player_AudioPresetId_TypeInfo.base);
  return *internal_default_instance();
}


void Value_Player_AudioPresetId_TypeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Player_AudioPresetId.TypeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&audiopresetid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(audiopresetid_));
  _internal_metadata_.Clear();
}

bool Value_Player_AudioPresetId_TypeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Player_AudioPresetId.TypeInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.CnlID id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_id(static_cast< ::GoogleProtoBB::CnlID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 audioPresetId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &audiopresetid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Player_AudioPresetId.TypeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Player_AudioPresetId.TypeInfo)
  return false;
#undef DO_
}

void Value_Player_AudioPresetId_TypeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Player_AudioPresetId.TypeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->id(), output);
  }

  // uint32 audioPresetId = 2;
  if (this->audiopresetid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->audiopresetid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Player_AudioPresetId.TypeInfo)
}

::google::protobuf::uint8* Value_Player_AudioPresetId_TypeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Player_AudioPresetId.TypeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->id(), target);
  }

  // uint32 audioPresetId = 2;
  if (this->audiopresetid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->audiopresetid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Player_AudioPresetId.TypeInfo)
  return target;
}

size_t Value_Player_AudioPresetId_TypeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Player_AudioPresetId.TypeInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }

  // uint32 audioPresetId = 2;
  if (this->audiopresetid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->audiopresetid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Player_AudioPresetId_TypeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Player_AudioPresetId.TypeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Player_AudioPresetId_TypeInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Player_AudioPresetId_TypeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Player_AudioPresetId.TypeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Player_AudioPresetId.TypeInfo)
    MergeFrom(*source);
  }
}

void Value_Player_AudioPresetId_TypeInfo::MergeFrom(const Value_Player_AudioPresetId_TypeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Player_AudioPresetId.TypeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.audiopresetid() != 0) {
    set_audiopresetid(from.audiopresetid());
  }
}

void Value_Player_AudioPresetId_TypeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Player_AudioPresetId.TypeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Player_AudioPresetId_TypeInfo::CopyFrom(const Value_Player_AudioPresetId_TypeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Player_AudioPresetId.TypeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Player_AudioPresetId_TypeInfo::IsInitialized() const {
  return true;
}

void Value_Player_AudioPresetId_TypeInfo::Swap(Value_Player_AudioPresetId_TypeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Player_AudioPresetId_TypeInfo::InternalSwap(Value_Player_AudioPresetId_TypeInfo* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(audiopresetid_, other->audiopresetid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Player_AudioPresetId_TypeInfo::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Player_AudioPresetId::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Player_AudioPresetId::kCountFieldNumber;
const int Value_Player_AudioPresetId::kTypeInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Player_AudioPresetId::Value_Player_AudioPresetId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Player_AudioPresetId.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Player_AudioPresetId)
}
Value_Player_AudioPresetId::Value_Player_AudioPresetId(const Value_Player_AudioPresetId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      typeinfo_(from.typeinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Player_AudioPresetId)
}

void Value_Player_AudioPresetId::SharedCtor() {
  count_ = 0u;
}

Value_Player_AudioPresetId::~Value_Player_AudioPresetId() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Player_AudioPresetId)
  SharedDtor();
}

void Value_Player_AudioPresetId::SharedDtor() {
}

void Value_Player_AudioPresetId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Player_AudioPresetId::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Player_AudioPresetId& Value_Player_AudioPresetId::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Player_AudioPresetId.base);
  return *internal_default_instance();
}


void Value_Player_AudioPresetId::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Player_AudioPresetId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  typeinfo_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_Player_AudioPresetId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Player_AudioPresetId)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_Player_AudioPresetId.TypeInfo typeInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_typeinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Player_AudioPresetId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Player_AudioPresetId)
  return false;
#undef DO_
}

void Value_Player_AudioPresetId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Player_AudioPresetId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_Player_AudioPresetId.TypeInfo typeInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->typeinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->typeinfo(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Player_AudioPresetId)
}

::google::protobuf::uint8* Value_Player_AudioPresetId::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Player_AudioPresetId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_Player_AudioPresetId.TypeInfo typeInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->typeinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->typeinfo(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Player_AudioPresetId)
  return target;
}

size_t Value_Player_AudioPresetId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Player_AudioPresetId)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_Player_AudioPresetId.TypeInfo typeInfo = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->typeinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->typeinfo(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Player_AudioPresetId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Player_AudioPresetId)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Player_AudioPresetId* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Player_AudioPresetId>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Player_AudioPresetId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Player_AudioPresetId)
    MergeFrom(*source);
  }
}

void Value_Player_AudioPresetId::MergeFrom(const Value_Player_AudioPresetId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Player_AudioPresetId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  typeinfo_.MergeFrom(from.typeinfo_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_Player_AudioPresetId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Player_AudioPresetId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Player_AudioPresetId::CopyFrom(const Value_Player_AudioPresetId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Player_AudioPresetId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Player_AudioPresetId::IsInitialized() const {
  return true;
}

void Value_Player_AudioPresetId::Swap(Value_Player_AudioPresetId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Player_AudioPresetId::InternalSwap(Value_Player_AudioPresetId* other) {
  using std::swap;
  CastToBase(&typeinfo_)->InternalSwap(CastToBase(&other->typeinfo_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Player_AudioPresetId::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Player_Speed_SpeedInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Player_Speed_SpeedInfo::kIdFieldNumber;
const int Value_Player_Speed_SpeedInfo::kSpeedNFieldNumber;
const int Value_Player_Speed_SpeedInfo::kSpeedDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Player_Speed_SpeedInfo::Value_Player_Speed_SpeedInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Speed_SpeedInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Player_Speed.SpeedInfo)
}
Value_Player_Speed_SpeedInfo::Value_Player_Speed_SpeedInfo(const Value_Player_Speed_SpeedInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&speedd_) -
    reinterpret_cast<char*>(&id_)) + sizeof(speedd_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Player_Speed.SpeedInfo)
}

void Value_Player_Speed_SpeedInfo::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speedd_) -
      reinterpret_cast<char*>(&id_)) + sizeof(speedd_));
}

Value_Player_Speed_SpeedInfo::~Value_Player_Speed_SpeedInfo() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Player_Speed.SpeedInfo)
  SharedDtor();
}

void Value_Player_Speed_SpeedInfo::SharedDtor() {
}

void Value_Player_Speed_SpeedInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Player_Speed_SpeedInfo::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Player_Speed_SpeedInfo& Value_Player_Speed_SpeedInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Player_Speed_SpeedInfo.base);
  return *internal_default_instance();
}


void Value_Player_Speed_SpeedInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Player_Speed.SpeedInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speedd_) -
      reinterpret_cast<char*>(&id_)) + sizeof(speedd_));
  _internal_metadata_.Clear();
}

bool Value_Player_Speed_SpeedInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Player_Speed.SpeedInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.CnlID id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_id(static_cast< ::GoogleProtoBB::CnlID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 speedN = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &speedn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 speedD = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &speedd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Player_Speed.SpeedInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Player_Speed.SpeedInfo)
  return false;
#undef DO_
}

void Value_Player_Speed_SpeedInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Player_Speed.SpeedInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->id(), output);
  }

  // int32 speedN = 2;
  if (this->speedn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->speedn(), output);
  }

  // int32 speedD = 3;
  if (this->speedd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->speedd(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Player_Speed.SpeedInfo)
}

::google::protobuf::uint8* Value_Player_Speed_SpeedInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Player_Speed.SpeedInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->id(), target);
  }

  // int32 speedN = 2;
  if (this->speedn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->speedn(), target);
  }

  // int32 speedD = 3;
  if (this->speedd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->speedd(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Player_Speed.SpeedInfo)
  return target;
}

size_t Value_Player_Speed_SpeedInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Player_Speed.SpeedInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }

  // int32 speedN = 2;
  if (this->speedn() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->speedn());
  }

  // int32 speedD = 3;
  if (this->speedd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->speedd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Player_Speed_SpeedInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Player_Speed.SpeedInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Player_Speed_SpeedInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Player_Speed_SpeedInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Player_Speed.SpeedInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Player_Speed.SpeedInfo)
    MergeFrom(*source);
  }
}

void Value_Player_Speed_SpeedInfo::MergeFrom(const Value_Player_Speed_SpeedInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Player_Speed.SpeedInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.speedn() != 0) {
    set_speedn(from.speedn());
  }
  if (from.speedd() != 0) {
    set_speedd(from.speedd());
  }
}

void Value_Player_Speed_SpeedInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Player_Speed.SpeedInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Player_Speed_SpeedInfo::CopyFrom(const Value_Player_Speed_SpeedInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Player_Speed.SpeedInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Player_Speed_SpeedInfo::IsInitialized() const {
  return true;
}

void Value_Player_Speed_SpeedInfo::Swap(Value_Player_Speed_SpeedInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Player_Speed_SpeedInfo::InternalSwap(Value_Player_Speed_SpeedInfo* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(speedn_, other->speedn_);
  swap(speedd_, other->speedd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Player_Speed_SpeedInfo::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Player_Speed::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Player_Speed::kCountFieldNumber;
const int Value_Player_Speed::kSpeedInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Player_Speed::Value_Player_Speed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Speed.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Player_Speed)
}
Value_Player_Speed::Value_Player_Speed(const Value_Player_Speed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      speedinfo_(from.speedinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Player_Speed)
}

void Value_Player_Speed::SharedCtor() {
  count_ = 0u;
}

Value_Player_Speed::~Value_Player_Speed() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Player_Speed)
  SharedDtor();
}

void Value_Player_Speed::SharedDtor() {
}

void Value_Player_Speed::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Player_Speed::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Player_Speed& Value_Player_Speed::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Player_Speed.base);
  return *internal_default_instance();
}


void Value_Player_Speed::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Player_Speed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  speedinfo_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_Player_Speed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Player_Speed)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_Player_Speed.SpeedInfo speedInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_speedinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Player_Speed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Player_Speed)
  return false;
#undef DO_
}

void Value_Player_Speed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Player_Speed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_Player_Speed.SpeedInfo speedInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->speedinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->speedinfo(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Player_Speed)
}

::google::protobuf::uint8* Value_Player_Speed::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Player_Speed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_Player_Speed.SpeedInfo speedInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->speedinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->speedinfo(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Player_Speed)
  return target;
}

size_t Value_Player_Speed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Player_Speed)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_Player_Speed.SpeedInfo speedInfo = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->speedinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->speedinfo(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Player_Speed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Player_Speed)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Player_Speed* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Player_Speed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Player_Speed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Player_Speed)
    MergeFrom(*source);
  }
}

void Value_Player_Speed::MergeFrom(const Value_Player_Speed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Player_Speed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  speedinfo_.MergeFrom(from.speedinfo_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_Player_Speed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Player_Speed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Player_Speed::CopyFrom(const Value_Player_Speed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Player_Speed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Player_Speed::IsInitialized() const {
  return true;
}

void Value_Player_Speed::Swap(Value_Player_Speed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Player_Speed::InternalSwap(Value_Player_Speed* other) {
  using std::swap;
  CastToBase(&speedinfo_)->InternalSwap(CastToBase(&other->speedinfo_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Player_Speed::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Player_Consigne_ConsigneInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Player_Consigne_ConsigneInfo::kIdFieldNumber;
const int Value_Player_Consigne_ConsigneInfo::kConsigneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Player_Consigne_ConsigneInfo::Value_Player_Consigne_ConsigneInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Consigne_ConsigneInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Player_Consigne.ConsigneInfo)
}
Value_Player_Consigne_ConsigneInfo::Value_Player_Consigne_ConsigneInfo(const Value_Player_Consigne_ConsigneInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&consigne_, &from.consigne_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&consigne_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Player_Consigne.ConsigneInfo)
}

void Value_Player_Consigne_ConsigneInfo::SharedCtor() {
  ::memset(&consigne_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&consigne_)) + sizeof(id_));
}

Value_Player_Consigne_ConsigneInfo::~Value_Player_Consigne_ConsigneInfo() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Player_Consigne.ConsigneInfo)
  SharedDtor();
}

void Value_Player_Consigne_ConsigneInfo::SharedDtor() {
}

void Value_Player_Consigne_ConsigneInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Player_Consigne_ConsigneInfo::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Player_Consigne_ConsigneInfo& Value_Player_Consigne_ConsigneInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Player_Consigne_ConsigneInfo.base);
  return *internal_default_instance();
}


void Value_Player_Consigne_ConsigneInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Player_Consigne.ConsigneInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&consigne_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&consigne_)) + sizeof(id_));
  _internal_metadata_.Clear();
}

bool Value_Player_Consigne_ConsigneInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Player_Consigne.ConsigneInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.CnlID id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_id(static_cast< ::GoogleProtoBB::CnlID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 consigne = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &consigne_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Player_Consigne.ConsigneInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Player_Consigne.ConsigneInfo)
  return false;
#undef DO_
}

void Value_Player_Consigne_ConsigneInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Player_Consigne.ConsigneInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->id(), output);
  }

  // uint64 consigne = 2;
  if (this->consigne() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->consigne(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Player_Consigne.ConsigneInfo)
}

::google::protobuf::uint8* Value_Player_Consigne_ConsigneInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Player_Consigne.ConsigneInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->id(), target);
  }

  // uint64 consigne = 2;
  if (this->consigne() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->consigne(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Player_Consigne.ConsigneInfo)
  return target;
}

size_t Value_Player_Consigne_ConsigneInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Player_Consigne.ConsigneInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 consigne = 2;
  if (this->consigne() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->consigne());
  }

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Player_Consigne_ConsigneInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Player_Consigne.ConsigneInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Player_Consigne_ConsigneInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Player_Consigne_ConsigneInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Player_Consigne.ConsigneInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Player_Consigne.ConsigneInfo)
    MergeFrom(*source);
  }
}

void Value_Player_Consigne_ConsigneInfo::MergeFrom(const Value_Player_Consigne_ConsigneInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Player_Consigne.ConsigneInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.consigne() != 0) {
    set_consigne(from.consigne());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void Value_Player_Consigne_ConsigneInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Player_Consigne.ConsigneInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Player_Consigne_ConsigneInfo::CopyFrom(const Value_Player_Consigne_ConsigneInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Player_Consigne.ConsigneInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Player_Consigne_ConsigneInfo::IsInitialized() const {
  return true;
}

void Value_Player_Consigne_ConsigneInfo::Swap(Value_Player_Consigne_ConsigneInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Player_Consigne_ConsigneInfo::InternalSwap(Value_Player_Consigne_ConsigneInfo* other) {
  using std::swap;
  swap(consigne_, other->consigne_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Player_Consigne_ConsigneInfo::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Player_Consigne::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Player_Consigne::kCountFieldNumber;
const int Value_Player_Consigne::kConsigneInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Player_Consigne::Value_Player_Consigne()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Consigne.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Player_Consigne)
}
Value_Player_Consigne::Value_Player_Consigne(const Value_Player_Consigne& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      consigneinfo_(from.consigneinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Player_Consigne)
}

void Value_Player_Consigne::SharedCtor() {
  count_ = 0u;
}

Value_Player_Consigne::~Value_Player_Consigne() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Player_Consigne)
  SharedDtor();
}

void Value_Player_Consigne::SharedDtor() {
}

void Value_Player_Consigne::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Player_Consigne::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Player_Consigne& Value_Player_Consigne::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Player_Consigne.base);
  return *internal_default_instance();
}


void Value_Player_Consigne::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Player_Consigne)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  consigneinfo_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_Player_Consigne::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Player_Consigne)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_Player_Consigne.ConsigneInfo consigneInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_consigneinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Player_Consigne)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Player_Consigne)
  return false;
#undef DO_
}

void Value_Player_Consigne::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Player_Consigne)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_Player_Consigne.ConsigneInfo consigneInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->consigneinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->consigneinfo(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Player_Consigne)
}

::google::protobuf::uint8* Value_Player_Consigne::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Player_Consigne)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_Player_Consigne.ConsigneInfo consigneInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->consigneinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->consigneinfo(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Player_Consigne)
  return target;
}

size_t Value_Player_Consigne::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Player_Consigne)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_Player_Consigne.ConsigneInfo consigneInfo = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->consigneinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->consigneinfo(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Player_Consigne::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Player_Consigne)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Player_Consigne* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Player_Consigne>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Player_Consigne)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Player_Consigne)
    MergeFrom(*source);
  }
}

void Value_Player_Consigne::MergeFrom(const Value_Player_Consigne& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Player_Consigne)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  consigneinfo_.MergeFrom(from.consigneinfo_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_Player_Consigne::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Player_Consigne)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Player_Consigne::CopyFrom(const Value_Player_Consigne& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Player_Consigne)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Player_Consigne::IsInitialized() const {
  return true;
}

void Value_Player_Consigne::Swap(Value_Player_Consigne* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Player_Consigne::InternalSwap(Value_Player_Consigne* other) {
  using std::swap;
  CastToBase(&consigneinfo_)->InternalSwap(CastToBase(&other->consigneinfo_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Player_Consigne::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Player_Mode_ModeInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Player_Mode_ModeInfo::kIdFieldNumber;
const int Value_Player_Mode_ModeInfo::kPlayerModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Player_Mode_ModeInfo::Value_Player_Mode_ModeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Mode_ModeInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Player_Mode.ModeInfo)
}
Value_Player_Mode_ModeInfo::Value_Player_Mode_ModeInfo(const Value_Player_Mode_ModeInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&playermode_) -
    reinterpret_cast<char*>(&id_)) + sizeof(playermode_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Player_Mode.ModeInfo)
}

void Value_Player_Mode_ModeInfo::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playermode_) -
      reinterpret_cast<char*>(&id_)) + sizeof(playermode_));
}

Value_Player_Mode_ModeInfo::~Value_Player_Mode_ModeInfo() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Player_Mode.ModeInfo)
  SharedDtor();
}

void Value_Player_Mode_ModeInfo::SharedDtor() {
}

void Value_Player_Mode_ModeInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Player_Mode_ModeInfo::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Player_Mode_ModeInfo& Value_Player_Mode_ModeInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Player_Mode_ModeInfo.base);
  return *internal_default_instance();
}


void Value_Player_Mode_ModeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Player_Mode.ModeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playermode_) -
      reinterpret_cast<char*>(&id_)) + sizeof(playermode_));
  _internal_metadata_.Clear();
}

bool Value_Player_Mode_ModeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Player_Mode.ModeInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.CnlID id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_id(static_cast< ::GoogleProtoBB::CnlID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_Player_Mode.PlayerMode playerMode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_playermode(static_cast< ::GoogleProtoBB::Value_Player_Mode_PlayerMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Player_Mode.ModeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Player_Mode.ModeInfo)
  return false;
#undef DO_
}

void Value_Player_Mode_ModeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Player_Mode.ModeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->id(), output);
  }

  // .GoogleProtoBB.Value_Player_Mode.PlayerMode playerMode = 2;
  if (this->playermode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->playermode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Player_Mode.ModeInfo)
}

::google::protobuf::uint8* Value_Player_Mode_ModeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Player_Mode.ModeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->id(), target);
  }

  // .GoogleProtoBB.Value_Player_Mode.PlayerMode playerMode = 2;
  if (this->playermode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->playermode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Player_Mode.ModeInfo)
  return target;
}

size_t Value_Player_Mode_ModeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Player_Mode.ModeInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }

  // .GoogleProtoBB.Value_Player_Mode.PlayerMode playerMode = 2;
  if (this->playermode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->playermode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Player_Mode_ModeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Player_Mode.ModeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Player_Mode_ModeInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Player_Mode_ModeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Player_Mode.ModeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Player_Mode.ModeInfo)
    MergeFrom(*source);
  }
}

void Value_Player_Mode_ModeInfo::MergeFrom(const Value_Player_Mode_ModeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Player_Mode.ModeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.playermode() != 0) {
    set_playermode(from.playermode());
  }
}

void Value_Player_Mode_ModeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Player_Mode.ModeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Player_Mode_ModeInfo::CopyFrom(const Value_Player_Mode_ModeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Player_Mode.ModeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Player_Mode_ModeInfo::IsInitialized() const {
  return true;
}

void Value_Player_Mode_ModeInfo::Swap(Value_Player_Mode_ModeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Player_Mode_ModeInfo::InternalSwap(Value_Player_Mode_ModeInfo* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(playermode_, other->playermode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Player_Mode_ModeInfo::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Player_Mode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Player_Mode::kCountFieldNumber;
const int Value_Player_Mode::kModeInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Player_Mode::Value_Player_Mode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Mode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Player_Mode)
}
Value_Player_Mode::Value_Player_Mode(const Value_Player_Mode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      modeinfo_(from.modeinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Player_Mode)
}

void Value_Player_Mode::SharedCtor() {
  count_ = 0u;
}

Value_Player_Mode::~Value_Player_Mode() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Player_Mode)
  SharedDtor();
}

void Value_Player_Mode::SharedDtor() {
}

void Value_Player_Mode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Player_Mode::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Player_Mode& Value_Player_Mode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Player_Mode.base);
  return *internal_default_instance();
}


void Value_Player_Mode::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Player_Mode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  modeinfo_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_Player_Mode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Player_Mode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_Player_Mode.ModeInfo modeInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modeinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Player_Mode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Player_Mode)
  return false;
#undef DO_
}

void Value_Player_Mode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Player_Mode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_Player_Mode.ModeInfo modeInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modeinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->modeinfo(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Player_Mode)
}

::google::protobuf::uint8* Value_Player_Mode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Player_Mode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_Player_Mode.ModeInfo modeInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modeinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->modeinfo(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Player_Mode)
  return target;
}

size_t Value_Player_Mode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Player_Mode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_Player_Mode.ModeInfo modeInfo = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->modeinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modeinfo(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Player_Mode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Player_Mode)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Player_Mode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Player_Mode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Player_Mode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Player_Mode)
    MergeFrom(*source);
  }
}

void Value_Player_Mode::MergeFrom(const Value_Player_Mode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Player_Mode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  modeinfo_.MergeFrom(from.modeinfo_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_Player_Mode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Player_Mode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Player_Mode::CopyFrom(const Value_Player_Mode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Player_Mode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Player_Mode::IsInitialized() const {
  return true;
}

void Value_Player_Mode::Swap(Value_Player_Mode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Player_Mode::InternalSwap(Value_Player_Mode* other) {
  using std::swap;
  CastToBase(&modeinfo_)->InternalSwap(CastToBase(&other->modeinfo_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Player_Mode::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Player_Extend_Playlist_ExtendPlaylistInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Player_Extend_Playlist_ExtendPlaylistInfo::kIdFieldNumber;
const int Value_Player_Extend_Playlist_ExtendPlaylistInfo::kBExtendPlaylistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Player_Extend_Playlist_ExtendPlaylistInfo::Value_Player_Extend_Playlist_ExtendPlaylistInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Extend_Playlist_ExtendPlaylistInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Player_Extend_Playlist.ExtendPlaylistInfo)
}
Value_Player_Extend_Playlist_ExtendPlaylistInfo::Value_Player_Extend_Playlist_ExtendPlaylistInfo(const Value_Player_Extend_Playlist_ExtendPlaylistInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&bextendplaylist_) -
    reinterpret_cast<char*>(&id_)) + sizeof(bextendplaylist_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Player_Extend_Playlist.ExtendPlaylistInfo)
}

void Value_Player_Extend_Playlist_ExtendPlaylistInfo::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bextendplaylist_) -
      reinterpret_cast<char*>(&id_)) + sizeof(bextendplaylist_));
}

Value_Player_Extend_Playlist_ExtendPlaylistInfo::~Value_Player_Extend_Playlist_ExtendPlaylistInfo() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Player_Extend_Playlist.ExtendPlaylistInfo)
  SharedDtor();
}

void Value_Player_Extend_Playlist_ExtendPlaylistInfo::SharedDtor() {
}

void Value_Player_Extend_Playlist_ExtendPlaylistInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Player_Extend_Playlist_ExtendPlaylistInfo::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Player_Extend_Playlist_ExtendPlaylistInfo& Value_Player_Extend_Playlist_ExtendPlaylistInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Player_Extend_Playlist_ExtendPlaylistInfo.base);
  return *internal_default_instance();
}


void Value_Player_Extend_Playlist_ExtendPlaylistInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Player_Extend_Playlist.ExtendPlaylistInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bextendplaylist_) -
      reinterpret_cast<char*>(&id_)) + sizeof(bextendplaylist_));
  _internal_metadata_.Clear();
}

bool Value_Player_Extend_Playlist_ExtendPlaylistInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Player_Extend_Playlist.ExtendPlaylistInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.CnlID id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_id(static_cast< ::GoogleProtoBB::CnlID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bExtendPlaylist = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bextendplaylist_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Player_Extend_Playlist.ExtendPlaylistInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Player_Extend_Playlist.ExtendPlaylistInfo)
  return false;
#undef DO_
}

void Value_Player_Extend_Playlist_ExtendPlaylistInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Player_Extend_Playlist.ExtendPlaylistInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->id(), output);
  }

  // bool bExtendPlaylist = 2;
  if (this->bextendplaylist() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->bextendplaylist(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Player_Extend_Playlist.ExtendPlaylistInfo)
}

::google::protobuf::uint8* Value_Player_Extend_Playlist_ExtendPlaylistInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Player_Extend_Playlist.ExtendPlaylistInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->id(), target);
  }

  // bool bExtendPlaylist = 2;
  if (this->bextendplaylist() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->bextendplaylist(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Player_Extend_Playlist.ExtendPlaylistInfo)
  return target;
}

size_t Value_Player_Extend_Playlist_ExtendPlaylistInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Player_Extend_Playlist.ExtendPlaylistInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }

  // bool bExtendPlaylist = 2;
  if (this->bextendplaylist() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Player_Extend_Playlist_ExtendPlaylistInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Player_Extend_Playlist.ExtendPlaylistInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Player_Extend_Playlist_ExtendPlaylistInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Player_Extend_Playlist_ExtendPlaylistInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Player_Extend_Playlist.ExtendPlaylistInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Player_Extend_Playlist.ExtendPlaylistInfo)
    MergeFrom(*source);
  }
}

void Value_Player_Extend_Playlist_ExtendPlaylistInfo::MergeFrom(const Value_Player_Extend_Playlist_ExtendPlaylistInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Player_Extend_Playlist.ExtendPlaylistInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.bextendplaylist() != 0) {
    set_bextendplaylist(from.bextendplaylist());
  }
}

void Value_Player_Extend_Playlist_ExtendPlaylistInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Player_Extend_Playlist.ExtendPlaylistInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Player_Extend_Playlist_ExtendPlaylistInfo::CopyFrom(const Value_Player_Extend_Playlist_ExtendPlaylistInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Player_Extend_Playlist.ExtendPlaylistInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Player_Extend_Playlist_ExtendPlaylistInfo::IsInitialized() const {
  return true;
}

void Value_Player_Extend_Playlist_ExtendPlaylistInfo::Swap(Value_Player_Extend_Playlist_ExtendPlaylistInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Player_Extend_Playlist_ExtendPlaylistInfo::InternalSwap(Value_Player_Extend_Playlist_ExtendPlaylistInfo* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(bextendplaylist_, other->bextendplaylist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Player_Extend_Playlist_ExtendPlaylistInfo::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Player_Extend_Playlist::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Player_Extend_Playlist::kCountFieldNumber;
const int Value_Player_Extend_Playlist::kExtendPlaylistInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Player_Extend_Playlist::Value_Player_Extend_Playlist()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Extend_Playlist.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Player_Extend_Playlist)
}
Value_Player_Extend_Playlist::Value_Player_Extend_Playlist(const Value_Player_Extend_Playlist& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extendplaylistinfo_(from.extendplaylistinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Player_Extend_Playlist)
}

void Value_Player_Extend_Playlist::SharedCtor() {
  count_ = 0u;
}

Value_Player_Extend_Playlist::~Value_Player_Extend_Playlist() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Player_Extend_Playlist)
  SharedDtor();
}

void Value_Player_Extend_Playlist::SharedDtor() {
}

void Value_Player_Extend_Playlist::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Player_Extend_Playlist::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Player_Extend_Playlist& Value_Player_Extend_Playlist::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Player_Extend_Playlist.base);
  return *internal_default_instance();
}


void Value_Player_Extend_Playlist::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Player_Extend_Playlist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extendplaylistinfo_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_Player_Extend_Playlist::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Player_Extend_Playlist)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_Player_Extend_Playlist.ExtendPlaylistInfo extendPlaylistInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extendplaylistinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Player_Extend_Playlist)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Player_Extend_Playlist)
  return false;
#undef DO_
}

void Value_Player_Extend_Playlist::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Player_Extend_Playlist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_Player_Extend_Playlist.ExtendPlaylistInfo extendPlaylistInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extendplaylistinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extendplaylistinfo(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Player_Extend_Playlist)
}

::google::protobuf::uint8* Value_Player_Extend_Playlist::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Player_Extend_Playlist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_Player_Extend_Playlist.ExtendPlaylistInfo extendPlaylistInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extendplaylistinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extendplaylistinfo(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Player_Extend_Playlist)
  return target;
}

size_t Value_Player_Extend_Playlist::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Player_Extend_Playlist)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_Player_Extend_Playlist.ExtendPlaylistInfo extendPlaylistInfo = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extendplaylistinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extendplaylistinfo(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Player_Extend_Playlist::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Player_Extend_Playlist)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Player_Extend_Playlist* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Player_Extend_Playlist>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Player_Extend_Playlist)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Player_Extend_Playlist)
    MergeFrom(*source);
  }
}

void Value_Player_Extend_Playlist::MergeFrom(const Value_Player_Extend_Playlist& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Player_Extend_Playlist)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extendplaylistinfo_.MergeFrom(from.extendplaylistinfo_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_Player_Extend_Playlist::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Player_Extend_Playlist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Player_Extend_Playlist::CopyFrom(const Value_Player_Extend_Playlist& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Player_Extend_Playlist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Player_Extend_Playlist::IsInitialized() const {
  return true;
}

void Value_Player_Extend_Playlist::Swap(Value_Player_Extend_Playlist* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Player_Extend_Playlist::InternalSwap(Value_Player_Extend_Playlist* other) {
  using std::swap;
  CastToBase(&extendplaylistinfo_)->InternalSwap(CastToBase(&other->extendplaylistinfo_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Player_Extend_Playlist::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Player_Limit_In_Out_LimitInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Player_Limit_In_Out_LimitInfo::kIdFieldNumber;
const int Value_Player_Limit_In_Out_LimitInfo::kIsLimitInRelativeFieldNumber;
const int Value_Player_Limit_In_Out_LimitInfo::kIsLimitOutRelativeFieldNumber;
const int Value_Player_Limit_In_Out_LimitInfo::kLimitInFieldNumber;
const int Value_Player_Limit_In_Out_LimitInfo::kLimitOutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Player_Limit_In_Out_LimitInfo::Value_Player_Limit_In_Out_LimitInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Limit_In_Out_LimitInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Player_Limit_In_Out.LimitInfo)
}
Value_Player_Limit_In_Out_LimitInfo::Value_Player_Limit_In_Out_LimitInfo(const Value_Player_Limit_In_Out_LimitInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&limitout_) -
    reinterpret_cast<char*>(&id_)) + sizeof(limitout_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Player_Limit_In_Out.LimitInfo)
}

void Value_Player_Limit_In_Out_LimitInfo::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limitout_) -
      reinterpret_cast<char*>(&id_)) + sizeof(limitout_));
}

Value_Player_Limit_In_Out_LimitInfo::~Value_Player_Limit_In_Out_LimitInfo() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Player_Limit_In_Out.LimitInfo)
  SharedDtor();
}

void Value_Player_Limit_In_Out_LimitInfo::SharedDtor() {
}

void Value_Player_Limit_In_Out_LimitInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Player_Limit_In_Out_LimitInfo::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Player_Limit_In_Out_LimitInfo& Value_Player_Limit_In_Out_LimitInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Player_Limit_In_Out_LimitInfo.base);
  return *internal_default_instance();
}


void Value_Player_Limit_In_Out_LimitInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Player_Limit_In_Out.LimitInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limitout_) -
      reinterpret_cast<char*>(&id_)) + sizeof(limitout_));
  _internal_metadata_.Clear();
}

bool Value_Player_Limit_In_Out_LimitInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Player_Limit_In_Out.LimitInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.CnlID id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_id(static_cast< ::GoogleProtoBB::CnlID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isLimitInRelative = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &islimitinrelative_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isLimitOutRelative = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &islimitoutrelative_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 limitIn = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &limitin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 limitOut = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &limitout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Player_Limit_In_Out.LimitInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Player_Limit_In_Out.LimitInfo)
  return false;
#undef DO_
}

void Value_Player_Limit_In_Out_LimitInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Player_Limit_In_Out.LimitInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->id(), output);
  }

  // bool isLimitInRelative = 2;
  if (this->islimitinrelative() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->islimitinrelative(), output);
  }

  // bool isLimitOutRelative = 3;
  if (this->islimitoutrelative() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->islimitoutrelative(), output);
  }

  // uint64 limitIn = 4;
  if (this->limitin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->limitin(), output);
  }

  // uint64 limitOut = 5;
  if (this->limitout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->limitout(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Player_Limit_In_Out.LimitInfo)
}

::google::protobuf::uint8* Value_Player_Limit_In_Out_LimitInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Player_Limit_In_Out.LimitInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->id(), target);
  }

  // bool isLimitInRelative = 2;
  if (this->islimitinrelative() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->islimitinrelative(), target);
  }

  // bool isLimitOutRelative = 3;
  if (this->islimitoutrelative() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->islimitoutrelative(), target);
  }

  // uint64 limitIn = 4;
  if (this->limitin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->limitin(), target);
  }

  // uint64 limitOut = 5;
  if (this->limitout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->limitout(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Player_Limit_In_Out.LimitInfo)
  return target;
}

size_t Value_Player_Limit_In_Out_LimitInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Player_Limit_In_Out.LimitInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }

  // bool isLimitInRelative = 2;
  if (this->islimitinrelative() != 0) {
    total_size += 1 + 1;
  }

  // bool isLimitOutRelative = 3;
  if (this->islimitoutrelative() != 0) {
    total_size += 1 + 1;
  }

  // uint64 limitIn = 4;
  if (this->limitin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->limitin());
  }

  // uint64 limitOut = 5;
  if (this->limitout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->limitout());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Player_Limit_In_Out_LimitInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Player_Limit_In_Out.LimitInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Player_Limit_In_Out_LimitInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Player_Limit_In_Out_LimitInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Player_Limit_In_Out.LimitInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Player_Limit_In_Out.LimitInfo)
    MergeFrom(*source);
  }
}

void Value_Player_Limit_In_Out_LimitInfo::MergeFrom(const Value_Player_Limit_In_Out_LimitInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Player_Limit_In_Out.LimitInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.islimitinrelative() != 0) {
    set_islimitinrelative(from.islimitinrelative());
  }
  if (from.islimitoutrelative() != 0) {
    set_islimitoutrelative(from.islimitoutrelative());
  }
  if (from.limitin() != 0) {
    set_limitin(from.limitin());
  }
  if (from.limitout() != 0) {
    set_limitout(from.limitout());
  }
}

void Value_Player_Limit_In_Out_LimitInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Player_Limit_In_Out.LimitInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Player_Limit_In_Out_LimitInfo::CopyFrom(const Value_Player_Limit_In_Out_LimitInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Player_Limit_In_Out.LimitInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Player_Limit_In_Out_LimitInfo::IsInitialized() const {
  return true;
}

void Value_Player_Limit_In_Out_LimitInfo::Swap(Value_Player_Limit_In_Out_LimitInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Player_Limit_In_Out_LimitInfo::InternalSwap(Value_Player_Limit_In_Out_LimitInfo* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(islimitinrelative_, other->islimitinrelative_);
  swap(islimitoutrelative_, other->islimitoutrelative_);
  swap(limitin_, other->limitin_);
  swap(limitout_, other->limitout_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Player_Limit_In_Out_LimitInfo::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Player_Limit_In_Out::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Player_Limit_In_Out::kCountFieldNumber;
const int Value_Player_Limit_In_Out::kLimitInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Player_Limit_In_Out::Value_Player_Limit_In_Out()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Limit_In_Out.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Player_Limit_In_Out)
}
Value_Player_Limit_In_Out::Value_Player_Limit_In_Out(const Value_Player_Limit_In_Out& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      limitinfo_(from.limitinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Player_Limit_In_Out)
}

void Value_Player_Limit_In_Out::SharedCtor() {
  count_ = 0u;
}

Value_Player_Limit_In_Out::~Value_Player_Limit_In_Out() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Player_Limit_In_Out)
  SharedDtor();
}

void Value_Player_Limit_In_Out::SharedDtor() {
}

void Value_Player_Limit_In_Out::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Player_Limit_In_Out::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Player_Limit_In_Out& Value_Player_Limit_In_Out::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Player_Limit_In_Out.base);
  return *internal_default_instance();
}


void Value_Player_Limit_In_Out::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Player_Limit_In_Out)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  limitinfo_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_Player_Limit_In_Out::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Player_Limit_In_Out)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_Player_Limit_In_Out.LimitInfo limitInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_limitinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Player_Limit_In_Out)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Player_Limit_In_Out)
  return false;
#undef DO_
}

void Value_Player_Limit_In_Out::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Player_Limit_In_Out)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_Player_Limit_In_Out.LimitInfo limitInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->limitinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->limitinfo(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Player_Limit_In_Out)
}

::google::protobuf::uint8* Value_Player_Limit_In_Out::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Player_Limit_In_Out)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_Player_Limit_In_Out.LimitInfo limitInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->limitinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->limitinfo(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Player_Limit_In_Out)
  return target;
}

size_t Value_Player_Limit_In_Out::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Player_Limit_In_Out)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_Player_Limit_In_Out.LimitInfo limitInfo = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->limitinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->limitinfo(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Player_Limit_In_Out::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Player_Limit_In_Out)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Player_Limit_In_Out* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Player_Limit_In_Out>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Player_Limit_In_Out)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Player_Limit_In_Out)
    MergeFrom(*source);
  }
}

void Value_Player_Limit_In_Out::MergeFrom(const Value_Player_Limit_In_Out& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Player_Limit_In_Out)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  limitinfo_.MergeFrom(from.limitinfo_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_Player_Limit_In_Out::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Player_Limit_In_Out)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Player_Limit_In_Out::CopyFrom(const Value_Player_Limit_In_Out& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Player_Limit_In_Out)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Player_Limit_In_Out::IsInitialized() const {
  return true;
}

void Value_Player_Limit_In_Out::Swap(Value_Player_Limit_In_Out* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Player_Limit_In_Out::InternalSwap(Value_Player_Limit_In_Out* other) {
  using std::swap;
  CastToBase(&limitinfo_)->InternalSwap(CastToBase(&other->limitinfo_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Player_Limit_In_Out::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Player_Loop_Mode_LoopModeInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Player_Loop_Mode_LoopModeInfo::kIdFieldNumber;
const int Value_Player_Loop_Mode_LoopModeInfo::kLoopModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Player_Loop_Mode_LoopModeInfo::Value_Player_Loop_Mode_LoopModeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Loop_Mode_LoopModeInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Player_Loop_Mode.LoopModeInfo)
}
Value_Player_Loop_Mode_LoopModeInfo::Value_Player_Loop_Mode_LoopModeInfo(const Value_Player_Loop_Mode_LoopModeInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&loopmode_) -
    reinterpret_cast<char*>(&id_)) + sizeof(loopmode_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Player_Loop_Mode.LoopModeInfo)
}

void Value_Player_Loop_Mode_LoopModeInfo::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loopmode_) -
      reinterpret_cast<char*>(&id_)) + sizeof(loopmode_));
}

Value_Player_Loop_Mode_LoopModeInfo::~Value_Player_Loop_Mode_LoopModeInfo() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Player_Loop_Mode.LoopModeInfo)
  SharedDtor();
}

void Value_Player_Loop_Mode_LoopModeInfo::SharedDtor() {
}

void Value_Player_Loop_Mode_LoopModeInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Player_Loop_Mode_LoopModeInfo::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Player_Loop_Mode_LoopModeInfo& Value_Player_Loop_Mode_LoopModeInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Player_Loop_Mode_LoopModeInfo.base);
  return *internal_default_instance();
}


void Value_Player_Loop_Mode_LoopModeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Player_Loop_Mode.LoopModeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loopmode_) -
      reinterpret_cast<char*>(&id_)) + sizeof(loopmode_));
  _internal_metadata_.Clear();
}

bool Value_Player_Loop_Mode_LoopModeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Player_Loop_Mode.LoopModeInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.CnlID id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_id(static_cast< ::GoogleProtoBB::CnlID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_Player_Loop_Mode.PlayerLoopMode loopMode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_loopmode(static_cast< ::GoogleProtoBB::Value_Player_Loop_Mode_PlayerLoopMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Player_Loop_Mode.LoopModeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Player_Loop_Mode.LoopModeInfo)
  return false;
#undef DO_
}

void Value_Player_Loop_Mode_LoopModeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Player_Loop_Mode.LoopModeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->id(), output);
  }

  // .GoogleProtoBB.Value_Player_Loop_Mode.PlayerLoopMode loopMode = 2;
  if (this->loopmode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->loopmode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Player_Loop_Mode.LoopModeInfo)
}

::google::protobuf::uint8* Value_Player_Loop_Mode_LoopModeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Player_Loop_Mode.LoopModeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->id(), target);
  }

  // .GoogleProtoBB.Value_Player_Loop_Mode.PlayerLoopMode loopMode = 2;
  if (this->loopmode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->loopmode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Player_Loop_Mode.LoopModeInfo)
  return target;
}

size_t Value_Player_Loop_Mode_LoopModeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Player_Loop_Mode.LoopModeInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }

  // .GoogleProtoBB.Value_Player_Loop_Mode.PlayerLoopMode loopMode = 2;
  if (this->loopmode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->loopmode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Player_Loop_Mode_LoopModeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Player_Loop_Mode.LoopModeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Player_Loop_Mode_LoopModeInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Player_Loop_Mode_LoopModeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Player_Loop_Mode.LoopModeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Player_Loop_Mode.LoopModeInfo)
    MergeFrom(*source);
  }
}

void Value_Player_Loop_Mode_LoopModeInfo::MergeFrom(const Value_Player_Loop_Mode_LoopModeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Player_Loop_Mode.LoopModeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.loopmode() != 0) {
    set_loopmode(from.loopmode());
  }
}

void Value_Player_Loop_Mode_LoopModeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Player_Loop_Mode.LoopModeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Player_Loop_Mode_LoopModeInfo::CopyFrom(const Value_Player_Loop_Mode_LoopModeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Player_Loop_Mode.LoopModeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Player_Loop_Mode_LoopModeInfo::IsInitialized() const {
  return true;
}

void Value_Player_Loop_Mode_LoopModeInfo::Swap(Value_Player_Loop_Mode_LoopModeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Player_Loop_Mode_LoopModeInfo::InternalSwap(Value_Player_Loop_Mode_LoopModeInfo* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(loopmode_, other->loopmode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Player_Loop_Mode_LoopModeInfo::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Player_Loop_Mode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Player_Loop_Mode::kCountFieldNumber;
const int Value_Player_Loop_Mode::kLoopModeInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Player_Loop_Mode::Value_Player_Loop_Mode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Loop_Mode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Player_Loop_Mode)
}
Value_Player_Loop_Mode::Value_Player_Loop_Mode(const Value_Player_Loop_Mode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      loopmodeinfo_(from.loopmodeinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Player_Loop_Mode)
}

void Value_Player_Loop_Mode::SharedCtor() {
  count_ = 0u;
}

Value_Player_Loop_Mode::~Value_Player_Loop_Mode() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Player_Loop_Mode)
  SharedDtor();
}

void Value_Player_Loop_Mode::SharedDtor() {
}

void Value_Player_Loop_Mode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Player_Loop_Mode::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Player_Loop_Mode& Value_Player_Loop_Mode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Player_Loop_Mode.base);
  return *internal_default_instance();
}


void Value_Player_Loop_Mode::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Player_Loop_Mode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  loopmodeinfo_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_Player_Loop_Mode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Player_Loop_Mode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_Player_Loop_Mode.LoopModeInfo loopModeInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_loopmodeinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Player_Loop_Mode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Player_Loop_Mode)
  return false;
#undef DO_
}

void Value_Player_Loop_Mode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Player_Loop_Mode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_Player_Loop_Mode.LoopModeInfo loopModeInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->loopmodeinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->loopmodeinfo(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Player_Loop_Mode)
}

::google::protobuf::uint8* Value_Player_Loop_Mode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Player_Loop_Mode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_Player_Loop_Mode.LoopModeInfo loopModeInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->loopmodeinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->loopmodeinfo(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Player_Loop_Mode)
  return target;
}

size_t Value_Player_Loop_Mode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Player_Loop_Mode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_Player_Loop_Mode.LoopModeInfo loopModeInfo = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->loopmodeinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->loopmodeinfo(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Player_Loop_Mode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Player_Loop_Mode)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Player_Loop_Mode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Player_Loop_Mode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Player_Loop_Mode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Player_Loop_Mode)
    MergeFrom(*source);
  }
}

void Value_Player_Loop_Mode::MergeFrom(const Value_Player_Loop_Mode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Player_Loop_Mode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  loopmodeinfo_.MergeFrom(from.loopmodeinfo_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_Player_Loop_Mode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Player_Loop_Mode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Player_Loop_Mode::CopyFrom(const Value_Player_Loop_Mode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Player_Loop_Mode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Player_Loop_Mode::IsInitialized() const {
  return true;
}

void Value_Player_Loop_Mode::Swap(Value_Player_Loop_Mode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Player_Loop_Mode::InternalSwap(Value_Player_Loop_Mode* other) {
  using std::swap;
  CastToBase(&loopmodeinfo_)->InternalSwap(CastToBase(&other->loopmodeinfo_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Player_Loop_Mode::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Player_Loop_Count_LoopCountInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Player_Loop_Count_LoopCountInfo::kIdFieldNumber;
const int Value_Player_Loop_Count_LoopCountInfo::kLoopCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Player_Loop_Count_LoopCountInfo::Value_Player_Loop_Count_LoopCountInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Loop_Count_LoopCountInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Player_Loop_Count.LoopCountInfo)
}
Value_Player_Loop_Count_LoopCountInfo::Value_Player_Loop_Count_LoopCountInfo(const Value_Player_Loop_Count_LoopCountInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&loopcount_) -
    reinterpret_cast<char*>(&id_)) + sizeof(loopcount_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Player_Loop_Count.LoopCountInfo)
}

void Value_Player_Loop_Count_LoopCountInfo::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loopcount_) -
      reinterpret_cast<char*>(&id_)) + sizeof(loopcount_));
}

Value_Player_Loop_Count_LoopCountInfo::~Value_Player_Loop_Count_LoopCountInfo() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Player_Loop_Count.LoopCountInfo)
  SharedDtor();
}

void Value_Player_Loop_Count_LoopCountInfo::SharedDtor() {
}

void Value_Player_Loop_Count_LoopCountInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Player_Loop_Count_LoopCountInfo::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Player_Loop_Count_LoopCountInfo& Value_Player_Loop_Count_LoopCountInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Player_Loop_Count_LoopCountInfo.base);
  return *internal_default_instance();
}


void Value_Player_Loop_Count_LoopCountInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Player_Loop_Count.LoopCountInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loopcount_) -
      reinterpret_cast<char*>(&id_)) + sizeof(loopcount_));
  _internal_metadata_.Clear();
}

bool Value_Player_Loop_Count_LoopCountInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Player_Loop_Count.LoopCountInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.CnlID id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_id(static_cast< ::GoogleProtoBB::CnlID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 loopCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &loopcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Player_Loop_Count.LoopCountInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Player_Loop_Count.LoopCountInfo)
  return false;
#undef DO_
}

void Value_Player_Loop_Count_LoopCountInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Player_Loop_Count.LoopCountInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->id(), output);
  }

  // uint32 loopCount = 2;
  if (this->loopcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->loopcount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Player_Loop_Count.LoopCountInfo)
}

::google::protobuf::uint8* Value_Player_Loop_Count_LoopCountInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Player_Loop_Count.LoopCountInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->id(), target);
  }

  // uint32 loopCount = 2;
  if (this->loopcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->loopcount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Player_Loop_Count.LoopCountInfo)
  return target;
}

size_t Value_Player_Loop_Count_LoopCountInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Player_Loop_Count.LoopCountInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }

  // uint32 loopCount = 2;
  if (this->loopcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->loopcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Player_Loop_Count_LoopCountInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Player_Loop_Count.LoopCountInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Player_Loop_Count_LoopCountInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Player_Loop_Count_LoopCountInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Player_Loop_Count.LoopCountInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Player_Loop_Count.LoopCountInfo)
    MergeFrom(*source);
  }
}

void Value_Player_Loop_Count_LoopCountInfo::MergeFrom(const Value_Player_Loop_Count_LoopCountInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Player_Loop_Count.LoopCountInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.loopcount() != 0) {
    set_loopcount(from.loopcount());
  }
}

void Value_Player_Loop_Count_LoopCountInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Player_Loop_Count.LoopCountInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Player_Loop_Count_LoopCountInfo::CopyFrom(const Value_Player_Loop_Count_LoopCountInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Player_Loop_Count.LoopCountInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Player_Loop_Count_LoopCountInfo::IsInitialized() const {
  return true;
}

void Value_Player_Loop_Count_LoopCountInfo::Swap(Value_Player_Loop_Count_LoopCountInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Player_Loop_Count_LoopCountInfo::InternalSwap(Value_Player_Loop_Count_LoopCountInfo* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(loopcount_, other->loopcount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Player_Loop_Count_LoopCountInfo::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Player_Loop_Count::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Player_Loop_Count::kCountFieldNumber;
const int Value_Player_Loop_Count::kLoopCountInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Player_Loop_Count::Value_Player_Loop_Count()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Loop_Count.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Player_Loop_Count)
}
Value_Player_Loop_Count::Value_Player_Loop_Count(const Value_Player_Loop_Count& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      loopcountinfo_(from.loopcountinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Player_Loop_Count)
}

void Value_Player_Loop_Count::SharedCtor() {
  count_ = 0u;
}

Value_Player_Loop_Count::~Value_Player_Loop_Count() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Player_Loop_Count)
  SharedDtor();
}

void Value_Player_Loop_Count::SharedDtor() {
}

void Value_Player_Loop_Count::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Player_Loop_Count::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Player_Loop_Count& Value_Player_Loop_Count::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Player_Loop_Count.base);
  return *internal_default_instance();
}


void Value_Player_Loop_Count::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Player_Loop_Count)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  loopcountinfo_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_Player_Loop_Count::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Player_Loop_Count)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_Player_Loop_Count.LoopCountInfo loopCountInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_loopcountinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Player_Loop_Count)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Player_Loop_Count)
  return false;
#undef DO_
}

void Value_Player_Loop_Count::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Player_Loop_Count)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_Player_Loop_Count.LoopCountInfo loopCountInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->loopcountinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->loopcountinfo(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Player_Loop_Count)
}

::google::protobuf::uint8* Value_Player_Loop_Count::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Player_Loop_Count)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_Player_Loop_Count.LoopCountInfo loopCountInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->loopcountinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->loopcountinfo(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Player_Loop_Count)
  return target;
}

size_t Value_Player_Loop_Count::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Player_Loop_Count)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_Player_Loop_Count.LoopCountInfo loopCountInfo = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->loopcountinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->loopcountinfo(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Player_Loop_Count::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Player_Loop_Count)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Player_Loop_Count* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Player_Loop_Count>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Player_Loop_Count)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Player_Loop_Count)
    MergeFrom(*source);
  }
}

void Value_Player_Loop_Count::MergeFrom(const Value_Player_Loop_Count& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Player_Loop_Count)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  loopcountinfo_.MergeFrom(from.loopcountinfo_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_Player_Loop_Count::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Player_Loop_Count)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Player_Loop_Count::CopyFrom(const Value_Player_Loop_Count& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Player_Loop_Count)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Player_Loop_Count::IsInitialized() const {
  return true;
}

void Value_Player_Loop_Count::Swap(Value_Player_Loop_Count* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Player_Loop_Count::InternalSwap(Value_Player_Loop_Count* other) {
  using std::swap;
  CastToBase(&loopcountinfo_)->InternalSwap(CastToBase(&other->loopcountinfo_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Player_Loop_Count::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Player_Playlist_ID_PlaylistIDInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Player_Playlist_ID_PlaylistIDInfo::kIdFieldNumber;
const int Value_Player_Playlist_ID_PlaylistIDInfo::kIdSizeFieldNumber;
const int Value_Player_Playlist_ID_PlaylistIDInfo::kPlaylistIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Player_Playlist_ID_PlaylistIDInfo::Value_Player_Playlist_ID_PlaylistIDInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Playlist_ID_PlaylistIDInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Player_Playlist_ID.PlaylistIDInfo)
}
Value_Player_Playlist_ID_PlaylistIDInfo::Value_Player_Playlist_ID_PlaylistIDInfo(const Value_Player_Playlist_ID_PlaylistIDInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playlistid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.playlistid().size() > 0) {
    playlistid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playlistid_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&idsize_) -
    reinterpret_cast<char*>(&id_)) + sizeof(idsize_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Player_Playlist_ID.PlaylistIDInfo)
}

void Value_Player_Playlist_ID_PlaylistIDInfo::SharedCtor() {
  playlistid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&idsize_) -
      reinterpret_cast<char*>(&id_)) + sizeof(idsize_));
}

Value_Player_Playlist_ID_PlaylistIDInfo::~Value_Player_Playlist_ID_PlaylistIDInfo() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Player_Playlist_ID.PlaylistIDInfo)
  SharedDtor();
}

void Value_Player_Playlist_ID_PlaylistIDInfo::SharedDtor() {
  playlistid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Value_Player_Playlist_ID_PlaylistIDInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Player_Playlist_ID_PlaylistIDInfo::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Player_Playlist_ID_PlaylistIDInfo& Value_Player_Playlist_ID_PlaylistIDInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Player_Playlist_ID_PlaylistIDInfo.base);
  return *internal_default_instance();
}


void Value_Player_Playlist_ID_PlaylistIDInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Player_Playlist_ID.PlaylistIDInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playlistid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&idsize_) -
      reinterpret_cast<char*>(&id_)) + sizeof(idsize_));
  _internal_metadata_.Clear();
}

bool Value_Player_Playlist_ID_PlaylistIDInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Player_Playlist_ID.PlaylistIDInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.CnlID id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_id(static_cast< ::GoogleProtoBB::CnlID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 idSize = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &idsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes playlistID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_playlistid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Player_Playlist_ID.PlaylistIDInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Player_Playlist_ID.PlaylistIDInfo)
  return false;
#undef DO_
}

void Value_Player_Playlist_ID_PlaylistIDInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Player_Playlist_ID.PlaylistIDInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->id(), output);
  }

  // uint32 idSize = 2;
  if (this->idsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->idsize(), output);
  }

  // bytes playlistID = 3;
  if (this->playlistid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->playlistid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Player_Playlist_ID.PlaylistIDInfo)
}

::google::protobuf::uint8* Value_Player_Playlist_ID_PlaylistIDInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Player_Playlist_ID.PlaylistIDInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->id(), target);
  }

  // uint32 idSize = 2;
  if (this->idsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->idsize(), target);
  }

  // bytes playlistID = 3;
  if (this->playlistid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->playlistid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Player_Playlist_ID.PlaylistIDInfo)
  return target;
}

size_t Value_Player_Playlist_ID_PlaylistIDInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Player_Playlist_ID.PlaylistIDInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes playlistID = 3;
  if (this->playlistid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->playlistid());
  }

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }

  // uint32 idSize = 2;
  if (this->idsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->idsize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Player_Playlist_ID_PlaylistIDInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Player_Playlist_ID.PlaylistIDInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Player_Playlist_ID_PlaylistIDInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Player_Playlist_ID_PlaylistIDInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Player_Playlist_ID.PlaylistIDInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Player_Playlist_ID.PlaylistIDInfo)
    MergeFrom(*source);
  }
}

void Value_Player_Playlist_ID_PlaylistIDInfo::MergeFrom(const Value_Player_Playlist_ID_PlaylistIDInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Player_Playlist_ID.PlaylistIDInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playlistid().size() > 0) {

    playlistid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playlistid_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.idsize() != 0) {
    set_idsize(from.idsize());
  }
}

void Value_Player_Playlist_ID_PlaylistIDInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Player_Playlist_ID.PlaylistIDInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Player_Playlist_ID_PlaylistIDInfo::CopyFrom(const Value_Player_Playlist_ID_PlaylistIDInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Player_Playlist_ID.PlaylistIDInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Player_Playlist_ID_PlaylistIDInfo::IsInitialized() const {
  return true;
}

void Value_Player_Playlist_ID_PlaylistIDInfo::Swap(Value_Player_Playlist_ID_PlaylistIDInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Player_Playlist_ID_PlaylistIDInfo::InternalSwap(Value_Player_Playlist_ID_PlaylistIDInfo* other) {
  using std::swap;
  playlistid_.Swap(&other->playlistid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(idsize_, other->idsize_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Player_Playlist_ID_PlaylistIDInfo::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Player_Playlist_ID::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Player_Playlist_ID::kCountFieldNumber;
const int Value_Player_Playlist_ID::kPlaylistIDInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Player_Playlist_ID::Value_Player_Playlist_ID()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Playlist_ID.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Player_Playlist_ID)
}
Value_Player_Playlist_ID::Value_Player_Playlist_ID(const Value_Player_Playlist_ID& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      playlistidinfo_(from.playlistidinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Player_Playlist_ID)
}

void Value_Player_Playlist_ID::SharedCtor() {
  count_ = 0u;
}

Value_Player_Playlist_ID::~Value_Player_Playlist_ID() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Player_Playlist_ID)
  SharedDtor();
}

void Value_Player_Playlist_ID::SharedDtor() {
}

void Value_Player_Playlist_ID::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Player_Playlist_ID::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Player_Playlist_ID& Value_Player_Playlist_ID::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Player_Playlist_ID.base);
  return *internal_default_instance();
}


void Value_Player_Playlist_ID::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Player_Playlist_ID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playlistidinfo_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_Player_Playlist_ID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Player_Playlist_ID)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_Player_Playlist_ID.PlaylistIDInfo playlistIDInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_playlistidinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Player_Playlist_ID)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Player_Playlist_ID)
  return false;
#undef DO_
}

void Value_Player_Playlist_ID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Player_Playlist_ID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_Player_Playlist_ID.PlaylistIDInfo playlistIDInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->playlistidinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->playlistidinfo(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Player_Playlist_ID)
}

::google::protobuf::uint8* Value_Player_Playlist_ID::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Player_Playlist_ID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_Player_Playlist_ID.PlaylistIDInfo playlistIDInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->playlistidinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->playlistidinfo(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Player_Playlist_ID)
  return target;
}

size_t Value_Player_Playlist_ID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Player_Playlist_ID)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_Player_Playlist_ID.PlaylistIDInfo playlistIDInfo = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->playlistidinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->playlistidinfo(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Player_Playlist_ID::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Player_Playlist_ID)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Player_Playlist_ID* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Player_Playlist_ID>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Player_Playlist_ID)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Player_Playlist_ID)
    MergeFrom(*source);
  }
}

void Value_Player_Playlist_ID::MergeFrom(const Value_Player_Playlist_ID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Player_Playlist_ID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  playlistidinfo_.MergeFrom(from.playlistidinfo_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_Player_Playlist_ID::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Player_Playlist_ID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Player_Playlist_ID::CopyFrom(const Value_Player_Playlist_ID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Player_Playlist_ID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Player_Playlist_ID::IsInitialized() const {
  return true;
}

void Value_Player_Playlist_ID::Swap(Value_Player_Playlist_ID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Player_Playlist_ID::InternalSwap(Value_Player_Playlist_ID* other) {
  using std::swap;
  CastToBase(&playlistidinfo_)->InternalSwap(CastToBase(&other->playlistidinfo_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Player_Playlist_ID::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Player_Playlist_Element_ID_ElementIDInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Player_Playlist_Element_ID_ElementIDInfo::kIdFieldNumber;
const int Value_Player_Playlist_Element_ID_ElementIDInfo::kIdSizeFieldNumber;
const int Value_Player_Playlist_Element_ID_ElementIDInfo::kElementIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Player_Playlist_Element_ID_ElementIDInfo::Value_Player_Playlist_Element_ID_ElementIDInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Playlist_Element_ID_ElementIDInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Player_Playlist_Element_ID.ElementIDInfo)
}
Value_Player_Playlist_Element_ID_ElementIDInfo::Value_Player_Playlist_Element_ID_ElementIDInfo(const Value_Player_Playlist_Element_ID_ElementIDInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  elementid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.elementid().size() > 0) {
    elementid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.elementid_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&idsize_) -
    reinterpret_cast<char*>(&id_)) + sizeof(idsize_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Player_Playlist_Element_ID.ElementIDInfo)
}

void Value_Player_Playlist_Element_ID_ElementIDInfo::SharedCtor() {
  elementid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&idsize_) -
      reinterpret_cast<char*>(&id_)) + sizeof(idsize_));
}

Value_Player_Playlist_Element_ID_ElementIDInfo::~Value_Player_Playlist_Element_ID_ElementIDInfo() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Player_Playlist_Element_ID.ElementIDInfo)
  SharedDtor();
}

void Value_Player_Playlist_Element_ID_ElementIDInfo::SharedDtor() {
  elementid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Value_Player_Playlist_Element_ID_ElementIDInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Player_Playlist_Element_ID_ElementIDInfo::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Player_Playlist_Element_ID_ElementIDInfo& Value_Player_Playlist_Element_ID_ElementIDInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Player_Playlist_Element_ID_ElementIDInfo.base);
  return *internal_default_instance();
}


void Value_Player_Playlist_Element_ID_ElementIDInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Player_Playlist_Element_ID.ElementIDInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  elementid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&idsize_) -
      reinterpret_cast<char*>(&id_)) + sizeof(idsize_));
  _internal_metadata_.Clear();
}

bool Value_Player_Playlist_Element_ID_ElementIDInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Player_Playlist_Element_ID.ElementIDInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.CnlID id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_id(static_cast< ::GoogleProtoBB::CnlID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 idSize = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &idsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes elementID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_elementid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Player_Playlist_Element_ID.ElementIDInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Player_Playlist_Element_ID.ElementIDInfo)
  return false;
#undef DO_
}

void Value_Player_Playlist_Element_ID_ElementIDInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Player_Playlist_Element_ID.ElementIDInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->id(), output);
  }

  // uint32 idSize = 2;
  if (this->idsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->idsize(), output);
  }

  // bytes elementID = 3;
  if (this->elementid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->elementid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Player_Playlist_Element_ID.ElementIDInfo)
}

::google::protobuf::uint8* Value_Player_Playlist_Element_ID_ElementIDInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Player_Playlist_Element_ID.ElementIDInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->id(), target);
  }

  // uint32 idSize = 2;
  if (this->idsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->idsize(), target);
  }

  // bytes elementID = 3;
  if (this->elementid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->elementid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Player_Playlist_Element_ID.ElementIDInfo)
  return target;
}

size_t Value_Player_Playlist_Element_ID_ElementIDInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Player_Playlist_Element_ID.ElementIDInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes elementID = 3;
  if (this->elementid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->elementid());
  }

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }

  // uint32 idSize = 2;
  if (this->idsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->idsize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Player_Playlist_Element_ID_ElementIDInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Player_Playlist_Element_ID.ElementIDInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Player_Playlist_Element_ID_ElementIDInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Player_Playlist_Element_ID_ElementIDInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Player_Playlist_Element_ID.ElementIDInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Player_Playlist_Element_ID.ElementIDInfo)
    MergeFrom(*source);
  }
}

void Value_Player_Playlist_Element_ID_ElementIDInfo::MergeFrom(const Value_Player_Playlist_Element_ID_ElementIDInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Player_Playlist_Element_ID.ElementIDInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.elementid().size() > 0) {

    elementid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.elementid_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.idsize() != 0) {
    set_idsize(from.idsize());
  }
}

void Value_Player_Playlist_Element_ID_ElementIDInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Player_Playlist_Element_ID.ElementIDInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Player_Playlist_Element_ID_ElementIDInfo::CopyFrom(const Value_Player_Playlist_Element_ID_ElementIDInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Player_Playlist_Element_ID.ElementIDInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Player_Playlist_Element_ID_ElementIDInfo::IsInitialized() const {
  return true;
}

void Value_Player_Playlist_Element_ID_ElementIDInfo::Swap(Value_Player_Playlist_Element_ID_ElementIDInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Player_Playlist_Element_ID_ElementIDInfo::InternalSwap(Value_Player_Playlist_Element_ID_ElementIDInfo* other) {
  using std::swap;
  elementid_.Swap(&other->elementid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(idsize_, other->idsize_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Player_Playlist_Element_ID_ElementIDInfo::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Player_Playlist_Element_ID::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Player_Playlist_Element_ID::kCountFieldNumber;
const int Value_Player_Playlist_Element_ID::kElementIDInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Player_Playlist_Element_ID::Value_Player_Playlist_Element_ID()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Player_Playlist_Element_ID.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Player_Playlist_Element_ID)
}
Value_Player_Playlist_Element_ID::Value_Player_Playlist_Element_ID(const Value_Player_Playlist_Element_ID& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      elementidinfo_(from.elementidinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Player_Playlist_Element_ID)
}

void Value_Player_Playlist_Element_ID::SharedCtor() {
  count_ = 0u;
}

Value_Player_Playlist_Element_ID::~Value_Player_Playlist_Element_ID() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Player_Playlist_Element_ID)
  SharedDtor();
}

void Value_Player_Playlist_Element_ID::SharedDtor() {
}

void Value_Player_Playlist_Element_ID::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Player_Playlist_Element_ID::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Player_Playlist_Element_ID& Value_Player_Playlist_Element_ID::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Player_Playlist_Element_ID.base);
  return *internal_default_instance();
}


void Value_Player_Playlist_Element_ID::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Player_Playlist_Element_ID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  elementidinfo_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_Player_Playlist_Element_ID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Player_Playlist_Element_ID)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_Player_Playlist_Element_ID.ElementIDInfo elementIDInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_elementidinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Player_Playlist_Element_ID)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Player_Playlist_Element_ID)
  return false;
#undef DO_
}

void Value_Player_Playlist_Element_ID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Player_Playlist_Element_ID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_Player_Playlist_Element_ID.ElementIDInfo elementIDInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->elementidinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->elementidinfo(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Player_Playlist_Element_ID)
}

::google::protobuf::uint8* Value_Player_Playlist_Element_ID::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Player_Playlist_Element_ID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_Player_Playlist_Element_ID.ElementIDInfo elementIDInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->elementidinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->elementidinfo(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Player_Playlist_Element_ID)
  return target;
}

size_t Value_Player_Playlist_Element_ID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Player_Playlist_Element_ID)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_Player_Playlist_Element_ID.ElementIDInfo elementIDInfo = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->elementidinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->elementidinfo(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Player_Playlist_Element_ID::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Player_Playlist_Element_ID)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Player_Playlist_Element_ID* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Player_Playlist_Element_ID>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Player_Playlist_Element_ID)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Player_Playlist_Element_ID)
    MergeFrom(*source);
  }
}

void Value_Player_Playlist_Element_ID::MergeFrom(const Value_Player_Playlist_Element_ID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Player_Playlist_Element_ID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  elementidinfo_.MergeFrom(from.elementidinfo_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_Player_Playlist_Element_ID::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Player_Playlist_Element_ID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Player_Playlist_Element_ID::CopyFrom(const Value_Player_Playlist_Element_ID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Player_Playlist_Element_ID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Player_Playlist_Element_ID::IsInitialized() const {
  return true;
}

void Value_Player_Playlist_Element_ID::Swap(Value_Player_Playlist_Element_ID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Player_Playlist_Element_ID::InternalSwap(Value_Player_Playlist_Element_ID* other) {
  using std::swap;
  CastToBase(&elementidinfo_)->InternalSwap(CastToBase(&other->elementidinfo_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Player_Playlist_Element_ID::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_DVE_Mode_DVEModeInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_DVE_Mode_DVEModeInfo::kIdFieldNumber;
const int Value_DVE_Mode_DVEModeInfo::kModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_DVE_Mode_DVEModeInfo::Value_DVE_Mode_DVEModeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_DVE_Mode_DVEModeInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_DVE_Mode.DVEModeInfo)
}
Value_DVE_Mode_DVEModeInfo::Value_DVE_Mode_DVEModeInfo(const Value_DVE_Mode_DVEModeInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&mode_) -
    reinterpret_cast<char*>(&id_)) + sizeof(mode_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_DVE_Mode.DVEModeInfo)
}

void Value_DVE_Mode_DVEModeInfo::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mode_) -
      reinterpret_cast<char*>(&id_)) + sizeof(mode_));
}

Value_DVE_Mode_DVEModeInfo::~Value_DVE_Mode_DVEModeInfo() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_DVE_Mode.DVEModeInfo)
  SharedDtor();
}

void Value_DVE_Mode_DVEModeInfo::SharedDtor() {
}

void Value_DVE_Mode_DVEModeInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_DVE_Mode_DVEModeInfo::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_DVE_Mode_DVEModeInfo& Value_DVE_Mode_DVEModeInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_DVE_Mode_DVEModeInfo.base);
  return *internal_default_instance();
}


void Value_DVE_Mode_DVEModeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_DVE_Mode.DVEModeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mode_) -
      reinterpret_cast<char*>(&id_)) + sizeof(mode_));
  _internal_metadata_.Clear();
}

bool Value_DVE_Mode_DVEModeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_DVE_Mode.DVEModeInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.CnlID id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_id(static_cast< ::GoogleProtoBB::CnlID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_DVE_Mode.DVEMode mode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mode(static_cast< ::GoogleProtoBB::Value_DVE_Mode_DVEMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_DVE_Mode.DVEModeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_DVE_Mode.DVEModeInfo)
  return false;
#undef DO_
}

void Value_DVE_Mode_DVEModeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_DVE_Mode.DVEModeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->id(), output);
  }

  // .GoogleProtoBB.Value_DVE_Mode.DVEMode mode = 2;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->mode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_DVE_Mode.DVEModeInfo)
}

::google::protobuf::uint8* Value_DVE_Mode_DVEModeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_DVE_Mode.DVEModeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->id(), target);
  }

  // .GoogleProtoBB.Value_DVE_Mode.DVEMode mode = 2;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->mode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_DVE_Mode.DVEModeInfo)
  return target;
}

size_t Value_DVE_Mode_DVEModeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_DVE_Mode.DVEModeInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }

  // .GoogleProtoBB.Value_DVE_Mode.DVEMode mode = 2;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_DVE_Mode_DVEModeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_DVE_Mode.DVEModeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_DVE_Mode_DVEModeInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_DVE_Mode_DVEModeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_DVE_Mode.DVEModeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_DVE_Mode.DVEModeInfo)
    MergeFrom(*source);
  }
}

void Value_DVE_Mode_DVEModeInfo::MergeFrom(const Value_DVE_Mode_DVEModeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_DVE_Mode.DVEModeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
}

void Value_DVE_Mode_DVEModeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_DVE_Mode.DVEModeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_DVE_Mode_DVEModeInfo::CopyFrom(const Value_DVE_Mode_DVEModeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_DVE_Mode.DVEModeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_DVE_Mode_DVEModeInfo::IsInitialized() const {
  return true;
}

void Value_DVE_Mode_DVEModeInfo::Swap(Value_DVE_Mode_DVEModeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_DVE_Mode_DVEModeInfo::InternalSwap(Value_DVE_Mode_DVEModeInfo* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(mode_, other->mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_DVE_Mode_DVEModeInfo::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_DVE_Mode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_DVE_Mode::kCountFieldNumber;
const int Value_DVE_Mode::kModeInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_DVE_Mode::Value_DVE_Mode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_DVE_Mode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_DVE_Mode)
}
Value_DVE_Mode::Value_DVE_Mode(const Value_DVE_Mode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      modeinfo_(from.modeinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_DVE_Mode)
}

void Value_DVE_Mode::SharedCtor() {
  count_ = 0u;
}

Value_DVE_Mode::~Value_DVE_Mode() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_DVE_Mode)
  SharedDtor();
}

void Value_DVE_Mode::SharedDtor() {
}

void Value_DVE_Mode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_DVE_Mode::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_DVE_Mode& Value_DVE_Mode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_DVE_Mode.base);
  return *internal_default_instance();
}


void Value_DVE_Mode::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_DVE_Mode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  modeinfo_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_DVE_Mode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_DVE_Mode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_DVE_Mode.DVEModeInfo modeInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_modeinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_DVE_Mode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_DVE_Mode)
  return false;
#undef DO_
}

void Value_DVE_Mode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_DVE_Mode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_DVE_Mode.DVEModeInfo modeInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modeinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->modeinfo(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_DVE_Mode)
}

::google::protobuf::uint8* Value_DVE_Mode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_DVE_Mode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_DVE_Mode.DVEModeInfo modeInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->modeinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->modeinfo(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_DVE_Mode)
  return target;
}

size_t Value_DVE_Mode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_DVE_Mode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_DVE_Mode.DVEModeInfo modeInfo = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->modeinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->modeinfo(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_DVE_Mode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_DVE_Mode)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_DVE_Mode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_DVE_Mode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_DVE_Mode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_DVE_Mode)
    MergeFrom(*source);
  }
}

void Value_DVE_Mode::MergeFrom(const Value_DVE_Mode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_DVE_Mode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  modeinfo_.MergeFrom(from.modeinfo_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_DVE_Mode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_DVE_Mode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_DVE_Mode::CopyFrom(const Value_DVE_Mode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_DVE_Mode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_DVE_Mode::IsInitialized() const {
  return true;
}

void Value_DVE_Mode::Swap(Value_DVE_Mode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_DVE_Mode::InternalSwap(Value_DVE_Mode* other) {
  using std::swap;
  CastToBase(&modeinfo_)->InternalSwap(CastToBase(&other->modeinfo_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_DVE_Mode::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_DVE_Type_DVETypeInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_DVE_Type_DVETypeInfo::kIdFieldNumber;
const int Value_DVE_Type_DVETypeInfo::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_DVE_Type_DVETypeInfo::Value_DVE_Type_DVETypeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_DVE_Type_DVETypeInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_DVE_Type.DVETypeInfo)
}
Value_DVE_Type_DVETypeInfo::Value_DVE_Type_DVETypeInfo(const Value_DVE_Type_DVETypeInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_DVE_Type.DVETypeInfo)
}

void Value_DVE_Type_DVETypeInfo::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
}

Value_DVE_Type_DVETypeInfo::~Value_DVE_Type_DVETypeInfo() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_DVE_Type.DVETypeInfo)
  SharedDtor();
}

void Value_DVE_Type_DVETypeInfo::SharedDtor() {
}

void Value_DVE_Type_DVETypeInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_DVE_Type_DVETypeInfo::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_DVE_Type_DVETypeInfo& Value_DVE_Type_DVETypeInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_DVE_Type_DVETypeInfo.base);
  return *internal_default_instance();
}


void Value_DVE_Type_DVETypeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_DVE_Type.DVETypeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool Value_DVE_Type_DVETypeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_DVE_Type.DVETypeInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.CnlID id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_id(static_cast< ::GoogleProtoBB::CnlID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_DVE_Type.DVEType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::GoogleProtoBB::Value_DVE_Type_DVEType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_DVE_Type.DVETypeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_DVE_Type.DVETypeInfo)
  return false;
#undef DO_
}

void Value_DVE_Type_DVETypeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_DVE_Type.DVETypeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->id(), output);
  }

  // .GoogleProtoBB.Value_DVE_Type.DVEType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_DVE_Type.DVETypeInfo)
}

::google::protobuf::uint8* Value_DVE_Type_DVETypeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_DVE_Type.DVETypeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->id(), target);
  }

  // .GoogleProtoBB.Value_DVE_Type.DVEType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_DVE_Type.DVETypeInfo)
  return target;
}

size_t Value_DVE_Type_DVETypeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_DVE_Type.DVETypeInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }

  // .GoogleProtoBB.Value_DVE_Type.DVEType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_DVE_Type_DVETypeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_DVE_Type.DVETypeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_DVE_Type_DVETypeInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_DVE_Type_DVETypeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_DVE_Type.DVETypeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_DVE_Type.DVETypeInfo)
    MergeFrom(*source);
  }
}

void Value_DVE_Type_DVETypeInfo::MergeFrom(const Value_DVE_Type_DVETypeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_DVE_Type.DVETypeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Value_DVE_Type_DVETypeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_DVE_Type.DVETypeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_DVE_Type_DVETypeInfo::CopyFrom(const Value_DVE_Type_DVETypeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_DVE_Type.DVETypeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_DVE_Type_DVETypeInfo::IsInitialized() const {
  return true;
}

void Value_DVE_Type_DVETypeInfo::Swap(Value_DVE_Type_DVETypeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_DVE_Type_DVETypeInfo::InternalSwap(Value_DVE_Type_DVETypeInfo* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_DVE_Type_DVETypeInfo::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_DVE_Type::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_DVE_Type::kCountFieldNumber;
const int Value_DVE_Type::kTypeInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_DVE_Type::Value_DVE_Type()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_DVE_Type.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_DVE_Type)
}
Value_DVE_Type::Value_DVE_Type(const Value_DVE_Type& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      typeinfo_(from.typeinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_DVE_Type)
}

void Value_DVE_Type::SharedCtor() {
  count_ = 0u;
}

Value_DVE_Type::~Value_DVE_Type() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_DVE_Type)
  SharedDtor();
}

void Value_DVE_Type::SharedDtor() {
}

void Value_DVE_Type::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_DVE_Type::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_DVE_Type& Value_DVE_Type::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_DVE_Type.base);
  return *internal_default_instance();
}


void Value_DVE_Type::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_DVE_Type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  typeinfo_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_DVE_Type::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_DVE_Type)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_DVE_Type.DVETypeInfo typeInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_typeinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_DVE_Type)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_DVE_Type)
  return false;
#undef DO_
}

void Value_DVE_Type::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_DVE_Type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_DVE_Type.DVETypeInfo typeInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->typeinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->typeinfo(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_DVE_Type)
}

::google::protobuf::uint8* Value_DVE_Type::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_DVE_Type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_DVE_Type.DVETypeInfo typeInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->typeinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->typeinfo(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_DVE_Type)
  return target;
}

size_t Value_DVE_Type::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_DVE_Type)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_DVE_Type.DVETypeInfo typeInfo = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->typeinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->typeinfo(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_DVE_Type::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_DVE_Type)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_DVE_Type* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_DVE_Type>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_DVE_Type)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_DVE_Type)
    MergeFrom(*source);
  }
}

void Value_DVE_Type::MergeFrom(const Value_DVE_Type& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_DVE_Type)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  typeinfo_.MergeFrom(from.typeinfo_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_DVE_Type::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_DVE_Type)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_DVE_Type::CopyFrom(const Value_DVE_Type& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_DVE_Type)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_DVE_Type::IsInitialized() const {
  return true;
}

void Value_DVE_Type::Swap(Value_DVE_Type* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_DVE_Type::InternalSwap(Value_DVE_Type* other) {
  using std::swap;
  CastToBase(&typeinfo_)->InternalSwap(CastToBase(&other->typeinfo_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_DVE_Type::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_DVE_Channel::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_DVE_Channel::kCountFieldNumber;
const int Value_DVE_Channel::kCnlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_DVE_Channel::Value_DVE_Channel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_DVE_Channel.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_DVE_Channel)
}
Value_DVE_Channel::Value_DVE_Channel(const Value_DVE_Channel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      cnl_(from.cnl_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_DVE_Channel)
}

void Value_DVE_Channel::SharedCtor() {
  count_ = 0u;
}

Value_DVE_Channel::~Value_DVE_Channel() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_DVE_Channel)
  SharedDtor();
}

void Value_DVE_Channel::SharedDtor() {
}

void Value_DVE_Channel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_DVE_Channel::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_DVE_Channel& Value_DVE_Channel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_DVE_Channel.base);
  return *internal_default_instance();
}


void Value_DVE_Channel::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_DVE_Channel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cnl_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_DVE_Channel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_DVE_Channel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.CnlID cnl = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_cnl(static_cast< ::GoogleProtoBB::CnlID >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_cnl(static_cast< ::GoogleProtoBB::CnlID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_DVE_Channel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_DVE_Channel)
  return false;
#undef DO_
}

void Value_DVE_Channel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_DVE_Channel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.CnlID cnl = 2;
  if (this->cnl_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_cnl_cached_byte_size_));
  }
  for (int i = 0, n = this->cnl_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->cnl(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_DVE_Channel)
}

::google::protobuf::uint8* Value_DVE_Channel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_DVE_Channel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.CnlID cnl = 2;
  if (this->cnl_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _cnl_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->cnl_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_DVE_Channel)
  return target;
}

size_t Value_DVE_Channel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_DVE_Channel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.CnlID cnl = 2;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->cnl_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->cnl(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cnl_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_DVE_Channel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_DVE_Channel)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_DVE_Channel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_DVE_Channel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_DVE_Channel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_DVE_Channel)
    MergeFrom(*source);
  }
}

void Value_DVE_Channel::MergeFrom(const Value_DVE_Channel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_DVE_Channel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cnl_.MergeFrom(from.cnl_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_DVE_Channel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_DVE_Channel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_DVE_Channel::CopyFrom(const Value_DVE_Channel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_DVE_Channel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_DVE_Channel::IsInitialized() const {
  return true;
}

void Value_DVE_Channel::Swap(Value_DVE_Channel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_DVE_Channel::InternalSwap(Value_DVE_Channel* other) {
  using std::swap;
  cnl_.InternalSwap(&other->cnl_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_DVE_Channel::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_DVE_Num_DVENumInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_DVE_Num_DVENumInfo::kIdFieldNumber;
const int Value_DVE_Num_DVENumInfo::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_DVE_Num_DVENumInfo::Value_DVE_Num_DVENumInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_DVE_Num_DVENumInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_DVE_Num.DVENumInfo)
}
Value_DVE_Num_DVENumInfo::Value_DVE_Num_DVENumInfo(const Value_DVE_Num_DVENumInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&id_)) + sizeof(num_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_DVE_Num.DVENumInfo)
}

void Value_DVE_Num_DVENumInfo::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&id_)) + sizeof(num_));
}

Value_DVE_Num_DVENumInfo::~Value_DVE_Num_DVENumInfo() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_DVE_Num.DVENumInfo)
  SharedDtor();
}

void Value_DVE_Num_DVENumInfo::SharedDtor() {
}

void Value_DVE_Num_DVENumInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_DVE_Num_DVENumInfo::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_DVE_Num_DVENumInfo& Value_DVE_Num_DVENumInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_DVE_Num_DVENumInfo.base);
  return *internal_default_instance();
}


void Value_DVE_Num_DVENumInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_DVE_Num.DVENumInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&id_)) + sizeof(num_));
  _internal_metadata_.Clear();
}

bool Value_DVE_Num_DVENumInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_DVE_Num.DVENumInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.CnlID id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_id(static_cast< ::GoogleProtoBB::CnlID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_DVE_Num.DVENumInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_DVE_Num.DVENumInfo)
  return false;
#undef DO_
}

void Value_DVE_Num_DVENumInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_DVE_Num.DVENumInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->id(), output);
  }

  // int32 num = 2;
  if (this->num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_DVE_Num.DVENumInfo)
}

::google::protobuf::uint8* Value_DVE_Num_DVENumInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_DVE_Num.DVENumInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->id(), target);
  }

  // int32 num = 2;
  if (this->num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_DVE_Num.DVENumInfo)
  return target;
}

size_t Value_DVE_Num_DVENumInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_DVE_Num.DVENumInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }

  // int32 num = 2;
  if (this->num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_DVE_Num_DVENumInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_DVE_Num.DVENumInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_DVE_Num_DVENumInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_DVE_Num_DVENumInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_DVE_Num.DVENumInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_DVE_Num.DVENumInfo)
    MergeFrom(*source);
  }
}

void Value_DVE_Num_DVENumInfo::MergeFrom(const Value_DVE_Num_DVENumInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_DVE_Num.DVENumInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.num() != 0) {
    set_num(from.num());
  }
}

void Value_DVE_Num_DVENumInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_DVE_Num.DVENumInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_DVE_Num_DVENumInfo::CopyFrom(const Value_DVE_Num_DVENumInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_DVE_Num.DVENumInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_DVE_Num_DVENumInfo::IsInitialized() const {
  return true;
}

void Value_DVE_Num_DVENumInfo::Swap(Value_DVE_Num_DVENumInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_DVE_Num_DVENumInfo::InternalSwap(Value_DVE_Num_DVENumInfo* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(num_, other->num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_DVE_Num_DVENumInfo::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_DVE_Num::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_DVE_Num::kCountFieldNumber;
const int Value_DVE_Num::kNumInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_DVE_Num::Value_DVE_Num()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_DVE_Num.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_DVE_Num)
}
Value_DVE_Num::Value_DVE_Num(const Value_DVE_Num& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      numinfo_(from.numinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_DVE_Num)
}

void Value_DVE_Num::SharedCtor() {
  count_ = 0u;
}

Value_DVE_Num::~Value_DVE_Num() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_DVE_Num)
  SharedDtor();
}

void Value_DVE_Num::SharedDtor() {
}

void Value_DVE_Num::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_DVE_Num::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_DVE_Num& Value_DVE_Num::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_DVE_Num.base);
  return *internal_default_instance();
}


void Value_DVE_Num::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_DVE_Num)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  numinfo_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_DVE_Num::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_DVE_Num)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_DVE_Num.DVENumInfo numInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_numinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_DVE_Num)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_DVE_Num)
  return false;
#undef DO_
}

void Value_DVE_Num::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_DVE_Num)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_DVE_Num.DVENumInfo numInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->numinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->numinfo(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_DVE_Num)
}

::google::protobuf::uint8* Value_DVE_Num::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_DVE_Num)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_DVE_Num.DVENumInfo numInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->numinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->numinfo(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_DVE_Num)
  return target;
}

size_t Value_DVE_Num::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_DVE_Num)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_DVE_Num.DVENumInfo numInfo = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->numinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->numinfo(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_DVE_Num::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_DVE_Num)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_DVE_Num* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_DVE_Num>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_DVE_Num)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_DVE_Num)
    MergeFrom(*source);
  }
}

void Value_DVE_Num::MergeFrom(const Value_DVE_Num& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_DVE_Num)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  numinfo_.MergeFrom(from.numinfo_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_DVE_Num::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_DVE_Num)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_DVE_Num::CopyFrom(const Value_DVE_Num& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_DVE_Num)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_DVE_Num::IsInitialized() const {
  return true;
}

void Value_DVE_Num::Swap(Value_DVE_Num* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_DVE_Num::InternalSwap(Value_DVE_Num* other) {
  using std::swap;
  CastToBase(&numinfo_)->InternalSwap(CastToBase(&other->numinfo_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_DVE_Num::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_DVE_Den_DVEDenInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_DVE_Den_DVEDenInfo::kIdFieldNumber;
const int Value_DVE_Den_DVEDenInfo::kDenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_DVE_Den_DVEDenInfo::Value_DVE_Den_DVEDenInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_DVE_Den_DVEDenInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_DVE_Den.DVEDenInfo)
}
Value_DVE_Den_DVEDenInfo::Value_DVE_Den_DVEDenInfo(const Value_DVE_Den_DVEDenInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&den_) -
    reinterpret_cast<char*>(&id_)) + sizeof(den_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_DVE_Den.DVEDenInfo)
}

void Value_DVE_Den_DVEDenInfo::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&den_) -
      reinterpret_cast<char*>(&id_)) + sizeof(den_));
}

Value_DVE_Den_DVEDenInfo::~Value_DVE_Den_DVEDenInfo() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_DVE_Den.DVEDenInfo)
  SharedDtor();
}

void Value_DVE_Den_DVEDenInfo::SharedDtor() {
}

void Value_DVE_Den_DVEDenInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_DVE_Den_DVEDenInfo::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_DVE_Den_DVEDenInfo& Value_DVE_Den_DVEDenInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_DVE_Den_DVEDenInfo.base);
  return *internal_default_instance();
}


void Value_DVE_Den_DVEDenInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_DVE_Den.DVEDenInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&den_) -
      reinterpret_cast<char*>(&id_)) + sizeof(den_));
  _internal_metadata_.Clear();
}

bool Value_DVE_Den_DVEDenInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_DVE_Den.DVEDenInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.CnlID id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_id(static_cast< ::GoogleProtoBB::CnlID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 den = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &den_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_DVE_Den.DVEDenInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_DVE_Den.DVEDenInfo)
  return false;
#undef DO_
}

void Value_DVE_Den_DVEDenInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_DVE_Den.DVEDenInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->id(), output);
  }

  // int32 den = 2;
  if (this->den() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->den(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_DVE_Den.DVEDenInfo)
}

::google::protobuf::uint8* Value_DVE_Den_DVEDenInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_DVE_Den.DVEDenInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->id(), target);
  }

  // int32 den = 2;
  if (this->den() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->den(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_DVE_Den.DVEDenInfo)
  return target;
}

size_t Value_DVE_Den_DVEDenInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_DVE_Den.DVEDenInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }

  // int32 den = 2;
  if (this->den() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->den());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_DVE_Den_DVEDenInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_DVE_Den.DVEDenInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_DVE_Den_DVEDenInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_DVE_Den_DVEDenInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_DVE_Den.DVEDenInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_DVE_Den.DVEDenInfo)
    MergeFrom(*source);
  }
}

void Value_DVE_Den_DVEDenInfo::MergeFrom(const Value_DVE_Den_DVEDenInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_DVE_Den.DVEDenInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.den() != 0) {
    set_den(from.den());
  }
}

void Value_DVE_Den_DVEDenInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_DVE_Den.DVEDenInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_DVE_Den_DVEDenInfo::CopyFrom(const Value_DVE_Den_DVEDenInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_DVE_Den.DVEDenInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_DVE_Den_DVEDenInfo::IsInitialized() const {
  return true;
}

void Value_DVE_Den_DVEDenInfo::Swap(Value_DVE_Den_DVEDenInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_DVE_Den_DVEDenInfo::InternalSwap(Value_DVE_Den_DVEDenInfo* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(den_, other->den_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_DVE_Den_DVEDenInfo::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_DVE_Den::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_DVE_Den::kCountFieldNumber;
const int Value_DVE_Den::kDenInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_DVE_Den::Value_DVE_Den()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_DVE_Den.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_DVE_Den)
}
Value_DVE_Den::Value_DVE_Den(const Value_DVE_Den& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      deninfo_(from.deninfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_DVE_Den)
}

void Value_DVE_Den::SharedCtor() {
  count_ = 0u;
}

Value_DVE_Den::~Value_DVE_Den() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_DVE_Den)
  SharedDtor();
}

void Value_DVE_Den::SharedDtor() {
}

void Value_DVE_Den::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_DVE_Den::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_DVE_Den& Value_DVE_Den::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_DVE_Den.base);
  return *internal_default_instance();
}


void Value_DVE_Den::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_DVE_Den)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  deninfo_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_DVE_Den::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_DVE_Den)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_DVE_Den.DVEDenInfo denInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_deninfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_DVE_Den)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_DVE_Den)
  return false;
#undef DO_
}

void Value_DVE_Den::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_DVE_Den)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_DVE_Den.DVEDenInfo denInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->deninfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->deninfo(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_DVE_Den)
}

::google::protobuf::uint8* Value_DVE_Den::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_DVE_Den)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_DVE_Den.DVEDenInfo denInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->deninfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->deninfo(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_DVE_Den)
  return target;
}

size_t Value_DVE_Den::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_DVE_Den)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_DVE_Den.DVEDenInfo denInfo = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->deninfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->deninfo(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_DVE_Den::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_DVE_Den)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_DVE_Den* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_DVE_Den>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_DVE_Den)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_DVE_Den)
    MergeFrom(*source);
  }
}

void Value_DVE_Den::MergeFrom(const Value_DVE_Den& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_DVE_Den)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  deninfo_.MergeFrom(from.deninfo_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_DVE_Den::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_DVE_Den)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_DVE_Den::CopyFrom(const Value_DVE_Den& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_DVE_Den)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_DVE_Den::IsInitialized() const {
  return true;
}

void Value_DVE_Den::Swap(Value_DVE_Den* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_DVE_Den::InternalSwap(Value_DVE_Den* other) {
  using std::swap;
  CastToBase(&deninfo_)->InternalSwap(CastToBase(&other->deninfo_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_DVE_Den::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_DVE_CutThreshold_DVEThresholdInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_DVE_CutThreshold_DVEThresholdInfo::kIdFieldNumber;
const int Value_DVE_CutThreshold_DVEThresholdInfo::kThresholdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_DVE_CutThreshold_DVEThresholdInfo::Value_DVE_CutThreshold_DVEThresholdInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_DVE_CutThreshold_DVEThresholdInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_DVE_CutThreshold.DVEThresholdInfo)
}
Value_DVE_CutThreshold_DVEThresholdInfo::Value_DVE_CutThreshold_DVEThresholdInfo(const Value_DVE_CutThreshold_DVEThresholdInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&threshold_) -
    reinterpret_cast<char*>(&id_)) + sizeof(threshold_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_DVE_CutThreshold.DVEThresholdInfo)
}

void Value_DVE_CutThreshold_DVEThresholdInfo::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&threshold_) -
      reinterpret_cast<char*>(&id_)) + sizeof(threshold_));
}

Value_DVE_CutThreshold_DVEThresholdInfo::~Value_DVE_CutThreshold_DVEThresholdInfo() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_DVE_CutThreshold.DVEThresholdInfo)
  SharedDtor();
}

void Value_DVE_CutThreshold_DVEThresholdInfo::SharedDtor() {
}

void Value_DVE_CutThreshold_DVEThresholdInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_DVE_CutThreshold_DVEThresholdInfo::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_DVE_CutThreshold_DVEThresholdInfo& Value_DVE_CutThreshold_DVEThresholdInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_DVE_CutThreshold_DVEThresholdInfo.base);
  return *internal_default_instance();
}


void Value_DVE_CutThreshold_DVEThresholdInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_DVE_CutThreshold.DVEThresholdInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&threshold_) -
      reinterpret_cast<char*>(&id_)) + sizeof(threshold_));
  _internal_metadata_.Clear();
}

bool Value_DVE_CutThreshold_DVEThresholdInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_DVE_CutThreshold.DVEThresholdInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.CnlID id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_id(static_cast< ::GoogleProtoBB::CnlID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 threshold = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_DVE_CutThreshold.DVEThresholdInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_DVE_CutThreshold.DVEThresholdInfo)
  return false;
#undef DO_
}

void Value_DVE_CutThreshold_DVEThresholdInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_DVE_CutThreshold.DVEThresholdInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->id(), output);
  }

  // int32 threshold = 2;
  if (this->threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->threshold(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_DVE_CutThreshold.DVEThresholdInfo)
}

::google::protobuf::uint8* Value_DVE_CutThreshold_DVEThresholdInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_DVE_CutThreshold.DVEThresholdInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->id(), target);
  }

  // int32 threshold = 2;
  if (this->threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->threshold(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_DVE_CutThreshold.DVEThresholdInfo)
  return target;
}

size_t Value_DVE_CutThreshold_DVEThresholdInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_DVE_CutThreshold.DVEThresholdInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }

  // int32 threshold = 2;
  if (this->threshold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->threshold());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_DVE_CutThreshold_DVEThresholdInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_DVE_CutThreshold.DVEThresholdInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_DVE_CutThreshold_DVEThresholdInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_DVE_CutThreshold_DVEThresholdInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_DVE_CutThreshold.DVEThresholdInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_DVE_CutThreshold.DVEThresholdInfo)
    MergeFrom(*source);
  }
}

void Value_DVE_CutThreshold_DVEThresholdInfo::MergeFrom(const Value_DVE_CutThreshold_DVEThresholdInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_DVE_CutThreshold.DVEThresholdInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.threshold() != 0) {
    set_threshold(from.threshold());
  }
}

void Value_DVE_CutThreshold_DVEThresholdInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_DVE_CutThreshold.DVEThresholdInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_DVE_CutThreshold_DVEThresholdInfo::CopyFrom(const Value_DVE_CutThreshold_DVEThresholdInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_DVE_CutThreshold.DVEThresholdInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_DVE_CutThreshold_DVEThresholdInfo::IsInitialized() const {
  return true;
}

void Value_DVE_CutThreshold_DVEThresholdInfo::Swap(Value_DVE_CutThreshold_DVEThresholdInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_DVE_CutThreshold_DVEThresholdInfo::InternalSwap(Value_DVE_CutThreshold_DVEThresholdInfo* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(threshold_, other->threshold_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_DVE_CutThreshold_DVEThresholdInfo::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_DVE_CutThreshold::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_DVE_CutThreshold::kCountFieldNumber;
const int Value_DVE_CutThreshold::kThresholdInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_DVE_CutThreshold::Value_DVE_CutThreshold()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_DVE_CutThreshold.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_DVE_CutThreshold)
}
Value_DVE_CutThreshold::Value_DVE_CutThreshold(const Value_DVE_CutThreshold& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      thresholdinfo_(from.thresholdinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_DVE_CutThreshold)
}

void Value_DVE_CutThreshold::SharedCtor() {
  count_ = 0u;
}

Value_DVE_CutThreshold::~Value_DVE_CutThreshold() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_DVE_CutThreshold)
  SharedDtor();
}

void Value_DVE_CutThreshold::SharedDtor() {
}

void Value_DVE_CutThreshold::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_DVE_CutThreshold::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_DVE_CutThreshold& Value_DVE_CutThreshold::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_DVE_CutThreshold.base);
  return *internal_default_instance();
}


void Value_DVE_CutThreshold::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_DVE_CutThreshold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  thresholdinfo_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_DVE_CutThreshold::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_DVE_CutThreshold)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_DVE_CutThreshold.DVEThresholdInfo thresholdInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_thresholdinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_DVE_CutThreshold)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_DVE_CutThreshold)
  return false;
#undef DO_
}

void Value_DVE_CutThreshold::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_DVE_CutThreshold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_DVE_CutThreshold.DVEThresholdInfo thresholdInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->thresholdinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->thresholdinfo(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_DVE_CutThreshold)
}

::google::protobuf::uint8* Value_DVE_CutThreshold::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_DVE_CutThreshold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_DVE_CutThreshold.DVEThresholdInfo thresholdInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->thresholdinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->thresholdinfo(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_DVE_CutThreshold)
  return target;
}

size_t Value_DVE_CutThreshold::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_DVE_CutThreshold)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_DVE_CutThreshold.DVEThresholdInfo thresholdInfo = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->thresholdinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->thresholdinfo(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_DVE_CutThreshold::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_DVE_CutThreshold)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_DVE_CutThreshold* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_DVE_CutThreshold>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_DVE_CutThreshold)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_DVE_CutThreshold)
    MergeFrom(*source);
  }
}

void Value_DVE_CutThreshold::MergeFrom(const Value_DVE_CutThreshold& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_DVE_CutThreshold)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  thresholdinfo_.MergeFrom(from.thresholdinfo_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_DVE_CutThreshold::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_DVE_CutThreshold)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_DVE_CutThreshold::CopyFrom(const Value_DVE_CutThreshold& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_DVE_CutThreshold)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_DVE_CutThreshold::IsInitialized() const {
  return true;
}

void Value_DVE_CutThreshold::Swap(Value_DVE_CutThreshold* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_DVE_CutThreshold::InternalSwap(Value_DVE_CutThreshold* other) {
  using std::swap;
  CastToBase(&thresholdinfo_)->InternalSwap(CastToBase(&other->thresholdinfo_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_DVE_CutThreshold::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_DVE_Custom_Transparency_DVECustomTransparencyInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_DVE_Custom_Transparency_DVECustomTransparencyInfo::kIdFieldNumber;
const int Value_DVE_Custom_Transparency_DVECustomTransparencyInfo::kBCustomFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_DVE_Custom_Transparency_DVECustomTransparencyInfo::Value_DVE_Custom_Transparency_DVECustomTransparencyInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_DVE_Custom_Transparency_DVECustomTransparencyInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_DVE_Custom_Transparency.DVECustomTransparencyInfo)
}
Value_DVE_Custom_Transparency_DVECustomTransparencyInfo::Value_DVE_Custom_Transparency_DVECustomTransparencyInfo(const Value_DVE_Custom_Transparency_DVECustomTransparencyInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&bcustom_) -
    reinterpret_cast<char*>(&id_)) + sizeof(bcustom_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_DVE_Custom_Transparency.DVECustomTransparencyInfo)
}

void Value_DVE_Custom_Transparency_DVECustomTransparencyInfo::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bcustom_) -
      reinterpret_cast<char*>(&id_)) + sizeof(bcustom_));
}

Value_DVE_Custom_Transparency_DVECustomTransparencyInfo::~Value_DVE_Custom_Transparency_DVECustomTransparencyInfo() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_DVE_Custom_Transparency.DVECustomTransparencyInfo)
  SharedDtor();
}

void Value_DVE_Custom_Transparency_DVECustomTransparencyInfo::SharedDtor() {
}

void Value_DVE_Custom_Transparency_DVECustomTransparencyInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_DVE_Custom_Transparency_DVECustomTransparencyInfo::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_DVE_Custom_Transparency_DVECustomTransparencyInfo& Value_DVE_Custom_Transparency_DVECustomTransparencyInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_DVE_Custom_Transparency_DVECustomTransparencyInfo.base);
  return *internal_default_instance();
}


void Value_DVE_Custom_Transparency_DVECustomTransparencyInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_DVE_Custom_Transparency.DVECustomTransparencyInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bcustom_) -
      reinterpret_cast<char*>(&id_)) + sizeof(bcustom_));
  _internal_metadata_.Clear();
}

bool Value_DVE_Custom_Transparency_DVECustomTransparencyInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_DVE_Custom_Transparency.DVECustomTransparencyInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.CnlID id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_id(static_cast< ::GoogleProtoBB::CnlID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bCustom = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bcustom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_DVE_Custom_Transparency.DVECustomTransparencyInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_DVE_Custom_Transparency.DVECustomTransparencyInfo)
  return false;
#undef DO_
}

void Value_DVE_Custom_Transparency_DVECustomTransparencyInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_DVE_Custom_Transparency.DVECustomTransparencyInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->id(), output);
  }

  // bool bCustom = 2;
  if (this->bcustom() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->bcustom(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_DVE_Custom_Transparency.DVECustomTransparencyInfo)
}

::google::protobuf::uint8* Value_DVE_Custom_Transparency_DVECustomTransparencyInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_DVE_Custom_Transparency.DVECustomTransparencyInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->id(), target);
  }

  // bool bCustom = 2;
  if (this->bcustom() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->bcustom(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_DVE_Custom_Transparency.DVECustomTransparencyInfo)
  return target;
}

size_t Value_DVE_Custom_Transparency_DVECustomTransparencyInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_DVE_Custom_Transparency.DVECustomTransparencyInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }

  // bool bCustom = 2;
  if (this->bcustom() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_DVE_Custom_Transparency_DVECustomTransparencyInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_DVE_Custom_Transparency.DVECustomTransparencyInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_DVE_Custom_Transparency_DVECustomTransparencyInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_DVE_Custom_Transparency_DVECustomTransparencyInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_DVE_Custom_Transparency.DVECustomTransparencyInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_DVE_Custom_Transparency.DVECustomTransparencyInfo)
    MergeFrom(*source);
  }
}

void Value_DVE_Custom_Transparency_DVECustomTransparencyInfo::MergeFrom(const Value_DVE_Custom_Transparency_DVECustomTransparencyInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_DVE_Custom_Transparency.DVECustomTransparencyInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.bcustom() != 0) {
    set_bcustom(from.bcustom());
  }
}

void Value_DVE_Custom_Transparency_DVECustomTransparencyInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_DVE_Custom_Transparency.DVECustomTransparencyInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_DVE_Custom_Transparency_DVECustomTransparencyInfo::CopyFrom(const Value_DVE_Custom_Transparency_DVECustomTransparencyInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_DVE_Custom_Transparency.DVECustomTransparencyInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_DVE_Custom_Transparency_DVECustomTransparencyInfo::IsInitialized() const {
  return true;
}

void Value_DVE_Custom_Transparency_DVECustomTransparencyInfo::Swap(Value_DVE_Custom_Transparency_DVECustomTransparencyInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_DVE_Custom_Transparency_DVECustomTransparencyInfo::InternalSwap(Value_DVE_Custom_Transparency_DVECustomTransparencyInfo* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(bcustom_, other->bcustom_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_DVE_Custom_Transparency_DVECustomTransparencyInfo::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_DVE_Custom_Transparency::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_DVE_Custom_Transparency::kCountFieldNumber;
const int Value_DVE_Custom_Transparency::kCustomInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_DVE_Custom_Transparency::Value_DVE_Custom_Transparency()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_DVE_Custom_Transparency.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_DVE_Custom_Transparency)
}
Value_DVE_Custom_Transparency::Value_DVE_Custom_Transparency(const Value_DVE_Custom_Transparency& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      custominfo_(from.custominfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_DVE_Custom_Transparency)
}

void Value_DVE_Custom_Transparency::SharedCtor() {
  count_ = 0u;
}

Value_DVE_Custom_Transparency::~Value_DVE_Custom_Transparency() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_DVE_Custom_Transparency)
  SharedDtor();
}

void Value_DVE_Custom_Transparency::SharedDtor() {
}

void Value_DVE_Custom_Transparency::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_DVE_Custom_Transparency::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_DVE_Custom_Transparency& Value_DVE_Custom_Transparency::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_DVE_Custom_Transparency.base);
  return *internal_default_instance();
}


void Value_DVE_Custom_Transparency::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_DVE_Custom_Transparency)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  custominfo_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_DVE_Custom_Transparency::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_DVE_Custom_Transparency)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_DVE_Custom_Transparency.DVECustomTransparencyInfo customInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_custominfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_DVE_Custom_Transparency)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_DVE_Custom_Transparency)
  return false;
#undef DO_
}

void Value_DVE_Custom_Transparency::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_DVE_Custom_Transparency)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_DVE_Custom_Transparency.DVECustomTransparencyInfo customInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->custominfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->custominfo(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_DVE_Custom_Transparency)
}

::google::protobuf::uint8* Value_DVE_Custom_Transparency::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_DVE_Custom_Transparency)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_DVE_Custom_Transparency.DVECustomTransparencyInfo customInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->custominfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->custominfo(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_DVE_Custom_Transparency)
  return target;
}

size_t Value_DVE_Custom_Transparency::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_DVE_Custom_Transparency)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_DVE_Custom_Transparency.DVECustomTransparencyInfo customInfo = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->custominfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->custominfo(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_DVE_Custom_Transparency::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_DVE_Custom_Transparency)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_DVE_Custom_Transparency* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_DVE_Custom_Transparency>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_DVE_Custom_Transparency)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_DVE_Custom_Transparency)
    MergeFrom(*source);
  }
}

void Value_DVE_Custom_Transparency::MergeFrom(const Value_DVE_Custom_Transparency& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_DVE_Custom_Transparency)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  custominfo_.MergeFrom(from.custominfo_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_DVE_Custom_Transparency::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_DVE_Custom_Transparency)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_DVE_Custom_Transparency::CopyFrom(const Value_DVE_Custom_Transparency& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_DVE_Custom_Transparency)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_DVE_Custom_Transparency::IsInitialized() const {
  return true;
}

void Value_DVE_Custom_Transparency::Swap(Value_DVE_Custom_Transparency* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_DVE_Custom_Transparency::InternalSwap(Value_DVE_Custom_Transparency* other) {
  using std::swap;
  CastToBase(&custominfo_)->InternalSwap(CastToBase(&other->custominfo_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_DVE_Custom_Transparency::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_RTD_Status_RTDStatusInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_RTD_Status_RTDStatusInfo::kIdFieldNumber;
const int Value_RTD_Status_RTDStatusInfo::kEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_RTD_Status_RTDStatusInfo::Value_RTD_Status_RTDStatusInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_RTD_Status_RTDStatusInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_RTD_Status.RTDStatusInfo)
}
Value_RTD_Status_RTDStatusInfo::Value_RTD_Status_RTDStatusInfo(const Value_RTD_Status_RTDStatusInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&enable_) -
    reinterpret_cast<char*>(&id_)) + sizeof(enable_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_RTD_Status.RTDStatusInfo)
}

void Value_RTD_Status_RTDStatusInfo::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_) -
      reinterpret_cast<char*>(&id_)) + sizeof(enable_));
}

Value_RTD_Status_RTDStatusInfo::~Value_RTD_Status_RTDStatusInfo() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_RTD_Status.RTDStatusInfo)
  SharedDtor();
}

void Value_RTD_Status_RTDStatusInfo::SharedDtor() {
}

void Value_RTD_Status_RTDStatusInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_RTD_Status_RTDStatusInfo::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_RTD_Status_RTDStatusInfo& Value_RTD_Status_RTDStatusInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_RTD_Status_RTDStatusInfo.base);
  return *internal_default_instance();
}


void Value_RTD_Status_RTDStatusInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_RTD_Status.RTDStatusInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_) -
      reinterpret_cast<char*>(&id_)) + sizeof(enable_));
  _internal_metadata_.Clear();
}

bool Value_RTD_Status_RTDStatusInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_RTD_Status.RTDStatusInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.CnlID id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_id(static_cast< ::GoogleProtoBB::CnlID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enable = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_RTD_Status.RTDStatusInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_RTD_Status.RTDStatusInfo)
  return false;
#undef DO_
}

void Value_RTD_Status_RTDStatusInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_RTD_Status.RTDStatusInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->id(), output);
  }

  // bool enable = 2;
  if (this->enable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->enable(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_RTD_Status.RTDStatusInfo)
}

::google::protobuf::uint8* Value_RTD_Status_RTDStatusInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_RTD_Status.RTDStatusInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->id(), target);
  }

  // bool enable = 2;
  if (this->enable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->enable(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_RTD_Status.RTDStatusInfo)
  return target;
}

size_t Value_RTD_Status_RTDStatusInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_RTD_Status.RTDStatusInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }

  // bool enable = 2;
  if (this->enable() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_RTD_Status_RTDStatusInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_RTD_Status.RTDStatusInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_RTD_Status_RTDStatusInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_RTD_Status_RTDStatusInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_RTD_Status.RTDStatusInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_RTD_Status.RTDStatusInfo)
    MergeFrom(*source);
  }
}

void Value_RTD_Status_RTDStatusInfo::MergeFrom(const Value_RTD_Status_RTDStatusInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_RTD_Status.RTDStatusInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.enable() != 0) {
    set_enable(from.enable());
  }
}

void Value_RTD_Status_RTDStatusInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_RTD_Status.RTDStatusInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_RTD_Status_RTDStatusInfo::CopyFrom(const Value_RTD_Status_RTDStatusInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_RTD_Status.RTDStatusInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_RTD_Status_RTDStatusInfo::IsInitialized() const {
  return true;
}

void Value_RTD_Status_RTDStatusInfo::Swap(Value_RTD_Status_RTDStatusInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_RTD_Status_RTDStatusInfo::InternalSwap(Value_RTD_Status_RTDStatusInfo* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(enable_, other->enable_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_RTD_Status_RTDStatusInfo::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_RTD_Status::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_RTD_Status::kCountFieldNumber;
const int Value_RTD_Status::kStatusInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_RTD_Status::Value_RTD_Status()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_RTD_Status.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_RTD_Status)
}
Value_RTD_Status::Value_RTD_Status(const Value_RTD_Status& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      statusinfo_(from.statusinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_RTD_Status)
}

void Value_RTD_Status::SharedCtor() {
  count_ = 0u;
}

Value_RTD_Status::~Value_RTD_Status() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_RTD_Status)
  SharedDtor();
}

void Value_RTD_Status::SharedDtor() {
}

void Value_RTD_Status::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_RTD_Status::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_RTD_Status& Value_RTD_Status::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_RTD_Status.base);
  return *internal_default_instance();
}


void Value_RTD_Status::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_RTD_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  statusinfo_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_RTD_Status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_RTD_Status)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_RTD_Status.RTDStatusInfo statusInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_statusinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_RTD_Status)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_RTD_Status)
  return false;
#undef DO_
}

void Value_RTD_Status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_RTD_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_RTD_Status.RTDStatusInfo statusInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->statusinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->statusinfo(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_RTD_Status)
}

::google::protobuf::uint8* Value_RTD_Status::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_RTD_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_RTD_Status.RTDStatusInfo statusInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->statusinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->statusinfo(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_RTD_Status)
  return target;
}

size_t Value_RTD_Status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_RTD_Status)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_RTD_Status.RTDStatusInfo statusInfo = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->statusinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->statusinfo(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_RTD_Status::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_RTD_Status)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_RTD_Status* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_RTD_Status>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_RTD_Status)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_RTD_Status)
    MergeFrom(*source);
  }
}

void Value_RTD_Status::MergeFrom(const Value_RTD_Status& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_RTD_Status)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  statusinfo_.MergeFrom(from.statusinfo_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_RTD_Status::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_RTD_Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_RTD_Status::CopyFrom(const Value_RTD_Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_RTD_Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_RTD_Status::IsInitialized() const {
  return true;
}

void Value_RTD_Status::Swap(Value_RTD_Status* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_RTD_Status::InternalSwap(Value_RTD_Status* other) {
  using std::swap;
  CastToBase(&statusinfo_)->InternalSwap(CastToBase(&other->statusinfo_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_RTD_Status::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_RTD_Type_RTDTypeInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_RTD_Type_RTDTypeInfo::kIdFieldNumber;
const int Value_RTD_Type_RTDTypeInfo::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_RTD_Type_RTDTypeInfo::Value_RTD_Type_RTDTypeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_RTD_Type_RTDTypeInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_RTD_Type.RTDTypeInfo)
}
Value_RTD_Type_RTDTypeInfo::Value_RTD_Type_RTDTypeInfo(const Value_RTD_Type_RTDTypeInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_RTD_Type.RTDTypeInfo)
}

void Value_RTD_Type_RTDTypeInfo::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
}

Value_RTD_Type_RTDTypeInfo::~Value_RTD_Type_RTDTypeInfo() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_RTD_Type.RTDTypeInfo)
  SharedDtor();
}

void Value_RTD_Type_RTDTypeInfo::SharedDtor() {
}

void Value_RTD_Type_RTDTypeInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_RTD_Type_RTDTypeInfo::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_RTD_Type_RTDTypeInfo& Value_RTD_Type_RTDTypeInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_RTD_Type_RTDTypeInfo.base);
  return *internal_default_instance();
}


void Value_RTD_Type_RTDTypeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_RTD_Type.RTDTypeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool Value_RTD_Type_RTDTypeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_RTD_Type.RTDTypeInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.CnlID id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_id(static_cast< ::GoogleProtoBB::CnlID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.RTDType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::GoogleProtoBB::RTDType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_RTD_Type.RTDTypeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_RTD_Type.RTDTypeInfo)
  return false;
#undef DO_
}

void Value_RTD_Type_RTDTypeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_RTD_Type.RTDTypeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->id(), output);
  }

  // .GoogleProtoBB.RTDType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_RTD_Type.RTDTypeInfo)
}

::google::protobuf::uint8* Value_RTD_Type_RTDTypeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_RTD_Type.RTDTypeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->id(), target);
  }

  // .GoogleProtoBB.RTDType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_RTD_Type.RTDTypeInfo)
  return target;
}

size_t Value_RTD_Type_RTDTypeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_RTD_Type.RTDTypeInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }

  // .GoogleProtoBB.RTDType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_RTD_Type_RTDTypeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_RTD_Type.RTDTypeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_RTD_Type_RTDTypeInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_RTD_Type_RTDTypeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_RTD_Type.RTDTypeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_RTD_Type.RTDTypeInfo)
    MergeFrom(*source);
  }
}

void Value_RTD_Type_RTDTypeInfo::MergeFrom(const Value_RTD_Type_RTDTypeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_RTD_Type.RTDTypeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Value_RTD_Type_RTDTypeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_RTD_Type.RTDTypeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_RTD_Type_RTDTypeInfo::CopyFrom(const Value_RTD_Type_RTDTypeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_RTD_Type.RTDTypeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_RTD_Type_RTDTypeInfo::IsInitialized() const {
  return true;
}

void Value_RTD_Type_RTDTypeInfo::Swap(Value_RTD_Type_RTDTypeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_RTD_Type_RTDTypeInfo::InternalSwap(Value_RTD_Type_RTDTypeInfo* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_RTD_Type_RTDTypeInfo::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_RTD_Type::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_RTD_Type::kCountFieldNumber;
const int Value_RTD_Type::kTypeInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_RTD_Type::Value_RTD_Type()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_RTD_Type.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_RTD_Type)
}
Value_RTD_Type::Value_RTD_Type(const Value_RTD_Type& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      typeinfo_(from.typeinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_RTD_Type)
}

void Value_RTD_Type::SharedCtor() {
  count_ = 0u;
}

Value_RTD_Type::~Value_RTD_Type() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_RTD_Type)
  SharedDtor();
}

void Value_RTD_Type::SharedDtor() {
}

void Value_RTD_Type::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_RTD_Type::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_RTD_Type& Value_RTD_Type::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_RTD_Type.base);
  return *internal_default_instance();
}


void Value_RTD_Type::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_RTD_Type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  typeinfo_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_RTD_Type::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_RTD_Type)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_RTD_Type.RTDTypeInfo typeInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_typeinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_RTD_Type)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_RTD_Type)
  return false;
#undef DO_
}

void Value_RTD_Type::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_RTD_Type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_RTD_Type.RTDTypeInfo typeInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->typeinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->typeinfo(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_RTD_Type)
}

::google::protobuf::uint8* Value_RTD_Type::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_RTD_Type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_RTD_Type.RTDTypeInfo typeInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->typeinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->typeinfo(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_RTD_Type)
  return target;
}

size_t Value_RTD_Type::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_RTD_Type)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_RTD_Type.RTDTypeInfo typeInfo = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->typeinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->typeinfo(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_RTD_Type::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_RTD_Type)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_RTD_Type* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_RTD_Type>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_RTD_Type)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_RTD_Type)
    MergeFrom(*source);
  }
}

void Value_RTD_Type::MergeFrom(const Value_RTD_Type& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_RTD_Type)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  typeinfo_.MergeFrom(from.typeinfo_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_RTD_Type::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_RTD_Type)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_RTD_Type::CopyFrom(const Value_RTD_Type& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_RTD_Type)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_RTD_Type::IsInitialized() const {
  return true;
}

void Value_RTD_Type::Swap(Value_RTD_Type* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_RTD_Type::InternalSwap(Value_RTD_Type* other) {
  using std::swap;
  CastToBase(&typeinfo_)->InternalSwap(CastToBase(&other->typeinfo_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_RTD_Type::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_RTD_Position_RTDPositionInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_RTD_Position_RTDPositionInfo::kIdFieldNumber;
const int Value_RTD_Position_RTDPositionInfo::kPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_RTD_Position_RTDPositionInfo::Value_RTD_Position_RTDPositionInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_RTD_Position_RTDPositionInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_RTD_Position.RTDPositionInfo)
}
Value_RTD_Position_RTDPositionInfo::Value_RTD_Position_RTDPositionInfo(const Value_RTD_Position_RTDPositionInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&position_) -
    reinterpret_cast<char*>(&id_)) + sizeof(position_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_RTD_Position.RTDPositionInfo)
}

void Value_RTD_Position_RTDPositionInfo::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&position_) -
      reinterpret_cast<char*>(&id_)) + sizeof(position_));
}

Value_RTD_Position_RTDPositionInfo::~Value_RTD_Position_RTDPositionInfo() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_RTD_Position.RTDPositionInfo)
  SharedDtor();
}

void Value_RTD_Position_RTDPositionInfo::SharedDtor() {
}

void Value_RTD_Position_RTDPositionInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_RTD_Position_RTDPositionInfo::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_RTD_Position_RTDPositionInfo& Value_RTD_Position_RTDPositionInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_RTD_Position_RTDPositionInfo.base);
  return *internal_default_instance();
}


void Value_RTD_Position_RTDPositionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_RTD_Position.RTDPositionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&position_) -
      reinterpret_cast<char*>(&id_)) + sizeof(position_));
  _internal_metadata_.Clear();
}

bool Value_RTD_Position_RTDPositionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_RTD_Position.RTDPositionInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.CnlID id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_id(static_cast< ::GoogleProtoBB::CnlID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_RTD_Position.RTDPositionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_RTD_Position.RTDPositionInfo)
  return false;
#undef DO_
}

void Value_RTD_Position_RTDPositionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_RTD_Position.RTDPositionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->id(), output);
  }

  // uint32 position = 2;
  if (this->position() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->position(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_RTD_Position.RTDPositionInfo)
}

::google::protobuf::uint8* Value_RTD_Position_RTDPositionInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_RTD_Position.RTDPositionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->id(), target);
  }

  // uint32 position = 2;
  if (this->position() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->position(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_RTD_Position.RTDPositionInfo)
  return target;
}

size_t Value_RTD_Position_RTDPositionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_RTD_Position.RTDPositionInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GoogleProtoBB.CnlID id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }

  // uint32 position = 2;
  if (this->position() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->position());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_RTD_Position_RTDPositionInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_RTD_Position.RTDPositionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_RTD_Position_RTDPositionInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_RTD_Position_RTDPositionInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_RTD_Position.RTDPositionInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_RTD_Position.RTDPositionInfo)
    MergeFrom(*source);
  }
}

void Value_RTD_Position_RTDPositionInfo::MergeFrom(const Value_RTD_Position_RTDPositionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_RTD_Position.RTDPositionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.position() != 0) {
    set_position(from.position());
  }
}

void Value_RTD_Position_RTDPositionInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_RTD_Position.RTDPositionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_RTD_Position_RTDPositionInfo::CopyFrom(const Value_RTD_Position_RTDPositionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_RTD_Position.RTDPositionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_RTD_Position_RTDPositionInfo::IsInitialized() const {
  return true;
}

void Value_RTD_Position_RTDPositionInfo::Swap(Value_RTD_Position_RTDPositionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_RTD_Position_RTDPositionInfo::InternalSwap(Value_RTD_Position_RTDPositionInfo* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(position_, other->position_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_RTD_Position_RTDPositionInfo::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_RTD_Position::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_RTD_Position::kCountFieldNumber;
const int Value_RTD_Position::kPositionInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_RTD_Position::Value_RTD_Position()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_RTD_Position.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_RTD_Position)
}
Value_RTD_Position::Value_RTD_Position(const Value_RTD_Position& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      positioninfo_(from.positioninfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_RTD_Position)
}

void Value_RTD_Position::SharedCtor() {
  count_ = 0u;
}

Value_RTD_Position::~Value_RTD_Position() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_RTD_Position)
  SharedDtor();
}

void Value_RTD_Position::SharedDtor() {
}

void Value_RTD_Position::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_RTD_Position::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_RTD_Position& Value_RTD_Position::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_RTD_Position.base);
  return *internal_default_instance();
}


void Value_RTD_Position::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_RTD_Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  positioninfo_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_RTD_Position::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_RTD_Position)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_RTD_Position.RTDPositionInfo positionInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_positioninfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_RTD_Position)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_RTD_Position)
  return false;
#undef DO_
}

void Value_RTD_Position::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_RTD_Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_RTD_Position.RTDPositionInfo positionInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->positioninfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->positioninfo(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_RTD_Position)
}

::google::protobuf::uint8* Value_RTD_Position::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_RTD_Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_RTD_Position.RTDPositionInfo positionInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->positioninfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->positioninfo(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_RTD_Position)
  return target;
}

size_t Value_RTD_Position::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_RTD_Position)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_RTD_Position.RTDPositionInfo positionInfo = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->positioninfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->positioninfo(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_RTD_Position::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_RTD_Position)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_RTD_Position* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_RTD_Position>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_RTD_Position)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_RTD_Position)
    MergeFrom(*source);
  }
}

void Value_RTD_Position::MergeFrom(const Value_RTD_Position& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_RTD_Position)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  positioninfo_.MergeFrom(from.positioninfo_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_RTD_Position::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_RTD_Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_RTD_Position::CopyFrom(const Value_RTD_Position& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_RTD_Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_RTD_Position::IsInitialized() const {
  return true;
}

void Value_RTD_Position::Swap(Value_RTD_Position* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_RTD_Position::InternalSwap(Value_RTD_Position* other) {
  using std::swap;
  CastToBase(&positioninfo_)->InternalSwap(CastToBase(&other->positioninfo_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_RTD_Position::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_GFX_Status_GFXStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_GFX_Status_GFXStatus::kTargetCnlIDFieldNumber;
const int Value_GFX_Status_GFXStatus::kGfxCnlFieldNumber;
const int Value_GFX_Status_GFXStatus::kEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_GFX_Status_GFXStatus::Value_GFX_Status_GFXStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_GFX_Status_GFXStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_GFX_Status.GFXStatus)
}
Value_GFX_Status_GFXStatus::Value_GFX_Status_GFXStatus(const Value_GFX_Status_GFXStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&targetcnlid_, &from.targetcnlid_,
    static_cast<size_t>(reinterpret_cast<char*>(&enable_) -
    reinterpret_cast<char*>(&targetcnlid_)) + sizeof(enable_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_GFX_Status.GFXStatus)
}

void Value_GFX_Status_GFXStatus::SharedCtor() {
  ::memset(&targetcnlid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_) -
      reinterpret_cast<char*>(&targetcnlid_)) + sizeof(enable_));
}

Value_GFX_Status_GFXStatus::~Value_GFX_Status_GFXStatus() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_GFX_Status.GFXStatus)
  SharedDtor();
}

void Value_GFX_Status_GFXStatus::SharedDtor() {
}

void Value_GFX_Status_GFXStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_GFX_Status_GFXStatus::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_GFX_Status_GFXStatus& Value_GFX_Status_GFXStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_GFX_Status_GFXStatus.base);
  return *internal_default_instance();
}


void Value_GFX_Status_GFXStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_GFX_Status.GFXStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&targetcnlid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_) -
      reinterpret_cast<char*>(&targetcnlid_)) + sizeof(enable_));
  _internal_metadata_.Clear();
}

bool Value_GFX_Status_GFXStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_GFX_Status.GFXStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.CnlID targetCnlID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_targetcnlid(static_cast< ::GoogleProtoBB::CnlID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.GFxCnl gfxCnl = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_gfxcnl(static_cast< ::GoogleProtoBB::GFxCnl >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enable = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_GFX_Status.GFXStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_GFX_Status.GFXStatus)
  return false;
#undef DO_
}

void Value_GFX_Status_GFXStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_GFX_Status.GFXStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID targetCnlID = 1;
  if (this->targetcnlid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->targetcnlid(), output);
  }

  // .GoogleProtoBB.GFxCnl gfxCnl = 2;
  if (this->gfxcnl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->gfxcnl(), output);
  }

  // bool enable = 3;
  if (this->enable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->enable(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_GFX_Status.GFXStatus)
}

::google::protobuf::uint8* Value_GFX_Status_GFXStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_GFX_Status.GFXStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID targetCnlID = 1;
  if (this->targetcnlid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->targetcnlid(), target);
  }

  // .GoogleProtoBB.GFxCnl gfxCnl = 2;
  if (this->gfxcnl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->gfxcnl(), target);
  }

  // bool enable = 3;
  if (this->enable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->enable(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_GFX_Status.GFXStatus)
  return target;
}

size_t Value_GFX_Status_GFXStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_GFX_Status.GFXStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GoogleProtoBB.CnlID targetCnlID = 1;
  if (this->targetcnlid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->targetcnlid());
  }

  // .GoogleProtoBB.GFxCnl gfxCnl = 2;
  if (this->gfxcnl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gfxcnl());
  }

  // bool enable = 3;
  if (this->enable() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_GFX_Status_GFXStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_GFX_Status.GFXStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_GFX_Status_GFXStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_GFX_Status_GFXStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_GFX_Status.GFXStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_GFX_Status.GFXStatus)
    MergeFrom(*source);
  }
}

void Value_GFX_Status_GFXStatus::MergeFrom(const Value_GFX_Status_GFXStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_GFX_Status.GFXStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.targetcnlid() != 0) {
    set_targetcnlid(from.targetcnlid());
  }
  if (from.gfxcnl() != 0) {
    set_gfxcnl(from.gfxcnl());
  }
  if (from.enable() != 0) {
    set_enable(from.enable());
  }
}

void Value_GFX_Status_GFXStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_GFX_Status.GFXStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_GFX_Status_GFXStatus::CopyFrom(const Value_GFX_Status_GFXStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_GFX_Status.GFXStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_GFX_Status_GFXStatus::IsInitialized() const {
  return true;
}

void Value_GFX_Status_GFXStatus::Swap(Value_GFX_Status_GFXStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_GFX_Status_GFXStatus::InternalSwap(Value_GFX_Status_GFXStatus* other) {
  using std::swap;
  swap(targetcnlid_, other->targetcnlid_);
  swap(gfxcnl_, other->gfxcnl_);
  swap(enable_, other->enable_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_GFX_Status_GFXStatus::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_GFX_Status_PGMGFX::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_GFX_Status_PGMGFX::kCountFieldNumber;
const int Value_GFX_Status_PGMGFX::kGfxStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_GFX_Status_PGMGFX::Value_GFX_Status_PGMGFX()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_GFX_Status_PGMGFX.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_GFX_Status.PGMGFX)
}
Value_GFX_Status_PGMGFX::Value_GFX_Status_PGMGFX(const Value_GFX_Status_PGMGFX& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      gfxstatus_(from.gfxstatus_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_GFX_Status.PGMGFX)
}

void Value_GFX_Status_PGMGFX::SharedCtor() {
  count_ = 0u;
}

Value_GFX_Status_PGMGFX::~Value_GFX_Status_PGMGFX() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_GFX_Status.PGMGFX)
  SharedDtor();
}

void Value_GFX_Status_PGMGFX::SharedDtor() {
}

void Value_GFX_Status_PGMGFX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_GFX_Status_PGMGFX::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_GFX_Status_PGMGFX& Value_GFX_Status_PGMGFX::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_GFX_Status_PGMGFX.base);
  return *internal_default_instance();
}


void Value_GFX_Status_PGMGFX::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_GFX_Status.PGMGFX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gfxstatus_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_GFX_Status_PGMGFX::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_GFX_Status.PGMGFX)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_GFX_Status.GFXStatus gfxStatus = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_gfxstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_GFX_Status.PGMGFX)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_GFX_Status.PGMGFX)
  return false;
#undef DO_
}

void Value_GFX_Status_PGMGFX::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_GFX_Status.PGMGFX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_GFX_Status.GFXStatus gfxStatus = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gfxstatus_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->gfxstatus(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_GFX_Status.PGMGFX)
}

::google::protobuf::uint8* Value_GFX_Status_PGMGFX::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_GFX_Status.PGMGFX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_GFX_Status.GFXStatus gfxStatus = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gfxstatus_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->gfxstatus(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_GFX_Status.PGMGFX)
  return target;
}

size_t Value_GFX_Status_PGMGFX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_GFX_Status.PGMGFX)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_GFX_Status.GFXStatus gfxStatus = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->gfxstatus_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->gfxstatus(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_GFX_Status_PGMGFX::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_GFX_Status.PGMGFX)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_GFX_Status_PGMGFX* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_GFX_Status_PGMGFX>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_GFX_Status.PGMGFX)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_GFX_Status.PGMGFX)
    MergeFrom(*source);
  }
}

void Value_GFX_Status_PGMGFX::MergeFrom(const Value_GFX_Status_PGMGFX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_GFX_Status.PGMGFX)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gfxstatus_.MergeFrom(from.gfxstatus_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_GFX_Status_PGMGFX::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_GFX_Status.PGMGFX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_GFX_Status_PGMGFX::CopyFrom(const Value_GFX_Status_PGMGFX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_GFX_Status.PGMGFX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_GFX_Status_PGMGFX::IsInitialized() const {
  return true;
}

void Value_GFX_Status_PGMGFX::Swap(Value_GFX_Status_PGMGFX* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_GFX_Status_PGMGFX::InternalSwap(Value_GFX_Status_PGMGFX* other) {
  using std::swap;
  CastToBase(&gfxstatus_)->InternalSwap(CastToBase(&other->gfxstatus_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_GFX_Status_PGMGFX::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_GFX_Status::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_GFX_Status::kPgmCountFieldNumber;
const int Value_GFX_Status::kPgmGfxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_GFX_Status::Value_GFX_Status()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_GFX_Status.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_GFX_Status)
}
Value_GFX_Status::Value_GFX_Status(const Value_GFX_Status& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pgmgfx_(from.pgmgfx_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pgmcount_ = from.pgmcount_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_GFX_Status)
}

void Value_GFX_Status::SharedCtor() {
  pgmcount_ = 0u;
}

Value_GFX_Status::~Value_GFX_Status() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_GFX_Status)
  SharedDtor();
}

void Value_GFX_Status::SharedDtor() {
}

void Value_GFX_Status::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_GFX_Status::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_GFX_Status& Value_GFX_Status::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_GFX_Status.base);
  return *internal_default_instance();
}


void Value_GFX_Status::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_GFX_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pgmgfx_.Clear();
  pgmcount_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_GFX_Status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_GFX_Status)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 pgmCount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pgmcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_GFX_Status.PGMGFX pgmGfx = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pgmgfx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_GFX_Status)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_GFX_Status)
  return false;
#undef DO_
}

void Value_GFX_Status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_GFX_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 pgmCount = 1;
  if (this->pgmcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pgmcount(), output);
  }

  // repeated .GoogleProtoBB.Value_GFX_Status.PGMGFX pgmGfx = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pgmgfx_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->pgmgfx(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_GFX_Status)
}

::google::protobuf::uint8* Value_GFX_Status::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_GFX_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 pgmCount = 1;
  if (this->pgmcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pgmcount(), target);
  }

  // repeated .GoogleProtoBB.Value_GFX_Status.PGMGFX pgmGfx = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pgmgfx_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->pgmgfx(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_GFX_Status)
  return target;
}

size_t Value_GFX_Status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_GFX_Status)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_GFX_Status.PGMGFX pgmGfx = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->pgmgfx_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pgmgfx(static_cast<int>(i)));
    }
  }

  // uint32 pgmCount = 1;
  if (this->pgmcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pgmcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_GFX_Status::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_GFX_Status)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_GFX_Status* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_GFX_Status>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_GFX_Status)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_GFX_Status)
    MergeFrom(*source);
  }
}

void Value_GFX_Status::MergeFrom(const Value_GFX_Status& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_GFX_Status)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pgmgfx_.MergeFrom(from.pgmgfx_);
  if (from.pgmcount() != 0) {
    set_pgmcount(from.pgmcount());
  }
}

void Value_GFX_Status::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_GFX_Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_GFX_Status::CopyFrom(const Value_GFX_Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_GFX_Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_GFX_Status::IsInitialized() const {
  return true;
}

void Value_GFX_Status::Swap(Value_GFX_Status* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_GFX_Status::InternalSwap(Value_GFX_Status* other) {
  using std::swap;
  CastToBase(&pgmgfx_)->InternalSwap(CastToBase(&other->pgmgfx_));
  swap(pgmcount_, other->pgmcount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_GFX_Status::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_GFX_Position_GFXPosition::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_GFX_Position_GFXPosition::kTargetCnlIDFieldNumber;
const int Value_GFX_Position_GFXPosition::kGfxCnlFieldNumber;
const int Value_GFX_Position_GFXPosition::kPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_GFX_Position_GFXPosition::Value_GFX_Position_GFXPosition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_GFX_Position_GFXPosition.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_GFX_Position.GFXPosition)
}
Value_GFX_Position_GFXPosition::Value_GFX_Position_GFXPosition(const Value_GFX_Position_GFXPosition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&targetcnlid_, &from.targetcnlid_,
    static_cast<size_t>(reinterpret_cast<char*>(&position_) -
    reinterpret_cast<char*>(&targetcnlid_)) + sizeof(position_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_GFX_Position.GFXPosition)
}

void Value_GFX_Position_GFXPosition::SharedCtor() {
  ::memset(&targetcnlid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&position_) -
      reinterpret_cast<char*>(&targetcnlid_)) + sizeof(position_));
}

Value_GFX_Position_GFXPosition::~Value_GFX_Position_GFXPosition() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_GFX_Position.GFXPosition)
  SharedDtor();
}

void Value_GFX_Position_GFXPosition::SharedDtor() {
}

void Value_GFX_Position_GFXPosition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_GFX_Position_GFXPosition::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_GFX_Position_GFXPosition& Value_GFX_Position_GFXPosition::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_GFX_Position_GFXPosition.base);
  return *internal_default_instance();
}


void Value_GFX_Position_GFXPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_GFX_Position.GFXPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&targetcnlid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&position_) -
      reinterpret_cast<char*>(&targetcnlid_)) + sizeof(position_));
  _internal_metadata_.Clear();
}

bool Value_GFX_Position_GFXPosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_GFX_Position.GFXPosition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.CnlID targetCnlID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_targetcnlid(static_cast< ::GoogleProtoBB::CnlID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.GFxCnl gfxCnl = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_gfxcnl(static_cast< ::GoogleProtoBB::GFxCnl >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 position = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_GFX_Position.GFXPosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_GFX_Position.GFXPosition)
  return false;
#undef DO_
}

void Value_GFX_Position_GFXPosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_GFX_Position.GFXPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID targetCnlID = 1;
  if (this->targetcnlid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->targetcnlid(), output);
  }

  // .GoogleProtoBB.GFxCnl gfxCnl = 2;
  if (this->gfxcnl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->gfxcnl(), output);
  }

  // uint32 position = 3;
  if (this->position() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->position(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_GFX_Position.GFXPosition)
}

::google::protobuf::uint8* Value_GFX_Position_GFXPosition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_GFX_Position.GFXPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID targetCnlID = 1;
  if (this->targetcnlid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->targetcnlid(), target);
  }

  // .GoogleProtoBB.GFxCnl gfxCnl = 2;
  if (this->gfxcnl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->gfxcnl(), target);
  }

  // uint32 position = 3;
  if (this->position() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->position(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_GFX_Position.GFXPosition)
  return target;
}

size_t Value_GFX_Position_GFXPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_GFX_Position.GFXPosition)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GoogleProtoBB.CnlID targetCnlID = 1;
  if (this->targetcnlid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->targetcnlid());
  }

  // .GoogleProtoBB.GFxCnl gfxCnl = 2;
  if (this->gfxcnl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gfxcnl());
  }

  // uint32 position = 3;
  if (this->position() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->position());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_GFX_Position_GFXPosition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_GFX_Position.GFXPosition)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_GFX_Position_GFXPosition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_GFX_Position_GFXPosition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_GFX_Position.GFXPosition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_GFX_Position.GFXPosition)
    MergeFrom(*source);
  }
}

void Value_GFX_Position_GFXPosition::MergeFrom(const Value_GFX_Position_GFXPosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_GFX_Position.GFXPosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.targetcnlid() != 0) {
    set_targetcnlid(from.targetcnlid());
  }
  if (from.gfxcnl() != 0) {
    set_gfxcnl(from.gfxcnl());
  }
  if (from.position() != 0) {
    set_position(from.position());
  }
}

void Value_GFX_Position_GFXPosition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_GFX_Position.GFXPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_GFX_Position_GFXPosition::CopyFrom(const Value_GFX_Position_GFXPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_GFX_Position.GFXPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_GFX_Position_GFXPosition::IsInitialized() const {
  return true;
}

void Value_GFX_Position_GFXPosition::Swap(Value_GFX_Position_GFXPosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_GFX_Position_GFXPosition::InternalSwap(Value_GFX_Position_GFXPosition* other) {
  using std::swap;
  swap(targetcnlid_, other->targetcnlid_);
  swap(gfxcnl_, other->gfxcnl_);
  swap(position_, other->position_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_GFX_Position_GFXPosition::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_GFX_Position_PGMGFX::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_GFX_Position_PGMGFX::kCountFieldNumber;
const int Value_GFX_Position_PGMGFX::kGfxPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_GFX_Position_PGMGFX::Value_GFX_Position_PGMGFX()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_GFX_Position_PGMGFX.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_GFX_Position.PGMGFX)
}
Value_GFX_Position_PGMGFX::Value_GFX_Position_PGMGFX(const Value_GFX_Position_PGMGFX& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      gfxposition_(from.gfxposition_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_GFX_Position.PGMGFX)
}

void Value_GFX_Position_PGMGFX::SharedCtor() {
  count_ = 0u;
}

Value_GFX_Position_PGMGFX::~Value_GFX_Position_PGMGFX() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_GFX_Position.PGMGFX)
  SharedDtor();
}

void Value_GFX_Position_PGMGFX::SharedDtor() {
}

void Value_GFX_Position_PGMGFX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_GFX_Position_PGMGFX::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_GFX_Position_PGMGFX& Value_GFX_Position_PGMGFX::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_GFX_Position_PGMGFX.base);
  return *internal_default_instance();
}


void Value_GFX_Position_PGMGFX::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_GFX_Position.PGMGFX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gfxposition_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_GFX_Position_PGMGFX::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_GFX_Position.PGMGFX)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_GFX_Position.GFXPosition gfxPosition = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_gfxposition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_GFX_Position.PGMGFX)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_GFX_Position.PGMGFX)
  return false;
#undef DO_
}

void Value_GFX_Position_PGMGFX::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_GFX_Position.PGMGFX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_GFX_Position.GFXPosition gfxPosition = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gfxposition_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->gfxposition(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_GFX_Position.PGMGFX)
}

::google::protobuf::uint8* Value_GFX_Position_PGMGFX::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_GFX_Position.PGMGFX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_GFX_Position.GFXPosition gfxPosition = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gfxposition_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->gfxposition(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_GFX_Position.PGMGFX)
  return target;
}

size_t Value_GFX_Position_PGMGFX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_GFX_Position.PGMGFX)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_GFX_Position.GFXPosition gfxPosition = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->gfxposition_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->gfxposition(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_GFX_Position_PGMGFX::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_GFX_Position.PGMGFX)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_GFX_Position_PGMGFX* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_GFX_Position_PGMGFX>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_GFX_Position.PGMGFX)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_GFX_Position.PGMGFX)
    MergeFrom(*source);
  }
}

void Value_GFX_Position_PGMGFX::MergeFrom(const Value_GFX_Position_PGMGFX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_GFX_Position.PGMGFX)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gfxposition_.MergeFrom(from.gfxposition_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_GFX_Position_PGMGFX::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_GFX_Position.PGMGFX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_GFX_Position_PGMGFX::CopyFrom(const Value_GFX_Position_PGMGFX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_GFX_Position.PGMGFX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_GFX_Position_PGMGFX::IsInitialized() const {
  return true;
}

void Value_GFX_Position_PGMGFX::Swap(Value_GFX_Position_PGMGFX* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_GFX_Position_PGMGFX::InternalSwap(Value_GFX_Position_PGMGFX* other) {
  using std::swap;
  CastToBase(&gfxposition_)->InternalSwap(CastToBase(&other->gfxposition_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_GFX_Position_PGMGFX::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_GFX_Position::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_GFX_Position::kPgmCountFieldNumber;
const int Value_GFX_Position::kPgmGfxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_GFX_Position::Value_GFX_Position()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_GFX_Position.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_GFX_Position)
}
Value_GFX_Position::Value_GFX_Position(const Value_GFX_Position& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pgmgfx_(from.pgmgfx_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pgmcount_ = from.pgmcount_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_GFX_Position)
}

void Value_GFX_Position::SharedCtor() {
  pgmcount_ = 0u;
}

Value_GFX_Position::~Value_GFX_Position() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_GFX_Position)
  SharedDtor();
}

void Value_GFX_Position::SharedDtor() {
}

void Value_GFX_Position::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_GFX_Position::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_GFX_Position& Value_GFX_Position::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_GFX_Position.base);
  return *internal_default_instance();
}


void Value_GFX_Position::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_GFX_Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pgmgfx_.Clear();
  pgmcount_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_GFX_Position::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_GFX_Position)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 pgmCount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pgmcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_GFX_Position.PGMGFX pgmGfx = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pgmgfx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_GFX_Position)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_GFX_Position)
  return false;
#undef DO_
}

void Value_GFX_Position::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_GFX_Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 pgmCount = 1;
  if (this->pgmcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pgmcount(), output);
  }

  // repeated .GoogleProtoBB.Value_GFX_Position.PGMGFX pgmGfx = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pgmgfx_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->pgmgfx(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_GFX_Position)
}

::google::protobuf::uint8* Value_GFX_Position::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_GFX_Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 pgmCount = 1;
  if (this->pgmcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pgmcount(), target);
  }

  // repeated .GoogleProtoBB.Value_GFX_Position.PGMGFX pgmGfx = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pgmgfx_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->pgmgfx(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_GFX_Position)
  return target;
}

size_t Value_GFX_Position::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_GFX_Position)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_GFX_Position.PGMGFX pgmGfx = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->pgmgfx_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pgmgfx(static_cast<int>(i)));
    }
  }

  // uint32 pgmCount = 1;
  if (this->pgmcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pgmcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_GFX_Position::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_GFX_Position)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_GFX_Position* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_GFX_Position>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_GFX_Position)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_GFX_Position)
    MergeFrom(*source);
  }
}

void Value_GFX_Position::MergeFrom(const Value_GFX_Position& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_GFX_Position)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pgmgfx_.MergeFrom(from.pgmgfx_);
  if (from.pgmcount() != 0) {
    set_pgmcount(from.pgmcount());
  }
}

void Value_GFX_Position::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_GFX_Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_GFX_Position::CopyFrom(const Value_GFX_Position& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_GFX_Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_GFX_Position::IsInitialized() const {
  return true;
}

void Value_GFX_Position::Swap(Value_GFX_Position* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_GFX_Position::InternalSwap(Value_GFX_Position* other) {
  using std::swap;
  CastToBase(&pgmgfx_)->InternalSwap(CastToBase(&other->pgmgfx_));
  swap(pgmcount_, other->pgmcount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_GFX_Position::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_GFX_Fade_In_Out_Duration_GFXFadeDuration::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_GFX_Fade_In_Out_Duration_GFXFadeDuration::kTargetCnlIDFieldNumber;
const int Value_GFX_Fade_In_Out_Duration_GFXFadeDuration::kGfxCnlFieldNumber;
const int Value_GFX_Fade_In_Out_Duration_GFXFadeDuration::kFadeInDurationFieldNumber;
const int Value_GFX_Fade_In_Out_Duration_GFXFadeDuration::kFadeOutDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_GFX_Fade_In_Out_Duration_GFXFadeDuration::Value_GFX_Fade_In_Out_Duration_GFXFadeDuration()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_GFX_Fade_In_Out_Duration_GFXFadeDuration.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.GFXFadeDuration)
}
Value_GFX_Fade_In_Out_Duration_GFXFadeDuration::Value_GFX_Fade_In_Out_Duration_GFXFadeDuration(const Value_GFX_Fade_In_Out_Duration_GFXFadeDuration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&targetcnlid_, &from.targetcnlid_,
    static_cast<size_t>(reinterpret_cast<char*>(&fadeoutduration_) -
    reinterpret_cast<char*>(&targetcnlid_)) + sizeof(fadeoutduration_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.GFXFadeDuration)
}

void Value_GFX_Fade_In_Out_Duration_GFXFadeDuration::SharedCtor() {
  ::memset(&targetcnlid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fadeoutduration_) -
      reinterpret_cast<char*>(&targetcnlid_)) + sizeof(fadeoutduration_));
}

Value_GFX_Fade_In_Out_Duration_GFXFadeDuration::~Value_GFX_Fade_In_Out_Duration_GFXFadeDuration() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.GFXFadeDuration)
  SharedDtor();
}

void Value_GFX_Fade_In_Out_Duration_GFXFadeDuration::SharedDtor() {
}

void Value_GFX_Fade_In_Out_Duration_GFXFadeDuration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_GFX_Fade_In_Out_Duration_GFXFadeDuration::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_GFX_Fade_In_Out_Duration_GFXFadeDuration& Value_GFX_Fade_In_Out_Duration_GFXFadeDuration::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_GFX_Fade_In_Out_Duration_GFXFadeDuration.base);
  return *internal_default_instance();
}


void Value_GFX_Fade_In_Out_Duration_GFXFadeDuration::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.GFXFadeDuration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&targetcnlid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fadeoutduration_) -
      reinterpret_cast<char*>(&targetcnlid_)) + sizeof(fadeoutduration_));
  _internal_metadata_.Clear();
}

bool Value_GFX_Fade_In_Out_Duration_GFXFadeDuration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.GFXFadeDuration)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.CnlID targetCnlID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_targetcnlid(static_cast< ::GoogleProtoBB::CnlID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.GFxCnl gfxCnl = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_gfxcnl(static_cast< ::GoogleProtoBB::GFxCnl >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 fadeInDuration = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fadeinduration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 fadeOutDuration = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fadeoutduration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.GFXFadeDuration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.GFXFadeDuration)
  return false;
#undef DO_
}

void Value_GFX_Fade_In_Out_Duration_GFXFadeDuration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.GFXFadeDuration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID targetCnlID = 1;
  if (this->targetcnlid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->targetcnlid(), output);
  }

  // .GoogleProtoBB.GFxCnl gfxCnl = 2;
  if (this->gfxcnl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->gfxcnl(), output);
  }

  // uint32 fadeInDuration = 3;
  if (this->fadeinduration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->fadeinduration(), output);
  }

  // uint32 fadeOutDuration = 4;
  if (this->fadeoutduration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->fadeoutduration(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.GFXFadeDuration)
}

::google::protobuf::uint8* Value_GFX_Fade_In_Out_Duration_GFXFadeDuration::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.GFXFadeDuration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID targetCnlID = 1;
  if (this->targetcnlid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->targetcnlid(), target);
  }

  // .GoogleProtoBB.GFxCnl gfxCnl = 2;
  if (this->gfxcnl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->gfxcnl(), target);
  }

  // uint32 fadeInDuration = 3;
  if (this->fadeinduration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->fadeinduration(), target);
  }

  // uint32 fadeOutDuration = 4;
  if (this->fadeoutduration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->fadeoutduration(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.GFXFadeDuration)
  return target;
}

size_t Value_GFX_Fade_In_Out_Duration_GFXFadeDuration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.GFXFadeDuration)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GoogleProtoBB.CnlID targetCnlID = 1;
  if (this->targetcnlid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->targetcnlid());
  }

  // .GoogleProtoBB.GFxCnl gfxCnl = 2;
  if (this->gfxcnl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gfxcnl());
  }

  // uint32 fadeInDuration = 3;
  if (this->fadeinduration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fadeinduration());
  }

  // uint32 fadeOutDuration = 4;
  if (this->fadeoutduration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fadeoutduration());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_GFX_Fade_In_Out_Duration_GFXFadeDuration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.GFXFadeDuration)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_GFX_Fade_In_Out_Duration_GFXFadeDuration* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_GFX_Fade_In_Out_Duration_GFXFadeDuration>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.GFXFadeDuration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.GFXFadeDuration)
    MergeFrom(*source);
  }
}

void Value_GFX_Fade_In_Out_Duration_GFXFadeDuration::MergeFrom(const Value_GFX_Fade_In_Out_Duration_GFXFadeDuration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.GFXFadeDuration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.targetcnlid() != 0) {
    set_targetcnlid(from.targetcnlid());
  }
  if (from.gfxcnl() != 0) {
    set_gfxcnl(from.gfxcnl());
  }
  if (from.fadeinduration() != 0) {
    set_fadeinduration(from.fadeinduration());
  }
  if (from.fadeoutduration() != 0) {
    set_fadeoutduration(from.fadeoutduration());
  }
}

void Value_GFX_Fade_In_Out_Duration_GFXFadeDuration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.GFXFadeDuration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_GFX_Fade_In_Out_Duration_GFXFadeDuration::CopyFrom(const Value_GFX_Fade_In_Out_Duration_GFXFadeDuration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.GFXFadeDuration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_GFX_Fade_In_Out_Duration_GFXFadeDuration::IsInitialized() const {
  return true;
}

void Value_GFX_Fade_In_Out_Duration_GFXFadeDuration::Swap(Value_GFX_Fade_In_Out_Duration_GFXFadeDuration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_GFX_Fade_In_Out_Duration_GFXFadeDuration::InternalSwap(Value_GFX_Fade_In_Out_Duration_GFXFadeDuration* other) {
  using std::swap;
  swap(targetcnlid_, other->targetcnlid_);
  swap(gfxcnl_, other->gfxcnl_);
  swap(fadeinduration_, other->fadeinduration_);
  swap(fadeoutduration_, other->fadeoutduration_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_GFX_Fade_In_Out_Duration_GFXFadeDuration::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_GFX_Fade_In_Out_Duration_PGMGFX::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_GFX_Fade_In_Out_Duration_PGMGFX::kCountFieldNumber;
const int Value_GFX_Fade_In_Out_Duration_PGMGFX::kGfxFadeDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_GFX_Fade_In_Out_Duration_PGMGFX::Value_GFX_Fade_In_Out_Duration_PGMGFX()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_GFX_Fade_In_Out_Duration_PGMGFX.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.PGMGFX)
}
Value_GFX_Fade_In_Out_Duration_PGMGFX::Value_GFX_Fade_In_Out_Duration_PGMGFX(const Value_GFX_Fade_In_Out_Duration_PGMGFX& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      gfxfadeduration_(from.gfxfadeduration_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.PGMGFX)
}

void Value_GFX_Fade_In_Out_Duration_PGMGFX::SharedCtor() {
  count_ = 0u;
}

Value_GFX_Fade_In_Out_Duration_PGMGFX::~Value_GFX_Fade_In_Out_Duration_PGMGFX() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.PGMGFX)
  SharedDtor();
}

void Value_GFX_Fade_In_Out_Duration_PGMGFX::SharedDtor() {
}

void Value_GFX_Fade_In_Out_Duration_PGMGFX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_GFX_Fade_In_Out_Duration_PGMGFX::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_GFX_Fade_In_Out_Duration_PGMGFX& Value_GFX_Fade_In_Out_Duration_PGMGFX::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_GFX_Fade_In_Out_Duration_PGMGFX.base);
  return *internal_default_instance();
}


void Value_GFX_Fade_In_Out_Duration_PGMGFX::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.PGMGFX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gfxfadeduration_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_GFX_Fade_In_Out_Duration_PGMGFX::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.PGMGFX)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.GFXFadeDuration gfxFadeDuration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_gfxfadeduration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.PGMGFX)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.PGMGFX)
  return false;
#undef DO_
}

void Value_GFX_Fade_In_Out_Duration_PGMGFX::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.PGMGFX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.GFXFadeDuration gfxFadeDuration = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gfxfadeduration_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->gfxfadeduration(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.PGMGFX)
}

::google::protobuf::uint8* Value_GFX_Fade_In_Out_Duration_PGMGFX::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.PGMGFX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.GFXFadeDuration gfxFadeDuration = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gfxfadeduration_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->gfxfadeduration(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.PGMGFX)
  return target;
}

size_t Value_GFX_Fade_In_Out_Duration_PGMGFX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.PGMGFX)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.GFXFadeDuration gfxFadeDuration = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->gfxfadeduration_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->gfxfadeduration(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_GFX_Fade_In_Out_Duration_PGMGFX::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.PGMGFX)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_GFX_Fade_In_Out_Duration_PGMGFX* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_GFX_Fade_In_Out_Duration_PGMGFX>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.PGMGFX)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.PGMGFX)
    MergeFrom(*source);
  }
}

void Value_GFX_Fade_In_Out_Duration_PGMGFX::MergeFrom(const Value_GFX_Fade_In_Out_Duration_PGMGFX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.PGMGFX)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gfxfadeduration_.MergeFrom(from.gfxfadeduration_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_GFX_Fade_In_Out_Duration_PGMGFX::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.PGMGFX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_GFX_Fade_In_Out_Duration_PGMGFX::CopyFrom(const Value_GFX_Fade_In_Out_Duration_PGMGFX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.PGMGFX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_GFX_Fade_In_Out_Duration_PGMGFX::IsInitialized() const {
  return true;
}

void Value_GFX_Fade_In_Out_Duration_PGMGFX::Swap(Value_GFX_Fade_In_Out_Duration_PGMGFX* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_GFX_Fade_In_Out_Duration_PGMGFX::InternalSwap(Value_GFX_Fade_In_Out_Duration_PGMGFX* other) {
  using std::swap;
  CastToBase(&gfxfadeduration_)->InternalSwap(CastToBase(&other->gfxfadeduration_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_GFX_Fade_In_Out_Duration_PGMGFX::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_GFX_Fade_In_Out_Duration::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_GFX_Fade_In_Out_Duration::kPgmCountFieldNumber;
const int Value_GFX_Fade_In_Out_Duration::kPgmGfxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_GFX_Fade_In_Out_Duration::Value_GFX_Fade_In_Out_Duration()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_GFX_Fade_In_Out_Duration.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration)
}
Value_GFX_Fade_In_Out_Duration::Value_GFX_Fade_In_Out_Duration(const Value_GFX_Fade_In_Out_Duration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pgmgfx_(from.pgmgfx_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pgmcount_ = from.pgmcount_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration)
}

void Value_GFX_Fade_In_Out_Duration::SharedCtor() {
  pgmcount_ = 0u;
}

Value_GFX_Fade_In_Out_Duration::~Value_GFX_Fade_In_Out_Duration() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration)
  SharedDtor();
}

void Value_GFX_Fade_In_Out_Duration::SharedDtor() {
}

void Value_GFX_Fade_In_Out_Duration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_GFX_Fade_In_Out_Duration::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_GFX_Fade_In_Out_Duration& Value_GFX_Fade_In_Out_Duration::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_GFX_Fade_In_Out_Duration.base);
  return *internal_default_instance();
}


void Value_GFX_Fade_In_Out_Duration::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pgmgfx_.Clear();
  pgmcount_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_GFX_Fade_In_Out_Duration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 pgmCount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pgmcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.PGMGFX pgmGfx = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pgmgfx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration)
  return false;
#undef DO_
}

void Value_GFX_Fade_In_Out_Duration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 pgmCount = 1;
  if (this->pgmcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pgmcount(), output);
  }

  // repeated .GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.PGMGFX pgmGfx = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pgmgfx_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->pgmgfx(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration)
}

::google::protobuf::uint8* Value_GFX_Fade_In_Out_Duration::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 pgmCount = 1;
  if (this->pgmcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pgmcount(), target);
  }

  // repeated .GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.PGMGFX pgmGfx = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pgmgfx_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->pgmgfx(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration)
  return target;
}

size_t Value_GFX_Fade_In_Out_Duration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_GFX_Fade_In_Out_Duration.PGMGFX pgmGfx = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->pgmgfx_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pgmgfx(static_cast<int>(i)));
    }
  }

  // uint32 pgmCount = 1;
  if (this->pgmcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pgmcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_GFX_Fade_In_Out_Duration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_GFX_Fade_In_Out_Duration* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_GFX_Fade_In_Out_Duration>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration)
    MergeFrom(*source);
  }
}

void Value_GFX_Fade_In_Out_Duration::MergeFrom(const Value_GFX_Fade_In_Out_Duration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pgmgfx_.MergeFrom(from.pgmgfx_);
  if (from.pgmcount() != 0) {
    set_pgmcount(from.pgmcount());
  }
}

void Value_GFX_Fade_In_Out_Duration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_GFX_Fade_In_Out_Duration::CopyFrom(const Value_GFX_Fade_In_Out_Duration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_GFX_Fade_In_Out_Duration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_GFX_Fade_In_Out_Duration::IsInitialized() const {
  return true;
}

void Value_GFX_Fade_In_Out_Duration::Swap(Value_GFX_Fade_In_Out_Duration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_GFX_Fade_In_Out_Duration::InternalSwap(Value_GFX_Fade_In_Out_Duration* other) {
  using std::swap;
  CastToBase(&pgmgfx_)->InternalSwap(CastToBase(&other->pgmgfx_));
  swap(pgmcount_, other->pgmcount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_GFX_Fade_In_Out_Duration::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_GFX_Loop_In_Out_GFXLoopInOut::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_GFX_Loop_In_Out_GFXLoopInOut::kTargetCnlIDFieldNumber;
const int Value_GFX_Loop_In_Out_GFXLoopInOut::kGfxCnlFieldNumber;
const int Value_GFX_Loop_In_Out_GFXLoopInOut::kLoopInFieldNumber;
const int Value_GFX_Loop_In_Out_GFXLoopInOut::kLoopOutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_GFX_Loop_In_Out_GFXLoopInOut::Value_GFX_Loop_In_Out_GFXLoopInOut()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_GFX_Loop_In_Out_GFXLoopInOut.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_GFX_Loop_In_Out.GFXLoopInOut)
}
Value_GFX_Loop_In_Out_GFXLoopInOut::Value_GFX_Loop_In_Out_GFXLoopInOut(const Value_GFX_Loop_In_Out_GFXLoopInOut& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&targetcnlid_, &from.targetcnlid_,
    static_cast<size_t>(reinterpret_cast<char*>(&loopout_) -
    reinterpret_cast<char*>(&targetcnlid_)) + sizeof(loopout_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_GFX_Loop_In_Out.GFXLoopInOut)
}

void Value_GFX_Loop_In_Out_GFXLoopInOut::SharedCtor() {
  ::memset(&targetcnlid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loopout_) -
      reinterpret_cast<char*>(&targetcnlid_)) + sizeof(loopout_));
}

Value_GFX_Loop_In_Out_GFXLoopInOut::~Value_GFX_Loop_In_Out_GFXLoopInOut() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_GFX_Loop_In_Out.GFXLoopInOut)
  SharedDtor();
}

void Value_GFX_Loop_In_Out_GFXLoopInOut::SharedDtor() {
}

void Value_GFX_Loop_In_Out_GFXLoopInOut::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_GFX_Loop_In_Out_GFXLoopInOut::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_GFX_Loop_In_Out_GFXLoopInOut& Value_GFX_Loop_In_Out_GFXLoopInOut::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_GFX_Loop_In_Out_GFXLoopInOut.base);
  return *internal_default_instance();
}


void Value_GFX_Loop_In_Out_GFXLoopInOut::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_GFX_Loop_In_Out.GFXLoopInOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&targetcnlid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loopout_) -
      reinterpret_cast<char*>(&targetcnlid_)) + sizeof(loopout_));
  _internal_metadata_.Clear();
}

bool Value_GFX_Loop_In_Out_GFXLoopInOut::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_GFX_Loop_In_Out.GFXLoopInOut)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.CnlID targetCnlID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_targetcnlid(static_cast< ::GoogleProtoBB::CnlID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.GFxCnl gfxCnl = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_gfxcnl(static_cast< ::GoogleProtoBB::GFxCnl >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 loopIn = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &loopin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 loopOut = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &loopout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_GFX_Loop_In_Out.GFXLoopInOut)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_GFX_Loop_In_Out.GFXLoopInOut)
  return false;
#undef DO_
}

void Value_GFX_Loop_In_Out_GFXLoopInOut::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_GFX_Loop_In_Out.GFXLoopInOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID targetCnlID = 1;
  if (this->targetcnlid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->targetcnlid(), output);
  }

  // .GoogleProtoBB.GFxCnl gfxCnl = 2;
  if (this->gfxcnl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->gfxcnl(), output);
  }

  // uint32 loopIn = 3;
  if (this->loopin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->loopin(), output);
  }

  // uint32 loopOut = 4;
  if (this->loopout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->loopout(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_GFX_Loop_In_Out.GFXLoopInOut)
}

::google::protobuf::uint8* Value_GFX_Loop_In_Out_GFXLoopInOut::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_GFX_Loop_In_Out.GFXLoopInOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID targetCnlID = 1;
  if (this->targetcnlid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->targetcnlid(), target);
  }

  // .GoogleProtoBB.GFxCnl gfxCnl = 2;
  if (this->gfxcnl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->gfxcnl(), target);
  }

  // uint32 loopIn = 3;
  if (this->loopin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->loopin(), target);
  }

  // uint32 loopOut = 4;
  if (this->loopout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->loopout(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_GFX_Loop_In_Out.GFXLoopInOut)
  return target;
}

size_t Value_GFX_Loop_In_Out_GFXLoopInOut::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_GFX_Loop_In_Out.GFXLoopInOut)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GoogleProtoBB.CnlID targetCnlID = 1;
  if (this->targetcnlid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->targetcnlid());
  }

  // .GoogleProtoBB.GFxCnl gfxCnl = 2;
  if (this->gfxcnl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gfxcnl());
  }

  // uint32 loopIn = 3;
  if (this->loopin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->loopin());
  }

  // uint32 loopOut = 4;
  if (this->loopout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->loopout());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_GFX_Loop_In_Out_GFXLoopInOut::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_GFX_Loop_In_Out.GFXLoopInOut)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_GFX_Loop_In_Out_GFXLoopInOut* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_GFX_Loop_In_Out_GFXLoopInOut>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_GFX_Loop_In_Out.GFXLoopInOut)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_GFX_Loop_In_Out.GFXLoopInOut)
    MergeFrom(*source);
  }
}

void Value_GFX_Loop_In_Out_GFXLoopInOut::MergeFrom(const Value_GFX_Loop_In_Out_GFXLoopInOut& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_GFX_Loop_In_Out.GFXLoopInOut)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.targetcnlid() != 0) {
    set_targetcnlid(from.targetcnlid());
  }
  if (from.gfxcnl() != 0) {
    set_gfxcnl(from.gfxcnl());
  }
  if (from.loopin() != 0) {
    set_loopin(from.loopin());
  }
  if (from.loopout() != 0) {
    set_loopout(from.loopout());
  }
}

void Value_GFX_Loop_In_Out_GFXLoopInOut::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_GFX_Loop_In_Out.GFXLoopInOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_GFX_Loop_In_Out_GFXLoopInOut::CopyFrom(const Value_GFX_Loop_In_Out_GFXLoopInOut& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_GFX_Loop_In_Out.GFXLoopInOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_GFX_Loop_In_Out_GFXLoopInOut::IsInitialized() const {
  return true;
}

void Value_GFX_Loop_In_Out_GFXLoopInOut::Swap(Value_GFX_Loop_In_Out_GFXLoopInOut* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_GFX_Loop_In_Out_GFXLoopInOut::InternalSwap(Value_GFX_Loop_In_Out_GFXLoopInOut* other) {
  using std::swap;
  swap(targetcnlid_, other->targetcnlid_);
  swap(gfxcnl_, other->gfxcnl_);
  swap(loopin_, other->loopin_);
  swap(loopout_, other->loopout_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_GFX_Loop_In_Out_GFXLoopInOut::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_GFX_Loop_In_Out_PGMGFX::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_GFX_Loop_In_Out_PGMGFX::kCountFieldNumber;
const int Value_GFX_Loop_In_Out_PGMGFX::kGfxLoopInOutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_GFX_Loop_In_Out_PGMGFX::Value_GFX_Loop_In_Out_PGMGFX()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_GFX_Loop_In_Out_PGMGFX.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_GFX_Loop_In_Out.PGMGFX)
}
Value_GFX_Loop_In_Out_PGMGFX::Value_GFX_Loop_In_Out_PGMGFX(const Value_GFX_Loop_In_Out_PGMGFX& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      gfxloopinout_(from.gfxloopinout_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_GFX_Loop_In_Out.PGMGFX)
}

void Value_GFX_Loop_In_Out_PGMGFX::SharedCtor() {
  count_ = 0u;
}

Value_GFX_Loop_In_Out_PGMGFX::~Value_GFX_Loop_In_Out_PGMGFX() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_GFX_Loop_In_Out.PGMGFX)
  SharedDtor();
}

void Value_GFX_Loop_In_Out_PGMGFX::SharedDtor() {
}

void Value_GFX_Loop_In_Out_PGMGFX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_GFX_Loop_In_Out_PGMGFX::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_GFX_Loop_In_Out_PGMGFX& Value_GFX_Loop_In_Out_PGMGFX::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_GFX_Loop_In_Out_PGMGFX.base);
  return *internal_default_instance();
}


void Value_GFX_Loop_In_Out_PGMGFX::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_GFX_Loop_In_Out.PGMGFX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gfxloopinout_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_GFX_Loop_In_Out_PGMGFX::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_GFX_Loop_In_Out.PGMGFX)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_GFX_Loop_In_Out.GFXLoopInOut gfxLoopInOut = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_gfxloopinout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_GFX_Loop_In_Out.PGMGFX)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_GFX_Loop_In_Out.PGMGFX)
  return false;
#undef DO_
}

void Value_GFX_Loop_In_Out_PGMGFX::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_GFX_Loop_In_Out.PGMGFX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_GFX_Loop_In_Out.GFXLoopInOut gfxLoopInOut = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gfxloopinout_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->gfxloopinout(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_GFX_Loop_In_Out.PGMGFX)
}

::google::protobuf::uint8* Value_GFX_Loop_In_Out_PGMGFX::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_GFX_Loop_In_Out.PGMGFX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_GFX_Loop_In_Out.GFXLoopInOut gfxLoopInOut = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gfxloopinout_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->gfxloopinout(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_GFX_Loop_In_Out.PGMGFX)
  return target;
}

size_t Value_GFX_Loop_In_Out_PGMGFX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_GFX_Loop_In_Out.PGMGFX)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_GFX_Loop_In_Out.GFXLoopInOut gfxLoopInOut = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->gfxloopinout_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->gfxloopinout(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_GFX_Loop_In_Out_PGMGFX::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_GFX_Loop_In_Out.PGMGFX)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_GFX_Loop_In_Out_PGMGFX* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_GFX_Loop_In_Out_PGMGFX>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_GFX_Loop_In_Out.PGMGFX)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_GFX_Loop_In_Out.PGMGFX)
    MergeFrom(*source);
  }
}

void Value_GFX_Loop_In_Out_PGMGFX::MergeFrom(const Value_GFX_Loop_In_Out_PGMGFX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_GFX_Loop_In_Out.PGMGFX)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gfxloopinout_.MergeFrom(from.gfxloopinout_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_GFX_Loop_In_Out_PGMGFX::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_GFX_Loop_In_Out.PGMGFX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_GFX_Loop_In_Out_PGMGFX::CopyFrom(const Value_GFX_Loop_In_Out_PGMGFX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_GFX_Loop_In_Out.PGMGFX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_GFX_Loop_In_Out_PGMGFX::IsInitialized() const {
  return true;
}

void Value_GFX_Loop_In_Out_PGMGFX::Swap(Value_GFX_Loop_In_Out_PGMGFX* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_GFX_Loop_In_Out_PGMGFX::InternalSwap(Value_GFX_Loop_In_Out_PGMGFX* other) {
  using std::swap;
  CastToBase(&gfxloopinout_)->InternalSwap(CastToBase(&other->gfxloopinout_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_GFX_Loop_In_Out_PGMGFX::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_GFX_Loop_In_Out::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_GFX_Loop_In_Out::kPgmCountFieldNumber;
const int Value_GFX_Loop_In_Out::kPgmGfxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_GFX_Loop_In_Out::Value_GFX_Loop_In_Out()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_GFX_Loop_In_Out.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_GFX_Loop_In_Out)
}
Value_GFX_Loop_In_Out::Value_GFX_Loop_In_Out(const Value_GFX_Loop_In_Out& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pgmgfx_(from.pgmgfx_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pgmcount_ = from.pgmcount_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_GFX_Loop_In_Out)
}

void Value_GFX_Loop_In_Out::SharedCtor() {
  pgmcount_ = 0u;
}

Value_GFX_Loop_In_Out::~Value_GFX_Loop_In_Out() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_GFX_Loop_In_Out)
  SharedDtor();
}

void Value_GFX_Loop_In_Out::SharedDtor() {
}

void Value_GFX_Loop_In_Out::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_GFX_Loop_In_Out::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_GFX_Loop_In_Out& Value_GFX_Loop_In_Out::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_GFX_Loop_In_Out.base);
  return *internal_default_instance();
}


void Value_GFX_Loop_In_Out::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_GFX_Loop_In_Out)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pgmgfx_.Clear();
  pgmcount_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_GFX_Loop_In_Out::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_GFX_Loop_In_Out)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 pgmCount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pgmcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_GFX_Loop_In_Out.PGMGFX pgmGfx = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pgmgfx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_GFX_Loop_In_Out)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_GFX_Loop_In_Out)
  return false;
#undef DO_
}

void Value_GFX_Loop_In_Out::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_GFX_Loop_In_Out)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 pgmCount = 1;
  if (this->pgmcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pgmcount(), output);
  }

  // repeated .GoogleProtoBB.Value_GFX_Loop_In_Out.PGMGFX pgmGfx = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pgmgfx_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->pgmgfx(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_GFX_Loop_In_Out)
}

::google::protobuf::uint8* Value_GFX_Loop_In_Out::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_GFX_Loop_In_Out)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 pgmCount = 1;
  if (this->pgmcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pgmcount(), target);
  }

  // repeated .GoogleProtoBB.Value_GFX_Loop_In_Out.PGMGFX pgmGfx = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pgmgfx_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->pgmgfx(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_GFX_Loop_In_Out)
  return target;
}

size_t Value_GFX_Loop_In_Out::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_GFX_Loop_In_Out)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_GFX_Loop_In_Out.PGMGFX pgmGfx = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->pgmgfx_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pgmgfx(static_cast<int>(i)));
    }
  }

  // uint32 pgmCount = 1;
  if (this->pgmcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pgmcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_GFX_Loop_In_Out::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_GFX_Loop_In_Out)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_GFX_Loop_In_Out* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_GFX_Loop_In_Out>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_GFX_Loop_In_Out)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_GFX_Loop_In_Out)
    MergeFrom(*source);
  }
}

void Value_GFX_Loop_In_Out::MergeFrom(const Value_GFX_Loop_In_Out& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_GFX_Loop_In_Out)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pgmgfx_.MergeFrom(from.pgmgfx_);
  if (from.pgmcount() != 0) {
    set_pgmcount(from.pgmcount());
  }
}

void Value_GFX_Loop_In_Out::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_GFX_Loop_In_Out)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_GFX_Loop_In_Out::CopyFrom(const Value_GFX_Loop_In_Out& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_GFX_Loop_In_Out)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_GFX_Loop_In_Out::IsInitialized() const {
  return true;
}

void Value_GFX_Loop_In_Out::Swap(Value_GFX_Loop_In_Out* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_GFX_Loop_In_Out::InternalSwap(Value_GFX_Loop_In_Out* other) {
  using std::swap;
  CastToBase(&pgmgfx_)->InternalSwap(CastToBase(&other->pgmgfx_));
  swap(pgmcount_, other->pgmcount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_GFX_Loop_In_Out::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_GFX_Loop_Count_GFXLoopCnt::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_GFX_Loop_Count_GFXLoopCnt::kTargetCnlIDFieldNumber;
const int Value_GFX_Loop_Count_GFXLoopCnt::kGfxCnlFieldNumber;
const int Value_GFX_Loop_Count_GFXLoopCnt::kLoopCntFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_GFX_Loop_Count_GFXLoopCnt::Value_GFX_Loop_Count_GFXLoopCnt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_GFX_Loop_Count_GFXLoopCnt.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_GFX_Loop_Count.GFXLoopCnt)
}
Value_GFX_Loop_Count_GFXLoopCnt::Value_GFX_Loop_Count_GFXLoopCnt(const Value_GFX_Loop_Count_GFXLoopCnt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&targetcnlid_, &from.targetcnlid_,
    static_cast<size_t>(reinterpret_cast<char*>(&loopcnt_) -
    reinterpret_cast<char*>(&targetcnlid_)) + sizeof(loopcnt_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_GFX_Loop_Count.GFXLoopCnt)
}

void Value_GFX_Loop_Count_GFXLoopCnt::SharedCtor() {
  ::memset(&targetcnlid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loopcnt_) -
      reinterpret_cast<char*>(&targetcnlid_)) + sizeof(loopcnt_));
}

Value_GFX_Loop_Count_GFXLoopCnt::~Value_GFX_Loop_Count_GFXLoopCnt() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_GFX_Loop_Count.GFXLoopCnt)
  SharedDtor();
}

void Value_GFX_Loop_Count_GFXLoopCnt::SharedDtor() {
}

void Value_GFX_Loop_Count_GFXLoopCnt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_GFX_Loop_Count_GFXLoopCnt::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_GFX_Loop_Count_GFXLoopCnt& Value_GFX_Loop_Count_GFXLoopCnt::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_GFX_Loop_Count_GFXLoopCnt.base);
  return *internal_default_instance();
}


void Value_GFX_Loop_Count_GFXLoopCnt::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_GFX_Loop_Count.GFXLoopCnt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&targetcnlid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loopcnt_) -
      reinterpret_cast<char*>(&targetcnlid_)) + sizeof(loopcnt_));
  _internal_metadata_.Clear();
}

bool Value_GFX_Loop_Count_GFXLoopCnt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_GFX_Loop_Count.GFXLoopCnt)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.CnlID targetCnlID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_targetcnlid(static_cast< ::GoogleProtoBB::CnlID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.GFxCnl gfxCnl = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_gfxcnl(static_cast< ::GoogleProtoBB::GFxCnl >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 loopCnt = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &loopcnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_GFX_Loop_Count.GFXLoopCnt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_GFX_Loop_Count.GFXLoopCnt)
  return false;
#undef DO_
}

void Value_GFX_Loop_Count_GFXLoopCnt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_GFX_Loop_Count.GFXLoopCnt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID targetCnlID = 1;
  if (this->targetcnlid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->targetcnlid(), output);
  }

  // .GoogleProtoBB.GFxCnl gfxCnl = 2;
  if (this->gfxcnl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->gfxcnl(), output);
  }

  // uint32 loopCnt = 3;
  if (this->loopcnt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->loopcnt(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_GFX_Loop_Count.GFXLoopCnt)
}

::google::protobuf::uint8* Value_GFX_Loop_Count_GFXLoopCnt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_GFX_Loop_Count.GFXLoopCnt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID targetCnlID = 1;
  if (this->targetcnlid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->targetcnlid(), target);
  }

  // .GoogleProtoBB.GFxCnl gfxCnl = 2;
  if (this->gfxcnl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->gfxcnl(), target);
  }

  // uint32 loopCnt = 3;
  if (this->loopcnt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->loopcnt(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_GFX_Loop_Count.GFXLoopCnt)
  return target;
}

size_t Value_GFX_Loop_Count_GFXLoopCnt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_GFX_Loop_Count.GFXLoopCnt)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GoogleProtoBB.CnlID targetCnlID = 1;
  if (this->targetcnlid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->targetcnlid());
  }

  // .GoogleProtoBB.GFxCnl gfxCnl = 2;
  if (this->gfxcnl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gfxcnl());
  }

  // uint32 loopCnt = 3;
  if (this->loopcnt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->loopcnt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_GFX_Loop_Count_GFXLoopCnt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_GFX_Loop_Count.GFXLoopCnt)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_GFX_Loop_Count_GFXLoopCnt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_GFX_Loop_Count_GFXLoopCnt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_GFX_Loop_Count.GFXLoopCnt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_GFX_Loop_Count.GFXLoopCnt)
    MergeFrom(*source);
  }
}

void Value_GFX_Loop_Count_GFXLoopCnt::MergeFrom(const Value_GFX_Loop_Count_GFXLoopCnt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_GFX_Loop_Count.GFXLoopCnt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.targetcnlid() != 0) {
    set_targetcnlid(from.targetcnlid());
  }
  if (from.gfxcnl() != 0) {
    set_gfxcnl(from.gfxcnl());
  }
  if (from.loopcnt() != 0) {
    set_loopcnt(from.loopcnt());
  }
}

void Value_GFX_Loop_Count_GFXLoopCnt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_GFX_Loop_Count.GFXLoopCnt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_GFX_Loop_Count_GFXLoopCnt::CopyFrom(const Value_GFX_Loop_Count_GFXLoopCnt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_GFX_Loop_Count.GFXLoopCnt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_GFX_Loop_Count_GFXLoopCnt::IsInitialized() const {
  return true;
}

void Value_GFX_Loop_Count_GFXLoopCnt::Swap(Value_GFX_Loop_Count_GFXLoopCnt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_GFX_Loop_Count_GFXLoopCnt::InternalSwap(Value_GFX_Loop_Count_GFXLoopCnt* other) {
  using std::swap;
  swap(targetcnlid_, other->targetcnlid_);
  swap(gfxcnl_, other->gfxcnl_);
  swap(loopcnt_, other->loopcnt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_GFX_Loop_Count_GFXLoopCnt::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_GFX_Loop_Count_PGMGFX::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_GFX_Loop_Count_PGMGFX::kCountFieldNumber;
const int Value_GFX_Loop_Count_PGMGFX::kGfxLoopCntFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_GFX_Loop_Count_PGMGFX::Value_GFX_Loop_Count_PGMGFX()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_GFX_Loop_Count_PGMGFX.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_GFX_Loop_Count.PGMGFX)
}
Value_GFX_Loop_Count_PGMGFX::Value_GFX_Loop_Count_PGMGFX(const Value_GFX_Loop_Count_PGMGFX& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      gfxloopcnt_(from.gfxloopcnt_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_GFX_Loop_Count.PGMGFX)
}

void Value_GFX_Loop_Count_PGMGFX::SharedCtor() {
  count_ = 0u;
}

Value_GFX_Loop_Count_PGMGFX::~Value_GFX_Loop_Count_PGMGFX() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_GFX_Loop_Count.PGMGFX)
  SharedDtor();
}

void Value_GFX_Loop_Count_PGMGFX::SharedDtor() {
}

void Value_GFX_Loop_Count_PGMGFX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_GFX_Loop_Count_PGMGFX::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_GFX_Loop_Count_PGMGFX& Value_GFX_Loop_Count_PGMGFX::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_GFX_Loop_Count_PGMGFX.base);
  return *internal_default_instance();
}


void Value_GFX_Loop_Count_PGMGFX::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_GFX_Loop_Count.PGMGFX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gfxloopcnt_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_GFX_Loop_Count_PGMGFX::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_GFX_Loop_Count.PGMGFX)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_GFX_Loop_Count.GFXLoopCnt gfxLoopCnt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_gfxloopcnt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_GFX_Loop_Count.PGMGFX)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_GFX_Loop_Count.PGMGFX)
  return false;
#undef DO_
}

void Value_GFX_Loop_Count_PGMGFX::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_GFX_Loop_Count.PGMGFX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_GFX_Loop_Count.GFXLoopCnt gfxLoopCnt = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gfxloopcnt_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->gfxloopcnt(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_GFX_Loop_Count.PGMGFX)
}

::google::protobuf::uint8* Value_GFX_Loop_Count_PGMGFX::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_GFX_Loop_Count.PGMGFX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_GFX_Loop_Count.GFXLoopCnt gfxLoopCnt = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gfxloopcnt_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->gfxloopcnt(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_GFX_Loop_Count.PGMGFX)
  return target;
}

size_t Value_GFX_Loop_Count_PGMGFX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_GFX_Loop_Count.PGMGFX)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_GFX_Loop_Count.GFXLoopCnt gfxLoopCnt = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->gfxloopcnt_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->gfxloopcnt(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_GFX_Loop_Count_PGMGFX::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_GFX_Loop_Count.PGMGFX)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_GFX_Loop_Count_PGMGFX* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_GFX_Loop_Count_PGMGFX>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_GFX_Loop_Count.PGMGFX)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_GFX_Loop_Count.PGMGFX)
    MergeFrom(*source);
  }
}

void Value_GFX_Loop_Count_PGMGFX::MergeFrom(const Value_GFX_Loop_Count_PGMGFX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_GFX_Loop_Count.PGMGFX)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gfxloopcnt_.MergeFrom(from.gfxloopcnt_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_GFX_Loop_Count_PGMGFX::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_GFX_Loop_Count.PGMGFX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_GFX_Loop_Count_PGMGFX::CopyFrom(const Value_GFX_Loop_Count_PGMGFX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_GFX_Loop_Count.PGMGFX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_GFX_Loop_Count_PGMGFX::IsInitialized() const {
  return true;
}

void Value_GFX_Loop_Count_PGMGFX::Swap(Value_GFX_Loop_Count_PGMGFX* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_GFX_Loop_Count_PGMGFX::InternalSwap(Value_GFX_Loop_Count_PGMGFX* other) {
  using std::swap;
  CastToBase(&gfxloopcnt_)->InternalSwap(CastToBase(&other->gfxloopcnt_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_GFX_Loop_Count_PGMGFX::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_GFX_Loop_Count::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_GFX_Loop_Count::kPgmCountFieldNumber;
const int Value_GFX_Loop_Count::kPgmGfxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_GFX_Loop_Count::Value_GFX_Loop_Count()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_GFX_Loop_Count.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_GFX_Loop_Count)
}
Value_GFX_Loop_Count::Value_GFX_Loop_Count(const Value_GFX_Loop_Count& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pgmgfx_(from.pgmgfx_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pgmcount_ = from.pgmcount_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_GFX_Loop_Count)
}

void Value_GFX_Loop_Count::SharedCtor() {
  pgmcount_ = 0u;
}

Value_GFX_Loop_Count::~Value_GFX_Loop_Count() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_GFX_Loop_Count)
  SharedDtor();
}

void Value_GFX_Loop_Count::SharedDtor() {
}

void Value_GFX_Loop_Count::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_GFX_Loop_Count::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_GFX_Loop_Count& Value_GFX_Loop_Count::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_GFX_Loop_Count.base);
  return *internal_default_instance();
}


void Value_GFX_Loop_Count::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_GFX_Loop_Count)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pgmgfx_.Clear();
  pgmcount_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_GFX_Loop_Count::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_GFX_Loop_Count)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 pgmCount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pgmcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_GFX_Loop_Count.PGMGFX pgmGfx = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pgmgfx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_GFX_Loop_Count)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_GFX_Loop_Count)
  return false;
#undef DO_
}

void Value_GFX_Loop_Count::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_GFX_Loop_Count)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 pgmCount = 1;
  if (this->pgmcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pgmcount(), output);
  }

  // repeated .GoogleProtoBB.Value_GFX_Loop_Count.PGMGFX pgmGfx = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pgmgfx_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->pgmgfx(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_GFX_Loop_Count)
}

::google::protobuf::uint8* Value_GFX_Loop_Count::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_GFX_Loop_Count)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 pgmCount = 1;
  if (this->pgmcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pgmcount(), target);
  }

  // repeated .GoogleProtoBB.Value_GFX_Loop_Count.PGMGFX pgmGfx = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pgmgfx_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->pgmgfx(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_GFX_Loop_Count)
  return target;
}

size_t Value_GFX_Loop_Count::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_GFX_Loop_Count)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_GFX_Loop_Count.PGMGFX pgmGfx = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->pgmgfx_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pgmgfx(static_cast<int>(i)));
    }
  }

  // uint32 pgmCount = 1;
  if (this->pgmcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pgmcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_GFX_Loop_Count::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_GFX_Loop_Count)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_GFX_Loop_Count* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_GFX_Loop_Count>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_GFX_Loop_Count)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_GFX_Loop_Count)
    MergeFrom(*source);
  }
}

void Value_GFX_Loop_Count::MergeFrom(const Value_GFX_Loop_Count& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_GFX_Loop_Count)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pgmgfx_.MergeFrom(from.pgmgfx_);
  if (from.pgmcount() != 0) {
    set_pgmcount(from.pgmcount());
  }
}

void Value_GFX_Loop_Count::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_GFX_Loop_Count)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_GFX_Loop_Count::CopyFrom(const Value_GFX_Loop_Count& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_GFX_Loop_Count)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_GFX_Loop_Count::IsInitialized() const {
  return true;
}

void Value_GFX_Loop_Count::Swap(Value_GFX_Loop_Count* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_GFX_Loop_Count::InternalSwap(Value_GFX_Loop_Count* other) {
  using std::swap;
  CastToBase(&pgmgfx_)->InternalSwap(CastToBase(&other->pgmgfx_));
  swap(pgmcount_, other->pgmcount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_GFX_Loop_Count::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_GFX_Preload_Status_GFXPreloadStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_GFX_Preload_Status_GFXPreloadStatus::kGfxCnlFieldNumber;
const int Value_GFX_Preload_Status_GFXPreloadStatus::kPreloadingStatusFieldNumber;
const int Value_GFX_Preload_Status_GFXPreloadStatus::kPreloadNumFieldNumber;
const int Value_GFX_Preload_Status_GFXPreloadStatus::kPreloadDenFieldNumber;
const int Value_GFX_Preload_Status_GFXPreloadStatus::kIdSizeFieldNumber;
const int Value_GFX_Preload_Status_GFXPreloadStatus::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_GFX_Preload_Status_GFXPreloadStatus::Value_GFX_Preload_Status_GFXPreloadStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_GFX_Preload_Status_GFXPreloadStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_GFX_Preload_Status.GFXPreloadStatus)
}
Value_GFX_Preload_Status_GFXPreloadStatus::Value_GFX_Preload_Status_GFXPreloadStatus(const Value_GFX_Preload_Status_GFXPreloadStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  ::memcpy(&gfxcnl_, &from.gfxcnl_,
    static_cast<size_t>(reinterpret_cast<char*>(&idsize_) -
    reinterpret_cast<char*>(&gfxcnl_)) + sizeof(idsize_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_GFX_Preload_Status.GFXPreloadStatus)
}

void Value_GFX_Preload_Status_GFXPreloadStatus::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&gfxcnl_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&idsize_) -
      reinterpret_cast<char*>(&gfxcnl_)) + sizeof(idsize_));
}

Value_GFX_Preload_Status_GFXPreloadStatus::~Value_GFX_Preload_Status_GFXPreloadStatus() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_GFX_Preload_Status.GFXPreloadStatus)
  SharedDtor();
}

void Value_GFX_Preload_Status_GFXPreloadStatus::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Value_GFX_Preload_Status_GFXPreloadStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_GFX_Preload_Status_GFXPreloadStatus::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_GFX_Preload_Status_GFXPreloadStatus& Value_GFX_Preload_Status_GFXPreloadStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_GFX_Preload_Status_GFXPreloadStatus.base);
  return *internal_default_instance();
}


void Value_GFX_Preload_Status_GFXPreloadStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_GFX_Preload_Status.GFXPreloadStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&gfxcnl_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&idsize_) -
      reinterpret_cast<char*>(&gfxcnl_)) + sizeof(idsize_));
  _internal_metadata_.Clear();
}

bool Value_GFX_Preload_Status_GFXPreloadStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_GFX_Preload_Status.GFXPreloadStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.TGAChannel gfxCnl = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_gfxcnl(static_cast< ::GoogleProtoBB::TGAChannel >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.TGAChannelStatus preloadingStatus = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_preloadingstatus(static_cast< ::GoogleProtoBB::TGAChannelStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 preloadNum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &preloadnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 preloadDen = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &preloadden_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 idSize = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &idsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_GFX_Preload_Status.GFXPreloadStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_GFX_Preload_Status.GFXPreloadStatus)
  return false;
#undef DO_
}

void Value_GFX_Preload_Status_GFXPreloadStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_GFX_Preload_Status.GFXPreloadStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.TGAChannel gfxCnl = 1;
  if (this->gfxcnl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->gfxcnl(), output);
  }

  // .GoogleProtoBB.TGAChannelStatus preloadingStatus = 2;
  if (this->preloadingstatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->preloadingstatus(), output);
  }

  // uint32 preloadNum = 3;
  if (this->preloadnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->preloadnum(), output);
  }

  // uint32 preloadDen = 4;
  if (this->preloadden() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->preloadden(), output);
  }

  // uint32 idSize = 5;
  if (this->idsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->idsize(), output);
  }

  // bytes id = 6;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_GFX_Preload_Status.GFXPreloadStatus)
}

::google::protobuf::uint8* Value_GFX_Preload_Status_GFXPreloadStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_GFX_Preload_Status.GFXPreloadStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.TGAChannel gfxCnl = 1;
  if (this->gfxcnl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->gfxcnl(), target);
  }

  // .GoogleProtoBB.TGAChannelStatus preloadingStatus = 2;
  if (this->preloadingstatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->preloadingstatus(), target);
  }

  // uint32 preloadNum = 3;
  if (this->preloadnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->preloadnum(), target);
  }

  // uint32 preloadDen = 4;
  if (this->preloadden() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->preloadden(), target);
  }

  // uint32 idSize = 5;
  if (this->idsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->idsize(), target);
  }

  // bytes id = 6;
  if (this->id().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_GFX_Preload_Status.GFXPreloadStatus)
  return target;
}

size_t Value_GFX_Preload_Status_GFXPreloadStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_GFX_Preload_Status.GFXPreloadStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes id = 6;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->id());
  }

  // .GoogleProtoBB.TGAChannel gfxCnl = 1;
  if (this->gfxcnl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gfxcnl());
  }

  // .GoogleProtoBB.TGAChannelStatus preloadingStatus = 2;
  if (this->preloadingstatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->preloadingstatus());
  }

  // uint32 preloadNum = 3;
  if (this->preloadnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->preloadnum());
  }

  // uint32 preloadDen = 4;
  if (this->preloadden() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->preloadden());
  }

  // uint32 idSize = 5;
  if (this->idsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->idsize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_GFX_Preload_Status_GFXPreloadStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_GFX_Preload_Status.GFXPreloadStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_GFX_Preload_Status_GFXPreloadStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_GFX_Preload_Status_GFXPreloadStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_GFX_Preload_Status.GFXPreloadStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_GFX_Preload_Status.GFXPreloadStatus)
    MergeFrom(*source);
  }
}

void Value_GFX_Preload_Status_GFXPreloadStatus::MergeFrom(const Value_GFX_Preload_Status_GFXPreloadStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_GFX_Preload_Status.GFXPreloadStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.gfxcnl() != 0) {
    set_gfxcnl(from.gfxcnl());
  }
  if (from.preloadingstatus() != 0) {
    set_preloadingstatus(from.preloadingstatus());
  }
  if (from.preloadnum() != 0) {
    set_preloadnum(from.preloadnum());
  }
  if (from.preloadden() != 0) {
    set_preloadden(from.preloadden());
  }
  if (from.idsize() != 0) {
    set_idsize(from.idsize());
  }
}

void Value_GFX_Preload_Status_GFXPreloadStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_GFX_Preload_Status.GFXPreloadStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_GFX_Preload_Status_GFXPreloadStatus::CopyFrom(const Value_GFX_Preload_Status_GFXPreloadStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_GFX_Preload_Status.GFXPreloadStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_GFX_Preload_Status_GFXPreloadStatus::IsInitialized() const {
  return true;
}

void Value_GFX_Preload_Status_GFXPreloadStatus::Swap(Value_GFX_Preload_Status_GFXPreloadStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_GFX_Preload_Status_GFXPreloadStatus::InternalSwap(Value_GFX_Preload_Status_GFXPreloadStatus* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(gfxcnl_, other->gfxcnl_);
  swap(preloadingstatus_, other->preloadingstatus_);
  swap(preloadnum_, other->preloadnum_);
  swap(preloadden_, other->preloadden_);
  swap(idsize_, other->idsize_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_GFX_Preload_Status_GFXPreloadStatus::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_GFX_Preload_Status::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_GFX_Preload_Status::kCountFieldNumber;
const int Value_GFX_Preload_Status::kGfxPreloadStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_GFX_Preload_Status::Value_GFX_Preload_Status()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_GFX_Preload_Status.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_GFX_Preload_Status)
}
Value_GFX_Preload_Status::Value_GFX_Preload_Status(const Value_GFX_Preload_Status& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      gfxpreloadstatus_(from.gfxpreloadstatus_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_GFX_Preload_Status)
}

void Value_GFX_Preload_Status::SharedCtor() {
  count_ = 0u;
}

Value_GFX_Preload_Status::~Value_GFX_Preload_Status() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_GFX_Preload_Status)
  SharedDtor();
}

void Value_GFX_Preload_Status::SharedDtor() {
}

void Value_GFX_Preload_Status::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_GFX_Preload_Status::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_GFX_Preload_Status& Value_GFX_Preload_Status::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_GFX_Preload_Status.base);
  return *internal_default_instance();
}


void Value_GFX_Preload_Status::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_GFX_Preload_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gfxpreloadstatus_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_GFX_Preload_Status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_GFX_Preload_Status)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_GFX_Preload_Status.GFXPreloadStatus gfxPreloadStatus = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_gfxpreloadstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_GFX_Preload_Status)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_GFX_Preload_Status)
  return false;
#undef DO_
}

void Value_GFX_Preload_Status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_GFX_Preload_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_GFX_Preload_Status.GFXPreloadStatus gfxPreloadStatus = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gfxpreloadstatus_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->gfxpreloadstatus(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_GFX_Preload_Status)
}

::google::protobuf::uint8* Value_GFX_Preload_Status::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_GFX_Preload_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_GFX_Preload_Status.GFXPreloadStatus gfxPreloadStatus = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gfxpreloadstatus_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->gfxpreloadstatus(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_GFX_Preload_Status)
  return target;
}

size_t Value_GFX_Preload_Status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_GFX_Preload_Status)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_GFX_Preload_Status.GFXPreloadStatus gfxPreloadStatus = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->gfxpreloadstatus_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->gfxpreloadstatus(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_GFX_Preload_Status::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_GFX_Preload_Status)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_GFX_Preload_Status* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_GFX_Preload_Status>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_GFX_Preload_Status)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_GFX_Preload_Status)
    MergeFrom(*source);
  }
}

void Value_GFX_Preload_Status::MergeFrom(const Value_GFX_Preload_Status& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_GFX_Preload_Status)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gfxpreloadstatus_.MergeFrom(from.gfxpreloadstatus_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_GFX_Preload_Status::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_GFX_Preload_Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_GFX_Preload_Status::CopyFrom(const Value_GFX_Preload_Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_GFX_Preload_Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_GFX_Preload_Status::IsInitialized() const {
  return true;
}

void Value_GFX_Preload_Status::Swap(Value_GFX_Preload_Status* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_GFX_Preload_Status::InternalSwap(Value_GFX_Preload_Status* other) {
  using std::swap;
  CastToBase(&gfxpreloadstatus_)->InternalSwap(CastToBase(&other->gfxpreloadstatus_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_GFX_Preload_Status::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_HealthInfo_Version::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_HealthInfo_Version::kVersion0FieldNumber;
const int Value_HealthInfo_Version::kVersion1FieldNumber;
const int Value_HealthInfo_Version::kVersion2FieldNumber;
const int Value_HealthInfo_Version::kVersion3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_HealthInfo_Version::Value_HealthInfo_Version()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_Version.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_HealthInfo_Version)
}
Value_HealthInfo_Version::Value_HealthInfo_Version(const Value_HealthInfo_Version& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&version0_, &from.version0_,
    static_cast<size_t>(reinterpret_cast<char*>(&version3_) -
    reinterpret_cast<char*>(&version0_)) + sizeof(version3_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_HealthInfo_Version)
}

void Value_HealthInfo_Version::SharedCtor() {
  ::memset(&version0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version3_) -
      reinterpret_cast<char*>(&version0_)) + sizeof(version3_));
}

Value_HealthInfo_Version::~Value_HealthInfo_Version() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_HealthInfo_Version)
  SharedDtor();
}

void Value_HealthInfo_Version::SharedDtor() {
}

void Value_HealthInfo_Version::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_HealthInfo_Version::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_HealthInfo_Version& Value_HealthInfo_Version::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_Version.base);
  return *internal_default_instance();
}


void Value_HealthInfo_Version::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_HealthInfo_Version)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&version0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version3_) -
      reinterpret_cast<char*>(&version0_)) + sizeof(version3_));
  _internal_metadata_.Clear();
}

bool Value_HealthInfo_Version::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_HealthInfo_Version)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 version0 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version0_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 version1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 version2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 version3 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_HealthInfo_Version)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_HealthInfo_Version)
  return false;
#undef DO_
}

void Value_HealthInfo_Version::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_HealthInfo_Version)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 version0 = 1;
  if (this->version0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version0(), output);
  }

  // uint32 version1 = 2;
  if (this->version1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->version1(), output);
  }

  // uint32 version2 = 3;
  if (this->version2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->version2(), output);
  }

  // uint32 version3 = 4;
  if (this->version3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->version3(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_HealthInfo_Version)
}

::google::protobuf::uint8* Value_HealthInfo_Version::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_HealthInfo_Version)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 version0 = 1;
  if (this->version0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version0(), target);
  }

  // uint32 version1 = 2;
  if (this->version1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->version1(), target);
  }

  // uint32 version2 = 3;
  if (this->version2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->version2(), target);
  }

  // uint32 version3 = 4;
  if (this->version3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->version3(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_HealthInfo_Version)
  return target;
}

size_t Value_HealthInfo_Version::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_HealthInfo_Version)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 version0 = 1;
  if (this->version0() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version0());
  }

  // uint32 version1 = 2;
  if (this->version1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version1());
  }

  // uint32 version2 = 3;
  if (this->version2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version2());
  }

  // uint32 version3 = 4;
  if (this->version3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version3());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_HealthInfo_Version::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_HealthInfo_Version)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_HealthInfo_Version* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_HealthInfo_Version>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_HealthInfo_Version)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_HealthInfo_Version)
    MergeFrom(*source);
  }
}

void Value_HealthInfo_Version::MergeFrom(const Value_HealthInfo_Version& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_HealthInfo_Version)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version0() != 0) {
    set_version0(from.version0());
  }
  if (from.version1() != 0) {
    set_version1(from.version1());
  }
  if (from.version2() != 0) {
    set_version2(from.version2());
  }
  if (from.version3() != 0) {
    set_version3(from.version3());
  }
}

void Value_HealthInfo_Version::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_HealthInfo_Version)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_HealthInfo_Version::CopyFrom(const Value_HealthInfo_Version& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_HealthInfo_Version)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_HealthInfo_Version::IsInitialized() const {
  return true;
}

void Value_HealthInfo_Version::Swap(Value_HealthInfo_Version* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_HealthInfo_Version::InternalSwap(Value_HealthInfo_Version* other) {
  using std::swap;
  swap(version0_, other->version0_);
  swap(version1_, other->version1_);
  swap(version2_, other->version2_);
  swap(version3_, other->version3_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_HealthInfo_Version::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_HealthInfo_Mixer_Status::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_HealthInfo_Mixer_Status::kHasConnectedAudioMixerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_HealthInfo_Mixer_Status::Value_HealthInfo_Mixer_Status()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_Mixer_Status.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_HealthInfo_Mixer_Status)
}
Value_HealthInfo_Mixer_Status::Value_HealthInfo_Mixer_Status(const Value_HealthInfo_Mixer_Status& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hasconnectedaudiomixer_ = from.hasconnectedaudiomixer_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_HealthInfo_Mixer_Status)
}

void Value_HealthInfo_Mixer_Status::SharedCtor() {
  hasconnectedaudiomixer_ = false;
}

Value_HealthInfo_Mixer_Status::~Value_HealthInfo_Mixer_Status() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_HealthInfo_Mixer_Status)
  SharedDtor();
}

void Value_HealthInfo_Mixer_Status::SharedDtor() {
}

void Value_HealthInfo_Mixer_Status::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_HealthInfo_Mixer_Status::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_HealthInfo_Mixer_Status& Value_HealthInfo_Mixer_Status::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_Mixer_Status.base);
  return *internal_default_instance();
}


void Value_HealthInfo_Mixer_Status::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_HealthInfo_Mixer_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hasconnectedaudiomixer_ = false;
  _internal_metadata_.Clear();
}

bool Value_HealthInfo_Mixer_Status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_HealthInfo_Mixer_Status)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool hasConnectedAudioMixer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hasconnectedaudiomixer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_HealthInfo_Mixer_Status)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_HealthInfo_Mixer_Status)
  return false;
#undef DO_
}

void Value_HealthInfo_Mixer_Status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_HealthInfo_Mixer_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool hasConnectedAudioMixer = 1;
  if (this->hasconnectedaudiomixer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->hasconnectedaudiomixer(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_HealthInfo_Mixer_Status)
}

::google::protobuf::uint8* Value_HealthInfo_Mixer_Status::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_HealthInfo_Mixer_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool hasConnectedAudioMixer = 1;
  if (this->hasconnectedaudiomixer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->hasconnectedaudiomixer(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_HealthInfo_Mixer_Status)
  return target;
}

size_t Value_HealthInfo_Mixer_Status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_HealthInfo_Mixer_Status)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool hasConnectedAudioMixer = 1;
  if (this->hasconnectedaudiomixer() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_HealthInfo_Mixer_Status::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_HealthInfo_Mixer_Status)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_HealthInfo_Mixer_Status* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_HealthInfo_Mixer_Status>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_HealthInfo_Mixer_Status)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_HealthInfo_Mixer_Status)
    MergeFrom(*source);
  }
}

void Value_HealthInfo_Mixer_Status::MergeFrom(const Value_HealthInfo_Mixer_Status& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_HealthInfo_Mixer_Status)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hasconnectedaudiomixer() != 0) {
    set_hasconnectedaudiomixer(from.hasconnectedaudiomixer());
  }
}

void Value_HealthInfo_Mixer_Status::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_HealthInfo_Mixer_Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_HealthInfo_Mixer_Status::CopyFrom(const Value_HealthInfo_Mixer_Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_HealthInfo_Mixer_Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_HealthInfo_Mixer_Status::IsInitialized() const {
  return true;
}

void Value_HealthInfo_Mixer_Status::Swap(Value_HealthInfo_Mixer_Status* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_HealthInfo_Mixer_Status::InternalSwap(Value_HealthInfo_Mixer_Status* other) {
  using std::swap;
  swap(hasconnectedaudiomixer_, other->hasconnectedaudiomixer_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_HealthInfo_Mixer_Status::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_HealthInfo_Network_Bandwidth::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_HealthInfo_Network_Bandwidth::kNetworkBandwidthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_HealthInfo_Network_Bandwidth::Value_HealthInfo_Network_Bandwidth()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_Network_Bandwidth.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_HealthInfo_Network_Bandwidth)
}
Value_HealthInfo_Network_Bandwidth::Value_HealthInfo_Network_Bandwidth(const Value_HealthInfo_Network_Bandwidth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  networkbandwidth_ = from.networkbandwidth_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_HealthInfo_Network_Bandwidth)
}

void Value_HealthInfo_Network_Bandwidth::SharedCtor() {
  networkbandwidth_ = 0u;
}

Value_HealthInfo_Network_Bandwidth::~Value_HealthInfo_Network_Bandwidth() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_HealthInfo_Network_Bandwidth)
  SharedDtor();
}

void Value_HealthInfo_Network_Bandwidth::SharedDtor() {
}

void Value_HealthInfo_Network_Bandwidth::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_HealthInfo_Network_Bandwidth::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_HealthInfo_Network_Bandwidth& Value_HealthInfo_Network_Bandwidth::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_Network_Bandwidth.base);
  return *internal_default_instance();
}


void Value_HealthInfo_Network_Bandwidth::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_HealthInfo_Network_Bandwidth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  networkbandwidth_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_HealthInfo_Network_Bandwidth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_HealthInfo_Network_Bandwidth)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 networkBandwidth = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &networkbandwidth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_HealthInfo_Network_Bandwidth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_HealthInfo_Network_Bandwidth)
  return false;
#undef DO_
}

void Value_HealthInfo_Network_Bandwidth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_HealthInfo_Network_Bandwidth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 networkBandwidth = 1;
  if (this->networkbandwidth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->networkbandwidth(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_HealthInfo_Network_Bandwidth)
}

::google::protobuf::uint8* Value_HealthInfo_Network_Bandwidth::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_HealthInfo_Network_Bandwidth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 networkBandwidth = 1;
  if (this->networkbandwidth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->networkbandwidth(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_HealthInfo_Network_Bandwidth)
  return target;
}

size_t Value_HealthInfo_Network_Bandwidth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_HealthInfo_Network_Bandwidth)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 networkBandwidth = 1;
  if (this->networkbandwidth() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->networkbandwidth());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_HealthInfo_Network_Bandwidth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_HealthInfo_Network_Bandwidth)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_HealthInfo_Network_Bandwidth* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_HealthInfo_Network_Bandwidth>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_HealthInfo_Network_Bandwidth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_HealthInfo_Network_Bandwidth)
    MergeFrom(*source);
  }
}

void Value_HealthInfo_Network_Bandwidth::MergeFrom(const Value_HealthInfo_Network_Bandwidth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_HealthInfo_Network_Bandwidth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.networkbandwidth() != 0) {
    set_networkbandwidth(from.networkbandwidth());
  }
}

void Value_HealthInfo_Network_Bandwidth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_HealthInfo_Network_Bandwidth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_HealthInfo_Network_Bandwidth::CopyFrom(const Value_HealthInfo_Network_Bandwidth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_HealthInfo_Network_Bandwidth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_HealthInfo_Network_Bandwidth::IsInitialized() const {
  return true;
}

void Value_HealthInfo_Network_Bandwidth::Swap(Value_HealthInfo_Network_Bandwidth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_HealthInfo_Network_Bandwidth::InternalSwap(Value_HealthInfo_Network_Bandwidth* other) {
  using std::swap;
  swap(networkbandwidth_, other->networkbandwidth_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_HealthInfo_Network_Bandwidth::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_HealthInfo_GPU_Temperature::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_HealthInfo_GPU_Temperature::kCountFieldNumber;
const int Value_HealthInfo_GPU_Temperature::kTemperatureGPUFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_HealthInfo_GPU_Temperature::Value_HealthInfo_GPU_Temperature()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_GPU_Temperature.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_HealthInfo_GPU_Temperature)
}
Value_HealthInfo_GPU_Temperature::Value_HealthInfo_GPU_Temperature(const Value_HealthInfo_GPU_Temperature& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      temperaturegpu_(from.temperaturegpu_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_HealthInfo_GPU_Temperature)
}

void Value_HealthInfo_GPU_Temperature::SharedCtor() {
  count_ = 0u;
}

Value_HealthInfo_GPU_Temperature::~Value_HealthInfo_GPU_Temperature() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_HealthInfo_GPU_Temperature)
  SharedDtor();
}

void Value_HealthInfo_GPU_Temperature::SharedDtor() {
}

void Value_HealthInfo_GPU_Temperature::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_HealthInfo_GPU_Temperature::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_HealthInfo_GPU_Temperature& Value_HealthInfo_GPU_Temperature::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_GPU_Temperature.base);
  return *internal_default_instance();
}


void Value_HealthInfo_GPU_Temperature::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_HealthInfo_GPU_Temperature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  temperaturegpu_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_HealthInfo_GPU_Temperature::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_HealthInfo_GPU_Temperature)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 temperatureGPU = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_temperaturegpu())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_temperaturegpu())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_HealthInfo_GPU_Temperature)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_HealthInfo_GPU_Temperature)
  return false;
#undef DO_
}

void Value_HealthInfo_GPU_Temperature::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_HealthInfo_GPU_Temperature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated int32 temperatureGPU = 2;
  if (this->temperaturegpu_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _temperaturegpu_cached_byte_size_));
  }
  for (int i = 0, n = this->temperaturegpu_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->temperaturegpu(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_HealthInfo_GPU_Temperature)
}

::google::protobuf::uint8* Value_HealthInfo_GPU_Temperature::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_HealthInfo_GPU_Temperature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated int32 temperatureGPU = 2;
  if (this->temperaturegpu_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _temperaturegpu_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->temperaturegpu_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_HealthInfo_GPU_Temperature)
  return target;
}

size_t Value_HealthInfo_GPU_Temperature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_HealthInfo_GPU_Temperature)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 temperatureGPU = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->temperaturegpu_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _temperaturegpu_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_HealthInfo_GPU_Temperature::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_HealthInfo_GPU_Temperature)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_HealthInfo_GPU_Temperature* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_HealthInfo_GPU_Temperature>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_HealthInfo_GPU_Temperature)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_HealthInfo_GPU_Temperature)
    MergeFrom(*source);
  }
}

void Value_HealthInfo_GPU_Temperature::MergeFrom(const Value_HealthInfo_GPU_Temperature& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_HealthInfo_GPU_Temperature)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  temperaturegpu_.MergeFrom(from.temperaturegpu_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_HealthInfo_GPU_Temperature::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_HealthInfo_GPU_Temperature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_HealthInfo_GPU_Temperature::CopyFrom(const Value_HealthInfo_GPU_Temperature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_HealthInfo_GPU_Temperature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_HealthInfo_GPU_Temperature::IsInitialized() const {
  return true;
}

void Value_HealthInfo_GPU_Temperature::Swap(Value_HealthInfo_GPU_Temperature* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_HealthInfo_GPU_Temperature::InternalSwap(Value_HealthInfo_GPU_Temperature* other) {
  using std::swap;
  temperaturegpu_.InternalSwap(&other->temperaturegpu_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_HealthInfo_GPU_Temperature::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_HealthInfo_AJA_Status_InfoAJA::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_HealthInfo_AJA_Status_InfoAJA::kTemperatureAJAFieldNumber;
const int Value_HealthInfo_AJA_Status_InfoAJA::kLostAJAFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_HealthInfo_AJA_Status_InfoAJA::Value_HealthInfo_AJA_Status_InfoAJA()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_AJA_Status_InfoAJA.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_HealthInfo_AJA_Status.InfoAJA)
}
Value_HealthInfo_AJA_Status_InfoAJA::Value_HealthInfo_AJA_Status_InfoAJA(const Value_HealthInfo_AJA_Status_InfoAJA& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&temperatureaja_, &from.temperatureaja_,
    static_cast<size_t>(reinterpret_cast<char*>(&lostaja_) -
    reinterpret_cast<char*>(&temperatureaja_)) + sizeof(lostaja_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_HealthInfo_AJA_Status.InfoAJA)
}

void Value_HealthInfo_AJA_Status_InfoAJA::SharedCtor() {
  ::memset(&temperatureaja_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lostaja_) -
      reinterpret_cast<char*>(&temperatureaja_)) + sizeof(lostaja_));
}

Value_HealthInfo_AJA_Status_InfoAJA::~Value_HealthInfo_AJA_Status_InfoAJA() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_HealthInfo_AJA_Status.InfoAJA)
  SharedDtor();
}

void Value_HealthInfo_AJA_Status_InfoAJA::SharedDtor() {
}

void Value_HealthInfo_AJA_Status_InfoAJA::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_HealthInfo_AJA_Status_InfoAJA::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_HealthInfo_AJA_Status_InfoAJA& Value_HealthInfo_AJA_Status_InfoAJA::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_AJA_Status_InfoAJA.base);
  return *internal_default_instance();
}


void Value_HealthInfo_AJA_Status_InfoAJA::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_HealthInfo_AJA_Status.InfoAJA)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&temperatureaja_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lostaja_) -
      reinterpret_cast<char*>(&temperatureaja_)) + sizeof(lostaja_));
  _internal_metadata_.Clear();
}

bool Value_HealthInfo_AJA_Status_InfoAJA::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_HealthInfo_AJA_Status.InfoAJA)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 temperatureAJA = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &temperatureaja_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool lostAJA = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &lostaja_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_HealthInfo_AJA_Status.InfoAJA)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_HealthInfo_AJA_Status.InfoAJA)
  return false;
#undef DO_
}

void Value_HealthInfo_AJA_Status_InfoAJA::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_HealthInfo_AJA_Status.InfoAJA)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 temperatureAJA = 1;
  if (this->temperatureaja() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->temperatureaja(), output);
  }

  // bool lostAJA = 2;
  if (this->lostaja() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->lostaja(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_HealthInfo_AJA_Status.InfoAJA)
}

::google::protobuf::uint8* Value_HealthInfo_AJA_Status_InfoAJA::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_HealthInfo_AJA_Status.InfoAJA)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 temperatureAJA = 1;
  if (this->temperatureaja() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->temperatureaja(), target);
  }

  // bool lostAJA = 2;
  if (this->lostaja() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->lostaja(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_HealthInfo_AJA_Status.InfoAJA)
  return target;
}

size_t Value_HealthInfo_AJA_Status_InfoAJA::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_HealthInfo_AJA_Status.InfoAJA)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 temperatureAJA = 1;
  if (this->temperatureaja() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->temperatureaja());
  }

  // bool lostAJA = 2;
  if (this->lostaja() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_HealthInfo_AJA_Status_InfoAJA::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_HealthInfo_AJA_Status.InfoAJA)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_HealthInfo_AJA_Status_InfoAJA* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_HealthInfo_AJA_Status_InfoAJA>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_HealthInfo_AJA_Status.InfoAJA)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_HealthInfo_AJA_Status.InfoAJA)
    MergeFrom(*source);
  }
}

void Value_HealthInfo_AJA_Status_InfoAJA::MergeFrom(const Value_HealthInfo_AJA_Status_InfoAJA& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_HealthInfo_AJA_Status.InfoAJA)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.temperatureaja() != 0) {
    set_temperatureaja(from.temperatureaja());
  }
  if (from.lostaja() != 0) {
    set_lostaja(from.lostaja());
  }
}

void Value_HealthInfo_AJA_Status_InfoAJA::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_HealthInfo_AJA_Status.InfoAJA)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_HealthInfo_AJA_Status_InfoAJA::CopyFrom(const Value_HealthInfo_AJA_Status_InfoAJA& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_HealthInfo_AJA_Status.InfoAJA)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_HealthInfo_AJA_Status_InfoAJA::IsInitialized() const {
  return true;
}

void Value_HealthInfo_AJA_Status_InfoAJA::Swap(Value_HealthInfo_AJA_Status_InfoAJA* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_HealthInfo_AJA_Status_InfoAJA::InternalSwap(Value_HealthInfo_AJA_Status_InfoAJA* other) {
  using std::swap;
  swap(temperatureaja_, other->temperatureaja_);
  swap(lostaja_, other->lostaja_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_HealthInfo_AJA_Status_InfoAJA::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_HealthInfo_AJA_Status::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_HealthInfo_AJA_Status::kCountFieldNumber;
const int Value_HealthInfo_AJA_Status::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_HealthInfo_AJA_Status::Value_HealthInfo_AJA_Status()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_AJA_Status.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_HealthInfo_AJA_Status)
}
Value_HealthInfo_AJA_Status::Value_HealthInfo_AJA_Status(const Value_HealthInfo_AJA_Status& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      status_(from.status_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_HealthInfo_AJA_Status)
}

void Value_HealthInfo_AJA_Status::SharedCtor() {
  count_ = 0u;
}

Value_HealthInfo_AJA_Status::~Value_HealthInfo_AJA_Status() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_HealthInfo_AJA_Status)
  SharedDtor();
}

void Value_HealthInfo_AJA_Status::SharedDtor() {
}

void Value_HealthInfo_AJA_Status::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_HealthInfo_AJA_Status::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_HealthInfo_AJA_Status& Value_HealthInfo_AJA_Status::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_AJA_Status.base);
  return *internal_default_instance();
}


void Value_HealthInfo_AJA_Status::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_HealthInfo_AJA_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_HealthInfo_AJA_Status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_HealthInfo_AJA_Status)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_HealthInfo_AJA_Status.InfoAJA status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_HealthInfo_AJA_Status)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_HealthInfo_AJA_Status)
  return false;
#undef DO_
}

void Value_HealthInfo_AJA_Status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_HealthInfo_AJA_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_HealthInfo_AJA_Status.InfoAJA status = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->status_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->status(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_HealthInfo_AJA_Status)
}

::google::protobuf::uint8* Value_HealthInfo_AJA_Status::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_HealthInfo_AJA_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_HealthInfo_AJA_Status.InfoAJA status = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->status_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->status(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_HealthInfo_AJA_Status)
  return target;
}

size_t Value_HealthInfo_AJA_Status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_HealthInfo_AJA_Status)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_HealthInfo_AJA_Status.InfoAJA status = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->status_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->status(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_HealthInfo_AJA_Status::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_HealthInfo_AJA_Status)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_HealthInfo_AJA_Status* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_HealthInfo_AJA_Status>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_HealthInfo_AJA_Status)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_HealthInfo_AJA_Status)
    MergeFrom(*source);
  }
}

void Value_HealthInfo_AJA_Status::MergeFrom(const Value_HealthInfo_AJA_Status& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_HealthInfo_AJA_Status)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  status_.MergeFrom(from.status_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_HealthInfo_AJA_Status::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_HealthInfo_AJA_Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_HealthInfo_AJA_Status::CopyFrom(const Value_HealthInfo_AJA_Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_HealthInfo_AJA_Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_HealthInfo_AJA_Status::IsInitialized() const {
  return true;
}

void Value_HealthInfo_AJA_Status::Swap(Value_HealthInfo_AJA_Status* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_HealthInfo_AJA_Status::InternalSwap(Value_HealthInfo_AJA_Status* other) {
  using std::swap;
  CastToBase(&status_)->InternalSwap(CastToBase(&other->status_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_HealthInfo_AJA_Status::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_HealthInfo_HDD_Status::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_HealthInfo_HDD_Status::kHddFaultyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_HealthInfo_HDD_Status::Value_HealthInfo_HDD_Status()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_HDD_Status.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_HealthInfo_HDD_Status)
}
Value_HealthInfo_HDD_Status::Value_HealthInfo_HDD_Status(const Value_HealthInfo_HDD_Status& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hddfaulty_ = from.hddfaulty_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_HealthInfo_HDD_Status)
}

void Value_HealthInfo_HDD_Status::SharedCtor() {
  hddfaulty_ = 0u;
}

Value_HealthInfo_HDD_Status::~Value_HealthInfo_HDD_Status() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_HealthInfo_HDD_Status)
  SharedDtor();
}

void Value_HealthInfo_HDD_Status::SharedDtor() {
}

void Value_HealthInfo_HDD_Status::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_HealthInfo_HDD_Status::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_HealthInfo_HDD_Status& Value_HealthInfo_HDD_Status::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_HDD_Status.base);
  return *internal_default_instance();
}


void Value_HealthInfo_HDD_Status::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_HealthInfo_HDD_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hddfaulty_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_HealthInfo_HDD_Status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_HealthInfo_HDD_Status)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 hddFaulty = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hddfaulty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_HealthInfo_HDD_Status)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_HealthInfo_HDD_Status)
  return false;
#undef DO_
}

void Value_HealthInfo_HDD_Status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_HealthInfo_HDD_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 hddFaulty = 1;
  if (this->hddfaulty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hddfaulty(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_HealthInfo_HDD_Status)
}

::google::protobuf::uint8* Value_HealthInfo_HDD_Status::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_HealthInfo_HDD_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 hddFaulty = 1;
  if (this->hddfaulty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hddfaulty(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_HealthInfo_HDD_Status)
  return target;
}

size_t Value_HealthInfo_HDD_Status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_HealthInfo_HDD_Status)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 hddFaulty = 1;
  if (this->hddfaulty() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hddfaulty());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_HealthInfo_HDD_Status::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_HealthInfo_HDD_Status)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_HealthInfo_HDD_Status* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_HealthInfo_HDD_Status>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_HealthInfo_HDD_Status)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_HealthInfo_HDD_Status)
    MergeFrom(*source);
  }
}

void Value_HealthInfo_HDD_Status::MergeFrom(const Value_HealthInfo_HDD_Status& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_HealthInfo_HDD_Status)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hddfaulty() != 0) {
    set_hddfaulty(from.hddfaulty());
  }
}

void Value_HealthInfo_HDD_Status::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_HealthInfo_HDD_Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_HealthInfo_HDD_Status::CopyFrom(const Value_HealthInfo_HDD_Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_HealthInfo_HDD_Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_HealthInfo_HDD_Status::IsInitialized() const {
  return true;
}

void Value_HealthInfo_HDD_Status::Swap(Value_HealthInfo_HDD_Status* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_HealthInfo_HDD_Status::InternalSwap(Value_HealthInfo_HDD_Status* other) {
  using std::swap;
  swap(hddfaulty_, other->hddfaulty_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_HealthInfo_HDD_Status::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_HealthInfo_ASIO_Status_ValueStatusPair::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_HealthInfo_ASIO_Status_ValueStatusPair::kValFieldNumber;
const int Value_HealthInfo_ASIO_Status_ValueStatusPair::kIsGoodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_HealthInfo_ASIO_Status_ValueStatusPair::Value_HealthInfo_ASIO_Status_ValueStatusPair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_ASIO_Status_ValueStatusPair.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_HealthInfo_ASIO_Status.ValueStatusPair)
}
Value_HealthInfo_ASIO_Status_ValueStatusPair::Value_HealthInfo_ASIO_Status_ValueStatusPair(const Value_HealthInfo_ASIO_Status_ValueStatusPair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&val_, &from.val_,
    static_cast<size_t>(reinterpret_cast<char*>(&isgood_) -
    reinterpret_cast<char*>(&val_)) + sizeof(isgood_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_HealthInfo_ASIO_Status.ValueStatusPair)
}

void Value_HealthInfo_ASIO_Status_ValueStatusPair::SharedCtor() {
  ::memset(&val_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isgood_) -
      reinterpret_cast<char*>(&val_)) + sizeof(isgood_));
}

Value_HealthInfo_ASIO_Status_ValueStatusPair::~Value_HealthInfo_ASIO_Status_ValueStatusPair() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_HealthInfo_ASIO_Status.ValueStatusPair)
  SharedDtor();
}

void Value_HealthInfo_ASIO_Status_ValueStatusPair::SharedDtor() {
}

void Value_HealthInfo_ASIO_Status_ValueStatusPair::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_HealthInfo_ASIO_Status_ValueStatusPair::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_HealthInfo_ASIO_Status_ValueStatusPair& Value_HealthInfo_ASIO_Status_ValueStatusPair::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_ASIO_Status_ValueStatusPair.base);
  return *internal_default_instance();
}


void Value_HealthInfo_ASIO_Status_ValueStatusPair::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_HealthInfo_ASIO_Status.ValueStatusPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&val_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isgood_) -
      reinterpret_cast<char*>(&val_)) + sizeof(isgood_));
  _internal_metadata_.Clear();
}

bool Value_HealthInfo_ASIO_Status_ValueStatusPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_HealthInfo_ASIO_Status.ValueStatusPair)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 val = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &val_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isGood = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isgood_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_HealthInfo_ASIO_Status.ValueStatusPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_HealthInfo_ASIO_Status.ValueStatusPair)
  return false;
#undef DO_
}

void Value_HealthInfo_ASIO_Status_ValueStatusPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_HealthInfo_ASIO_Status.ValueStatusPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 val = 1;
  if (this->val() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->val(), output);
  }

  // bool isGood = 2;
  if (this->isgood() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->isgood(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_HealthInfo_ASIO_Status.ValueStatusPair)
}

::google::protobuf::uint8* Value_HealthInfo_ASIO_Status_ValueStatusPair::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_HealthInfo_ASIO_Status.ValueStatusPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 val = 1;
  if (this->val() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->val(), target);
  }

  // bool isGood = 2;
  if (this->isgood() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->isgood(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_HealthInfo_ASIO_Status.ValueStatusPair)
  return target;
}

size_t Value_HealthInfo_ASIO_Status_ValueStatusPair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_HealthInfo_ASIO_Status.ValueStatusPair)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 val = 1;
  if (this->val() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->val());
  }

  // bool isGood = 2;
  if (this->isgood() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_HealthInfo_ASIO_Status_ValueStatusPair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_HealthInfo_ASIO_Status.ValueStatusPair)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_HealthInfo_ASIO_Status_ValueStatusPair* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_HealthInfo_ASIO_Status_ValueStatusPair>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_HealthInfo_ASIO_Status.ValueStatusPair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_HealthInfo_ASIO_Status.ValueStatusPair)
    MergeFrom(*source);
  }
}

void Value_HealthInfo_ASIO_Status_ValueStatusPair::MergeFrom(const Value_HealthInfo_ASIO_Status_ValueStatusPair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_HealthInfo_ASIO_Status.ValueStatusPair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.val() != 0) {
    set_val(from.val());
  }
  if (from.isgood() != 0) {
    set_isgood(from.isgood());
  }
}

void Value_HealthInfo_ASIO_Status_ValueStatusPair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_HealthInfo_ASIO_Status.ValueStatusPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_HealthInfo_ASIO_Status_ValueStatusPair::CopyFrom(const Value_HealthInfo_ASIO_Status_ValueStatusPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_HealthInfo_ASIO_Status.ValueStatusPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_HealthInfo_ASIO_Status_ValueStatusPair::IsInitialized() const {
  return true;
}

void Value_HealthInfo_ASIO_Status_ValueStatusPair::Swap(Value_HealthInfo_ASIO_Status_ValueStatusPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_HealthInfo_ASIO_Status_ValueStatusPair::InternalSwap(Value_HealthInfo_ASIO_Status_ValueStatusPair* other) {
  using std::swap;
  swap(val_, other->val_);
  swap(isgood_, other->isgood_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_HealthInfo_ASIO_Status_ValueStatusPair::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_HealthInfo_ASIO_Status_AsioStatus::InitAsDefaultInstance() {
  ::GoogleProtoBB::_Value_HealthInfo_ASIO_Status_AsioStatus_default_instance_._instance.get_mutable()->samplerate_ = const_cast< ::GoogleProtoBB::Value_HealthInfo_ASIO_Status_ValueStatusPair*>(
      ::GoogleProtoBB::Value_HealthInfo_ASIO_Status_ValueStatusPair::internal_default_instance());
  ::GoogleProtoBB::_Value_HealthInfo_ASIO_Status_AsioStatus_default_instance_._instance.get_mutable()->buffersize_ = const_cast< ::GoogleProtoBB::Value_HealthInfo_ASIO_Status_ValueStatusPair*>(
      ::GoogleProtoBB::Value_HealthInfo_ASIO_Status_ValueStatusPair::internal_default_instance());
  ::GoogleProtoBB::_Value_HealthInfo_ASIO_Status_AsioStatus_default_instance_._instance.get_mutable()->inputlatency_ = const_cast< ::GoogleProtoBB::Value_HealthInfo_ASIO_Status_ValueStatusPair*>(
      ::GoogleProtoBB::Value_HealthInfo_ASIO_Status_ValueStatusPair::internal_default_instance());
  ::GoogleProtoBB::_Value_HealthInfo_ASIO_Status_AsioStatus_default_instance_._instance.get_mutable()->outputlatency_ = const_cast< ::GoogleProtoBB::Value_HealthInfo_ASIO_Status_ValueStatusPair*>(
      ::GoogleProtoBB::Value_HealthInfo_ASIO_Status_ValueStatusPair::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_HealthInfo_ASIO_Status_AsioStatus::kSampleRateFieldNumber;
const int Value_HealthInfo_ASIO_Status_AsioStatus::kBufferSizeFieldNumber;
const int Value_HealthInfo_ASIO_Status_AsioStatus::kInputLatencyFieldNumber;
const int Value_HealthInfo_ASIO_Status_AsioStatus::kOutputLatencyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_HealthInfo_ASIO_Status_AsioStatus::Value_HealthInfo_ASIO_Status_AsioStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_ASIO_Status_AsioStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_HealthInfo_ASIO_Status.AsioStatus)
}
Value_HealthInfo_ASIO_Status_AsioStatus::Value_HealthInfo_ASIO_Status_AsioStatus(const Value_HealthInfo_ASIO_Status_AsioStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_samplerate()) {
    samplerate_ = new ::GoogleProtoBB::Value_HealthInfo_ASIO_Status_ValueStatusPair(*from.samplerate_);
  } else {
    samplerate_ = NULL;
  }
  if (from.has_buffersize()) {
    buffersize_ = new ::GoogleProtoBB::Value_HealthInfo_ASIO_Status_ValueStatusPair(*from.buffersize_);
  } else {
    buffersize_ = NULL;
  }
  if (from.has_inputlatency()) {
    inputlatency_ = new ::GoogleProtoBB::Value_HealthInfo_ASIO_Status_ValueStatusPair(*from.inputlatency_);
  } else {
    inputlatency_ = NULL;
  }
  if (from.has_outputlatency()) {
    outputlatency_ = new ::GoogleProtoBB::Value_HealthInfo_ASIO_Status_ValueStatusPair(*from.outputlatency_);
  } else {
    outputlatency_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_HealthInfo_ASIO_Status.AsioStatus)
}

void Value_HealthInfo_ASIO_Status_AsioStatus::SharedCtor() {
  ::memset(&samplerate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&outputlatency_) -
      reinterpret_cast<char*>(&samplerate_)) + sizeof(outputlatency_));
}

Value_HealthInfo_ASIO_Status_AsioStatus::~Value_HealthInfo_ASIO_Status_AsioStatus() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_HealthInfo_ASIO_Status.AsioStatus)
  SharedDtor();
}

void Value_HealthInfo_ASIO_Status_AsioStatus::SharedDtor() {
  if (this != internal_default_instance()) delete samplerate_;
  if (this != internal_default_instance()) delete buffersize_;
  if (this != internal_default_instance()) delete inputlatency_;
  if (this != internal_default_instance()) delete outputlatency_;
}

void Value_HealthInfo_ASIO_Status_AsioStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_HealthInfo_ASIO_Status_AsioStatus::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_HealthInfo_ASIO_Status_AsioStatus& Value_HealthInfo_ASIO_Status_AsioStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_ASIO_Status_AsioStatus.base);
  return *internal_default_instance();
}


void Value_HealthInfo_ASIO_Status_AsioStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_HealthInfo_ASIO_Status.AsioStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && samplerate_ != NULL) {
    delete samplerate_;
  }
  samplerate_ = NULL;
  if (GetArenaNoVirtual() == NULL && buffersize_ != NULL) {
    delete buffersize_;
  }
  buffersize_ = NULL;
  if (GetArenaNoVirtual() == NULL && inputlatency_ != NULL) {
    delete inputlatency_;
  }
  inputlatency_ = NULL;
  if (GetArenaNoVirtual() == NULL && outputlatency_ != NULL) {
    delete outputlatency_;
  }
  outputlatency_ = NULL;
  _internal_metadata_.Clear();
}

bool Value_HealthInfo_ASIO_Status_AsioStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_HealthInfo_ASIO_Status.AsioStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.Value_HealthInfo_ASIO_Status.ValueStatusPair sampleRate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_samplerate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_HealthInfo_ASIO_Status.ValueStatusPair bufferSize = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_buffersize()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_HealthInfo_ASIO_Status.ValueStatusPair inputLatency = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_inputlatency()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_HealthInfo_ASIO_Status.ValueStatusPair outputLatency = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_outputlatency()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_HealthInfo_ASIO_Status.AsioStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_HealthInfo_ASIO_Status.AsioStatus)
  return false;
#undef DO_
}

void Value_HealthInfo_ASIO_Status_AsioStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_HealthInfo_ASIO_Status.AsioStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.Value_HealthInfo_ASIO_Status.ValueStatusPair sampleRate = 1;
  if (this->has_samplerate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_samplerate(), output);
  }

  // .GoogleProtoBB.Value_HealthInfo_ASIO_Status.ValueStatusPair bufferSize = 2;
  if (this->has_buffersize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_buffersize(), output);
  }

  // .GoogleProtoBB.Value_HealthInfo_ASIO_Status.ValueStatusPair inputLatency = 3;
  if (this->has_inputlatency()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_inputlatency(), output);
  }

  // .GoogleProtoBB.Value_HealthInfo_ASIO_Status.ValueStatusPair outputLatency = 4;
  if (this->has_outputlatency()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_outputlatency(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_HealthInfo_ASIO_Status.AsioStatus)
}

::google::protobuf::uint8* Value_HealthInfo_ASIO_Status_AsioStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_HealthInfo_ASIO_Status.AsioStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.Value_HealthInfo_ASIO_Status.ValueStatusPair sampleRate = 1;
  if (this->has_samplerate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_samplerate(), deterministic, target);
  }

  // .GoogleProtoBB.Value_HealthInfo_ASIO_Status.ValueStatusPair bufferSize = 2;
  if (this->has_buffersize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_buffersize(), deterministic, target);
  }

  // .GoogleProtoBB.Value_HealthInfo_ASIO_Status.ValueStatusPair inputLatency = 3;
  if (this->has_inputlatency()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_inputlatency(), deterministic, target);
  }

  // .GoogleProtoBB.Value_HealthInfo_ASIO_Status.ValueStatusPair outputLatency = 4;
  if (this->has_outputlatency()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_outputlatency(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_HealthInfo_ASIO_Status.AsioStatus)
  return target;
}

size_t Value_HealthInfo_ASIO_Status_AsioStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_HealthInfo_ASIO_Status.AsioStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GoogleProtoBB.Value_HealthInfo_ASIO_Status.ValueStatusPair sampleRate = 1;
  if (this->has_samplerate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *samplerate_);
  }

  // .GoogleProtoBB.Value_HealthInfo_ASIO_Status.ValueStatusPair bufferSize = 2;
  if (this->has_buffersize()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *buffersize_);
  }

  // .GoogleProtoBB.Value_HealthInfo_ASIO_Status.ValueStatusPair inputLatency = 3;
  if (this->has_inputlatency()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *inputlatency_);
  }

  // .GoogleProtoBB.Value_HealthInfo_ASIO_Status.ValueStatusPair outputLatency = 4;
  if (this->has_outputlatency()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *outputlatency_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_HealthInfo_ASIO_Status_AsioStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_HealthInfo_ASIO_Status.AsioStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_HealthInfo_ASIO_Status_AsioStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_HealthInfo_ASIO_Status_AsioStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_HealthInfo_ASIO_Status.AsioStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_HealthInfo_ASIO_Status.AsioStatus)
    MergeFrom(*source);
  }
}

void Value_HealthInfo_ASIO_Status_AsioStatus::MergeFrom(const Value_HealthInfo_ASIO_Status_AsioStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_HealthInfo_ASIO_Status.AsioStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_samplerate()) {
    mutable_samplerate()->::GoogleProtoBB::Value_HealthInfo_ASIO_Status_ValueStatusPair::MergeFrom(from.samplerate());
  }
  if (from.has_buffersize()) {
    mutable_buffersize()->::GoogleProtoBB::Value_HealthInfo_ASIO_Status_ValueStatusPair::MergeFrom(from.buffersize());
  }
  if (from.has_inputlatency()) {
    mutable_inputlatency()->::GoogleProtoBB::Value_HealthInfo_ASIO_Status_ValueStatusPair::MergeFrom(from.inputlatency());
  }
  if (from.has_outputlatency()) {
    mutable_outputlatency()->::GoogleProtoBB::Value_HealthInfo_ASIO_Status_ValueStatusPair::MergeFrom(from.outputlatency());
  }
}

void Value_HealthInfo_ASIO_Status_AsioStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_HealthInfo_ASIO_Status.AsioStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_HealthInfo_ASIO_Status_AsioStatus::CopyFrom(const Value_HealthInfo_ASIO_Status_AsioStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_HealthInfo_ASIO_Status.AsioStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_HealthInfo_ASIO_Status_AsioStatus::IsInitialized() const {
  return true;
}

void Value_HealthInfo_ASIO_Status_AsioStatus::Swap(Value_HealthInfo_ASIO_Status_AsioStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_HealthInfo_ASIO_Status_AsioStatus::InternalSwap(Value_HealthInfo_ASIO_Status_AsioStatus* other) {
  using std::swap;
  swap(samplerate_, other->samplerate_);
  swap(buffersize_, other->buffersize_);
  swap(inputlatency_, other->inputlatency_);
  swap(outputlatency_, other->outputlatency_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_HealthInfo_ASIO_Status_AsioStatus::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_HealthInfo_ASIO_Status::InitAsDefaultInstance() {
  ::GoogleProtoBB::_Value_HealthInfo_ASIO_Status_default_instance_._instance.get_mutable()->status_ = const_cast< ::GoogleProtoBB::Value_HealthInfo_ASIO_Status_AsioStatus*>(
      ::GoogleProtoBB::Value_HealthInfo_ASIO_Status_AsioStatus::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_HealthInfo_ASIO_Status::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_HealthInfo_ASIO_Status::Value_HealthInfo_ASIO_Status()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_ASIO_Status.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_HealthInfo_ASIO_Status)
}
Value_HealthInfo_ASIO_Status::Value_HealthInfo_ASIO_Status(const Value_HealthInfo_ASIO_Status& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_status()) {
    status_ = new ::GoogleProtoBB::Value_HealthInfo_ASIO_Status_AsioStatus(*from.status_);
  } else {
    status_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_HealthInfo_ASIO_Status)
}

void Value_HealthInfo_ASIO_Status::SharedCtor() {
  status_ = NULL;
}

Value_HealthInfo_ASIO_Status::~Value_HealthInfo_ASIO_Status() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_HealthInfo_ASIO_Status)
  SharedDtor();
}

void Value_HealthInfo_ASIO_Status::SharedDtor() {
  if (this != internal_default_instance()) delete status_;
}

void Value_HealthInfo_ASIO_Status::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_HealthInfo_ASIO_Status::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_HealthInfo_ASIO_Status& Value_HealthInfo_ASIO_Status::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_ASIO_Status.base);
  return *internal_default_instance();
}


void Value_HealthInfo_ASIO_Status::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_HealthInfo_ASIO_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  _internal_metadata_.Clear();
}

bool Value_HealthInfo_ASIO_Status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_HealthInfo_ASIO_Status)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.Value_HealthInfo_ASIO_Status.AsioStatus status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_HealthInfo_ASIO_Status)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_HealthInfo_ASIO_Status)
  return false;
#undef DO_
}

void Value_HealthInfo_ASIO_Status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_HealthInfo_ASIO_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.Value_HealthInfo_ASIO_Status.AsioStatus status = 1;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_HealthInfo_ASIO_Status)
}

::google::protobuf::uint8* Value_HealthInfo_ASIO_Status::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_HealthInfo_ASIO_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.Value_HealthInfo_ASIO_Status.AsioStatus status = 1;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_status(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_HealthInfo_ASIO_Status)
  return target;
}

size_t Value_HealthInfo_ASIO_Status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_HealthInfo_ASIO_Status)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GoogleProtoBB.Value_HealthInfo_ASIO_Status.AsioStatus status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_HealthInfo_ASIO_Status::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_HealthInfo_ASIO_Status)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_HealthInfo_ASIO_Status* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_HealthInfo_ASIO_Status>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_HealthInfo_ASIO_Status)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_HealthInfo_ASIO_Status)
    MergeFrom(*source);
  }
}

void Value_HealthInfo_ASIO_Status::MergeFrom(const Value_HealthInfo_ASIO_Status& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_HealthInfo_ASIO_Status)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    mutable_status()->::GoogleProtoBB::Value_HealthInfo_ASIO_Status_AsioStatus::MergeFrom(from.status());
  }
}

void Value_HealthInfo_ASIO_Status::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_HealthInfo_ASIO_Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_HealthInfo_ASIO_Status::CopyFrom(const Value_HealthInfo_ASIO_Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_HealthInfo_ASIO_Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_HealthInfo_ASIO_Status::IsInitialized() const {
  return true;
}

void Value_HealthInfo_ASIO_Status::Swap(Value_HealthInfo_ASIO_Status* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_HealthInfo_ASIO_Status::InternalSwap(Value_HealthInfo_ASIO_Status* other) {
  using std::swap;
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_HealthInfo_ASIO_Status::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_HealthInfo_External_TimeCode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_HealthInfo_External_TimeCode::kIsExternalTCFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_HealthInfo_External_TimeCode::Value_HealthInfo_External_TimeCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_External_TimeCode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_HealthInfo_External_TimeCode)
}
Value_HealthInfo_External_TimeCode::Value_HealthInfo_External_TimeCode(const Value_HealthInfo_External_TimeCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  isexternaltc_ = from.isexternaltc_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_HealthInfo_External_TimeCode)
}

void Value_HealthInfo_External_TimeCode::SharedCtor() {
  isexternaltc_ = false;
}

Value_HealthInfo_External_TimeCode::~Value_HealthInfo_External_TimeCode() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_HealthInfo_External_TimeCode)
  SharedDtor();
}

void Value_HealthInfo_External_TimeCode::SharedDtor() {
}

void Value_HealthInfo_External_TimeCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_HealthInfo_External_TimeCode::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_HealthInfo_External_TimeCode& Value_HealthInfo_External_TimeCode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_External_TimeCode.base);
  return *internal_default_instance();
}


void Value_HealthInfo_External_TimeCode::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_HealthInfo_External_TimeCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  isexternaltc_ = false;
  _internal_metadata_.Clear();
}

bool Value_HealthInfo_External_TimeCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_HealthInfo_External_TimeCode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isExternalTC = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isexternaltc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_HealthInfo_External_TimeCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_HealthInfo_External_TimeCode)
  return false;
#undef DO_
}

void Value_HealthInfo_External_TimeCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_HealthInfo_External_TimeCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isExternalTC = 1;
  if (this->isexternaltc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isexternaltc(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_HealthInfo_External_TimeCode)
}

::google::protobuf::uint8* Value_HealthInfo_External_TimeCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_HealthInfo_External_TimeCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isExternalTC = 1;
  if (this->isexternaltc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isexternaltc(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_HealthInfo_External_TimeCode)
  return target;
}

size_t Value_HealthInfo_External_TimeCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_HealthInfo_External_TimeCode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool isExternalTC = 1;
  if (this->isexternaltc() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_HealthInfo_External_TimeCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_HealthInfo_External_TimeCode)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_HealthInfo_External_TimeCode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_HealthInfo_External_TimeCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_HealthInfo_External_TimeCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_HealthInfo_External_TimeCode)
    MergeFrom(*source);
  }
}

void Value_HealthInfo_External_TimeCode::MergeFrom(const Value_HealthInfo_External_TimeCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_HealthInfo_External_TimeCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isexternaltc() != 0) {
    set_isexternaltc(from.isexternaltc());
  }
}

void Value_HealthInfo_External_TimeCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_HealthInfo_External_TimeCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_HealthInfo_External_TimeCode::CopyFrom(const Value_HealthInfo_External_TimeCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_HealthInfo_External_TimeCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_HealthInfo_External_TimeCode::IsInitialized() const {
  return true;
}

void Value_HealthInfo_External_TimeCode::Swap(Value_HealthInfo_External_TimeCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_HealthInfo_External_TimeCode::InternalSwap(Value_HealthInfo_External_TimeCode* other) {
  using std::swap;
  swap(isexternaltc_, other->isexternaltc_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_HealthInfo_External_TimeCode::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_CustomInfo_InfoPair::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_CustomInfo_InfoPair::kKeySizeFieldNumber;
const int Value_CustomInfo_InfoPair::kValueSizeFieldNumber;
const int Value_CustomInfo_InfoPair::kKeyFieldNumber;
const int Value_CustomInfo_InfoPair::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_CustomInfo_InfoPair::Value_CustomInfo_InfoPair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_CustomInfo_InfoPair.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_CustomInfo.InfoPair)
}
Value_CustomInfo_InfoPair::Value_CustomInfo_InfoPair(const Value_CustomInfo_InfoPair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  ::memcpy(&keysize_, &from.keysize_,
    static_cast<size_t>(reinterpret_cast<char*>(&valuesize_) -
    reinterpret_cast<char*>(&keysize_)) + sizeof(valuesize_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_CustomInfo.InfoPair)
}

void Value_CustomInfo_InfoPair::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&keysize_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&valuesize_) -
      reinterpret_cast<char*>(&keysize_)) + sizeof(valuesize_));
}

Value_CustomInfo_InfoPair::~Value_CustomInfo_InfoPair() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_CustomInfo.InfoPair)
  SharedDtor();
}

void Value_CustomInfo_InfoPair::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Value_CustomInfo_InfoPair::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_CustomInfo_InfoPair::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_CustomInfo_InfoPair& Value_CustomInfo_InfoPair::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_CustomInfo_InfoPair.base);
  return *internal_default_instance();
}


void Value_CustomInfo_InfoPair::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_CustomInfo.InfoPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&keysize_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&valuesize_) -
      reinterpret_cast<char*>(&keysize_)) + sizeof(valuesize_));
  _internal_metadata_.Clear();
}

bool Value_CustomInfo_InfoPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_CustomInfo.InfoPair)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 keySize = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &keysize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 valueSize = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &valuesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_CustomInfo.InfoPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_CustomInfo.InfoPair)
  return false;
#undef DO_
}

void Value_CustomInfo_InfoPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_CustomInfo.InfoPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 keySize = 1;
  if (this->keysize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->keysize(), output);
  }

  // uint32 valueSize = 2;
  if (this->valuesize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->valuesize(), output);
  }

  // bytes key = 3;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->key(), output);
  }

  // bytes value = 4;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_CustomInfo.InfoPair)
}

::google::protobuf::uint8* Value_CustomInfo_InfoPair::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_CustomInfo.InfoPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 keySize = 1;
  if (this->keysize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->keysize(), target);
  }

  // uint32 valueSize = 2;
  if (this->valuesize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->valuesize(), target);
  }

  // bytes key = 3;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->key(), target);
  }

  // bytes value = 4;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_CustomInfo.InfoPair)
  return target;
}

size_t Value_CustomInfo_InfoPair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_CustomInfo.InfoPair)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes key = 3;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // bytes value = 4;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // uint32 keySize = 1;
  if (this->keysize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->keysize());
  }

  // uint32 valueSize = 2;
  if (this->valuesize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->valuesize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_CustomInfo_InfoPair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_CustomInfo.InfoPair)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_CustomInfo_InfoPair* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_CustomInfo_InfoPair>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_CustomInfo.InfoPair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_CustomInfo.InfoPair)
    MergeFrom(*source);
  }
}

void Value_CustomInfo_InfoPair::MergeFrom(const Value_CustomInfo_InfoPair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_CustomInfo.InfoPair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.keysize() != 0) {
    set_keysize(from.keysize());
  }
  if (from.valuesize() != 0) {
    set_valuesize(from.valuesize());
  }
}

void Value_CustomInfo_InfoPair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_CustomInfo.InfoPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_CustomInfo_InfoPair::CopyFrom(const Value_CustomInfo_InfoPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_CustomInfo.InfoPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_CustomInfo_InfoPair::IsInitialized() const {
  return true;
}

void Value_CustomInfo_InfoPair::Swap(Value_CustomInfo_InfoPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_CustomInfo_InfoPair::InternalSwap(Value_CustomInfo_InfoPair* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(keysize_, other->keysize_);
  swap(valuesize_, other->valuesize_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_CustomInfo_InfoPair::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_CustomInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_CustomInfo::kNbCustomInfoFieldNumber;
const int Value_CustomInfo::kInfoArrayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_CustomInfo::Value_CustomInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_CustomInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_CustomInfo)
}
Value_CustomInfo::Value_CustomInfo(const Value_CustomInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      infoarray_(from.infoarray_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nbcustominfo_ = from.nbcustominfo_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_CustomInfo)
}

void Value_CustomInfo::SharedCtor() {
  nbcustominfo_ = 0u;
}

Value_CustomInfo::~Value_CustomInfo() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_CustomInfo)
  SharedDtor();
}

void Value_CustomInfo::SharedDtor() {
}

void Value_CustomInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_CustomInfo::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_CustomInfo& Value_CustomInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_CustomInfo.base);
  return *internal_default_instance();
}


void Value_CustomInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_CustomInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  infoarray_.Clear();
  nbcustominfo_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_CustomInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_CustomInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 nbCustomInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nbcustominfo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_CustomInfo.InfoPair infoArray = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_infoarray()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_CustomInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_CustomInfo)
  return false;
#undef DO_
}

void Value_CustomInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_CustomInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 nbCustomInfo = 1;
  if (this->nbcustominfo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->nbcustominfo(), output);
  }

  // repeated .GoogleProtoBB.Value_CustomInfo.InfoPair infoArray = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infoarray_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->infoarray(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_CustomInfo)
}

::google::protobuf::uint8* Value_CustomInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_CustomInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 nbCustomInfo = 1;
  if (this->nbcustominfo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->nbcustominfo(), target);
  }

  // repeated .GoogleProtoBB.Value_CustomInfo.InfoPair infoArray = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infoarray_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->infoarray(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_CustomInfo)
  return target;
}

size_t Value_CustomInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_CustomInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_CustomInfo.InfoPair infoArray = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->infoarray_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->infoarray(static_cast<int>(i)));
    }
  }

  // uint32 nbCustomInfo = 1;
  if (this->nbcustominfo() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nbcustominfo());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_CustomInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_CustomInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_CustomInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_CustomInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_CustomInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_CustomInfo)
    MergeFrom(*source);
  }
}

void Value_CustomInfo::MergeFrom(const Value_CustomInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_CustomInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  infoarray_.MergeFrom(from.infoarray_);
  if (from.nbcustominfo() != 0) {
    set_nbcustominfo(from.nbcustominfo());
  }
}

void Value_CustomInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_CustomInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_CustomInfo::CopyFrom(const Value_CustomInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_CustomInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_CustomInfo::IsInitialized() const {
  return true;
}

void Value_CustomInfo::Swap(Value_CustomInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_CustomInfo::InternalSwap(Value_CustomInfo* other) {
  using std::swap;
  CastToBase(&infoarray_)->InternalSwap(CastToBase(&other->infoarray_));
  swap(nbcustominfo_, other->nbcustominfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_CustomInfo::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_BMR_Setting::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_BMR_Setting::kTypeFieldNumber;
const int Value_BMR_Setting::kBufSizeFieldNumber;
const int Value_BMR_Setting::kBufFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_BMR_Setting::Value_BMR_Setting()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_BMR_Setting.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_BMR_Setting)
}
Value_BMR_Setting::Value_BMR_Setting(const Value_BMR_Setting& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  buf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.buf().size() > 0) {
    buf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buf_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&bufsize_) -
    reinterpret_cast<char*>(&type_)) + sizeof(bufsize_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_BMR_Setting)
}

void Value_BMR_Setting::SharedCtor() {
  buf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bufsize_) -
      reinterpret_cast<char*>(&type_)) + sizeof(bufsize_));
}

Value_BMR_Setting::~Value_BMR_Setting() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_BMR_Setting)
  SharedDtor();
}

void Value_BMR_Setting::SharedDtor() {
  buf_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Value_BMR_Setting::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_BMR_Setting::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_BMR_Setting& Value_BMR_Setting::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_BMR_Setting.base);
  return *internal_default_instance();
}


void Value_BMR_Setting::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_BMR_Setting)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  buf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bufsize_) -
      reinterpret_cast<char*>(&type_)) + sizeof(bufsize_));
  _internal_metadata_.Clear();
}

bool Value_BMR_Setting::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_BMR_Setting)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bufSize = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bufsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes buf = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_buf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_BMR_Setting)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_BMR_Setting)
  return false;
#undef DO_
}

void Value_BMR_Setting::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_BMR_Setting)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // uint32 bufSize = 2;
  if (this->bufsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->bufsize(), output);
  }

  // bytes buf = 3;
  if (this->buf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->buf(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_BMR_Setting)
}

::google::protobuf::uint8* Value_BMR_Setting::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_BMR_Setting)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // uint32 bufSize = 2;
  if (this->bufsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->bufsize(), target);
  }

  // bytes buf = 3;
  if (this->buf().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->buf(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_BMR_Setting)
  return target;
}

size_t Value_BMR_Setting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_BMR_Setting)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes buf = 3;
  if (this->buf().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->buf());
  }

  // uint32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  // uint32 bufSize = 2;
  if (this->bufsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bufsize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_BMR_Setting::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_BMR_Setting)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_BMR_Setting* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_BMR_Setting>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_BMR_Setting)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_BMR_Setting)
    MergeFrom(*source);
  }
}

void Value_BMR_Setting::MergeFrom(const Value_BMR_Setting& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_BMR_Setting)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.buf().size() > 0) {

    buf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buf_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.bufsize() != 0) {
    set_bufsize(from.bufsize());
  }
}

void Value_BMR_Setting::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_BMR_Setting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_BMR_Setting::CopyFrom(const Value_BMR_Setting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_BMR_Setting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_BMR_Setting::IsInitialized() const {
  return true;
}

void Value_BMR_Setting::Swap(Value_BMR_Setting* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_BMR_Setting::InternalSwap(Value_BMR_Setting* other) {
  using std::swap;
  buf_.Swap(&other->buf_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(bufsize_, other->bufsize_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_BMR_Setting::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_VuMeter_Live_Mixer_PGM_VuMeter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_VuMeter_Live_Mixer_PGM_VuMeter::kCountFieldNumber;
const int Value_VuMeter_Live_Mixer_PGM_VuMeter::kDbTblFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_VuMeter_Live_Mixer_PGM_VuMeter::Value_VuMeter_Live_Mixer_PGM_VuMeter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_VuMeter_Live_Mixer_PGM_VuMeter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter)
}
Value_VuMeter_Live_Mixer_PGM_VuMeter::Value_VuMeter_Live_Mixer_PGM_VuMeter(const Value_VuMeter_Live_Mixer_PGM_VuMeter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      dbtbl_(from.dbtbl_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter)
}

void Value_VuMeter_Live_Mixer_PGM_VuMeter::SharedCtor() {
  count_ = 0u;
}

Value_VuMeter_Live_Mixer_PGM_VuMeter::~Value_VuMeter_Live_Mixer_PGM_VuMeter() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter)
  SharedDtor();
}

void Value_VuMeter_Live_Mixer_PGM_VuMeter::SharedDtor() {
}

void Value_VuMeter_Live_Mixer_PGM_VuMeter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_VuMeter_Live_Mixer_PGM_VuMeter::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_VuMeter_Live_Mixer_PGM_VuMeter& Value_VuMeter_Live_Mixer_PGM_VuMeter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_VuMeter_Live_Mixer_PGM_VuMeter.base);
  return *internal_default_instance();
}


void Value_VuMeter_Live_Mixer_PGM_VuMeter::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dbtbl_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_VuMeter_Live_Mixer_PGM_VuMeter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float dbTbl = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_dbtbl())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_dbtbl())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter)
  return false;
#undef DO_
}

void Value_VuMeter_Live_Mixer_PGM_VuMeter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated float dbTbl = 2;
  if (this->dbtbl_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _dbtbl_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->dbtbl().data(), this->dbtbl_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter)
}

::google::protobuf::uint8* Value_VuMeter_Live_Mixer_PGM_VuMeter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated float dbTbl = 2;
  if (this->dbtbl_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _dbtbl_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->dbtbl_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter)
  return target;
}

size_t Value_VuMeter_Live_Mixer_PGM_VuMeter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float dbTbl = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->dbtbl_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _dbtbl_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_VuMeter_Live_Mixer_PGM_VuMeter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_VuMeter_Live_Mixer_PGM_VuMeter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_VuMeter_Live_Mixer_PGM_VuMeter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter)
    MergeFrom(*source);
  }
}

void Value_VuMeter_Live_Mixer_PGM_VuMeter::MergeFrom(const Value_VuMeter_Live_Mixer_PGM_VuMeter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dbtbl_.MergeFrom(from.dbtbl_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_VuMeter_Live_Mixer_PGM_VuMeter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_VuMeter_Live_Mixer_PGM_VuMeter::CopyFrom(const Value_VuMeter_Live_Mixer_PGM_VuMeter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_VuMeter_Live_Mixer_PGM_VuMeter::IsInitialized() const {
  return true;
}

void Value_VuMeter_Live_Mixer_PGM_VuMeter::Swap(Value_VuMeter_Live_Mixer_PGM_VuMeter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_VuMeter_Live_Mixer_PGM_VuMeter::InternalSwap(Value_VuMeter_Live_Mixer_PGM_VuMeter* other) {
  using std::swap;
  dbtbl_.InternalSwap(&other->dbtbl_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_VuMeter_Live_Mixer_PGM_VuMeter::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_VuMeter_Live_Mixer_PGM_PGMUV::InitAsDefaultInstance() {
  ::GoogleProtoBB::_Value_VuMeter_Live_Mixer_PGM_PGMUV_default_instance_._instance.get_mutable()->uvclean_ = const_cast< ::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_VuMeter*>(
      ::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_VuMeter::internal_default_instance());
  ::GoogleProtoBB::_Value_VuMeter_Live_Mixer_PGM_PGMUV_default_instance_._instance.get_mutable()->dirty_ = const_cast< ::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_VuMeter*>(
      ::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_VuMeter::internal_default_instance());
  ::GoogleProtoBB::_Value_VuMeter_Live_Mixer_PGM_PGMUV_default_instance_._instance.get_mutable()->player_ = const_cast< ::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_VuMeter*>(
      ::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_VuMeter::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_VuMeter_Live_Mixer_PGM_PGMUV::kUvCleanFieldNumber;
const int Value_VuMeter_Live_Mixer_PGM_PGMUV::kDirtyFieldNumber;
const int Value_VuMeter_Live_Mixer_PGM_PGMUV::kPlayerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_VuMeter_Live_Mixer_PGM_PGMUV::Value_VuMeter_Live_Mixer_PGM_PGMUV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_VuMeter_Live_Mixer_PGM_PGMUV.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.PGMUV)
}
Value_VuMeter_Live_Mixer_PGM_PGMUV::Value_VuMeter_Live_Mixer_PGM_PGMUV(const Value_VuMeter_Live_Mixer_PGM_PGMUV& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_uvclean()) {
    uvclean_ = new ::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_VuMeter(*from.uvclean_);
  } else {
    uvclean_ = NULL;
  }
  if (from.has_dirty()) {
    dirty_ = new ::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_VuMeter(*from.dirty_);
  } else {
    dirty_ = NULL;
  }
  if (from.has_player()) {
    player_ = new ::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_VuMeter(*from.player_);
  } else {
    player_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.PGMUV)
}

void Value_VuMeter_Live_Mixer_PGM_PGMUV::SharedCtor() {
  ::memset(&uvclean_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_) -
      reinterpret_cast<char*>(&uvclean_)) + sizeof(player_));
}

Value_VuMeter_Live_Mixer_PGM_PGMUV::~Value_VuMeter_Live_Mixer_PGM_PGMUV() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.PGMUV)
  SharedDtor();
}

void Value_VuMeter_Live_Mixer_PGM_PGMUV::SharedDtor() {
  if (this != internal_default_instance()) delete uvclean_;
  if (this != internal_default_instance()) delete dirty_;
  if (this != internal_default_instance()) delete player_;
}

void Value_VuMeter_Live_Mixer_PGM_PGMUV::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_VuMeter_Live_Mixer_PGM_PGMUV::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_VuMeter_Live_Mixer_PGM_PGMUV& Value_VuMeter_Live_Mixer_PGM_PGMUV::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_VuMeter_Live_Mixer_PGM_PGMUV.base);
  return *internal_default_instance();
}


void Value_VuMeter_Live_Mixer_PGM_PGMUV::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.PGMUV)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && uvclean_ != NULL) {
    delete uvclean_;
  }
  uvclean_ = NULL;
  if (GetArenaNoVirtual() == NULL && dirty_ != NULL) {
    delete dirty_;
  }
  dirty_ = NULL;
  if (GetArenaNoVirtual() == NULL && player_ != NULL) {
    delete player_;
  }
  player_ = NULL;
  _internal_metadata_.Clear();
}

bool Value_VuMeter_Live_Mixer_PGM_PGMUV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.PGMUV)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter uvClean = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uvclean()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter dirty = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dirty()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter player = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.PGMUV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.PGMUV)
  return false;
#undef DO_
}

void Value_VuMeter_Live_Mixer_PGM_PGMUV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.PGMUV)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter uvClean = 1;
  if (this->has_uvclean()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_uvclean(), output);
  }

  // .GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter dirty = 2;
  if (this->has_dirty()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_dirty(), output);
  }

  // .GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter player = 3;
  if (this->has_player()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_player(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.PGMUV)
}

::google::protobuf::uint8* Value_VuMeter_Live_Mixer_PGM_PGMUV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.PGMUV)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter uvClean = 1;
  if (this->has_uvclean()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_uvclean(), deterministic, target);
  }

  // .GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter dirty = 2;
  if (this->has_dirty()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_dirty(), deterministic, target);
  }

  // .GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter player = 3;
  if (this->has_player()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_player(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.PGMUV)
  return target;
}

size_t Value_VuMeter_Live_Mixer_PGM_PGMUV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.PGMUV)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter uvClean = 1;
  if (this->has_uvclean()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *uvclean_);
  }

  // .GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter dirty = 2;
  if (this->has_dirty()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dirty_);
  }

  // .GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter player = 3;
  if (this->has_player()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *player_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_VuMeter_Live_Mixer_PGM_PGMUV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.PGMUV)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_VuMeter_Live_Mixer_PGM_PGMUV* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_VuMeter_Live_Mixer_PGM_PGMUV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.PGMUV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.PGMUV)
    MergeFrom(*source);
  }
}

void Value_VuMeter_Live_Mixer_PGM_PGMUV::MergeFrom(const Value_VuMeter_Live_Mixer_PGM_PGMUV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.PGMUV)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_uvclean()) {
    mutable_uvclean()->::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_VuMeter::MergeFrom(from.uvclean());
  }
  if (from.has_dirty()) {
    mutable_dirty()->::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_VuMeter::MergeFrom(from.dirty());
  }
  if (from.has_player()) {
    mutable_player()->::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_VuMeter::MergeFrom(from.player());
  }
}

void Value_VuMeter_Live_Mixer_PGM_PGMUV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.PGMUV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_VuMeter_Live_Mixer_PGM_PGMUV::CopyFrom(const Value_VuMeter_Live_Mixer_PGM_PGMUV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.PGMUV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_VuMeter_Live_Mixer_PGM_PGMUV::IsInitialized() const {
  return true;
}

void Value_VuMeter_Live_Mixer_PGM_PGMUV::Swap(Value_VuMeter_Live_Mixer_PGM_PGMUV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_VuMeter_Live_Mixer_PGM_PGMUV::InternalSwap(Value_VuMeter_Live_Mixer_PGM_PGMUV* other) {
  using std::swap;
  swap(uvclean_, other->uvclean_);
  swap(dirty_, other->dirty_);
  swap(player_, other->player_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_VuMeter_Live_Mixer_PGM_PGMUV::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_VuMeter_Live_Mixer_PGM::InitAsDefaultInstance() {
  ::GoogleProtoBB::_Value_VuMeter_Live_Mixer_PGM_default_instance_._instance.get_mutable()->mixermeter_ = const_cast< ::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_VuMeter*>(
      ::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_VuMeter::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_VuMeter_Live_Mixer_PGM::kMixerMeterFieldNumber;
const int Value_VuMeter_Live_Mixer_PGM::kCountofLiveMeterFieldNumber;
const int Value_VuMeter_Live_Mixer_PGM::kLiveMeterFieldNumber;
const int Value_VuMeter_Live_Mixer_PGM::kCountofPRVFieldNumber;
const int Value_VuMeter_Live_Mixer_PGM::kPrvMeterFieldNumber;
const int Value_VuMeter_Live_Mixer_PGM::kCountofPGMFieldNumber;
const int Value_VuMeter_Live_Mixer_PGM::kPgmMeterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_VuMeter_Live_Mixer_PGM::Value_VuMeter_Live_Mixer_PGM()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_VuMeter_Live_Mixer_PGM.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM)
}
Value_VuMeter_Live_Mixer_PGM::Value_VuMeter_Live_Mixer_PGM(const Value_VuMeter_Live_Mixer_PGM& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      livemeter_(from.livemeter_),
      prvmeter_(from.prvmeter_),
      pgmmeter_(from.pgmmeter_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_mixermeter()) {
    mixermeter_ = new ::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_VuMeter(*from.mixermeter_);
  } else {
    mixermeter_ = NULL;
  }
  ::memcpy(&countoflivemeter_, &from.countoflivemeter_,
    static_cast<size_t>(reinterpret_cast<char*>(&countofpgm_) -
    reinterpret_cast<char*>(&countoflivemeter_)) + sizeof(countofpgm_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM)
}

void Value_VuMeter_Live_Mixer_PGM::SharedCtor() {
  ::memset(&mixermeter_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&countofpgm_) -
      reinterpret_cast<char*>(&mixermeter_)) + sizeof(countofpgm_));
}

Value_VuMeter_Live_Mixer_PGM::~Value_VuMeter_Live_Mixer_PGM() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM)
  SharedDtor();
}

void Value_VuMeter_Live_Mixer_PGM::SharedDtor() {
  if (this != internal_default_instance()) delete mixermeter_;
}

void Value_VuMeter_Live_Mixer_PGM::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_VuMeter_Live_Mixer_PGM::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_VuMeter_Live_Mixer_PGM& Value_VuMeter_Live_Mixer_PGM::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_VuMeter_Live_Mixer_PGM.base);
  return *internal_default_instance();
}


void Value_VuMeter_Live_Mixer_PGM::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  livemeter_.Clear();
  prvmeter_.Clear();
  pgmmeter_.Clear();
  if (GetArenaNoVirtual() == NULL && mixermeter_ != NULL) {
    delete mixermeter_;
  }
  mixermeter_ = NULL;
  ::memset(&countoflivemeter_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&countofpgm_) -
      reinterpret_cast<char*>(&countoflivemeter_)) + sizeof(countofpgm_));
  _internal_metadata_.Clear();
}

bool Value_VuMeter_Live_Mixer_PGM::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter mixerMeter = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mixermeter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 countofLiveMeter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &countoflivemeter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter liveMeter = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_livemeter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 countofPRV = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &countofprv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter prvMeter = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_prvmeter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 countofPGM = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &countofpgm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.PGMUV pgmMeter = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pgmmeter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM)
  return false;
#undef DO_
}

void Value_VuMeter_Live_Mixer_PGM::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter mixerMeter = 1;
  if (this->has_mixermeter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_mixermeter(), output);
  }

  // uint32 countofLiveMeter = 2;
  if (this->countoflivemeter() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->countoflivemeter(), output);
  }

  // repeated .GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter liveMeter = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->livemeter_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->livemeter(static_cast<int>(i)),
      output);
  }

  // uint32 countofPRV = 4;
  if (this->countofprv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->countofprv(), output);
  }

  // repeated .GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter prvMeter = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prvmeter_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->prvmeter(static_cast<int>(i)),
      output);
  }

  // uint32 countofPGM = 6;
  if (this->countofpgm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->countofpgm(), output);
  }

  // repeated .GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.PGMUV pgmMeter = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pgmmeter_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->pgmmeter(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM)
}

::google::protobuf::uint8* Value_VuMeter_Live_Mixer_PGM::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter mixerMeter = 1;
  if (this->has_mixermeter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_mixermeter(), deterministic, target);
  }

  // uint32 countofLiveMeter = 2;
  if (this->countoflivemeter() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->countoflivemeter(), target);
  }

  // repeated .GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter liveMeter = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->livemeter_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->livemeter(static_cast<int>(i)), deterministic, target);
  }

  // uint32 countofPRV = 4;
  if (this->countofprv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->countofprv(), target);
  }

  // repeated .GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter prvMeter = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prvmeter_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->prvmeter(static_cast<int>(i)), deterministic, target);
  }

  // uint32 countofPGM = 6;
  if (this->countofpgm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->countofpgm(), target);
  }

  // repeated .GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.PGMUV pgmMeter = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pgmmeter_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->pgmmeter(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM)
  return target;
}

size_t Value_VuMeter_Live_Mixer_PGM::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter liveMeter = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->livemeter_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->livemeter(static_cast<int>(i)));
    }
  }

  // repeated .GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter prvMeter = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->prvmeter_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->prvmeter(static_cast<int>(i)));
    }
  }

  // repeated .GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.PGMUV pgmMeter = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->pgmmeter_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pgmmeter(static_cast<int>(i)));
    }
  }

  // .GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM.VuMeter mixerMeter = 1;
  if (this->has_mixermeter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mixermeter_);
  }

  // uint32 countofLiveMeter = 2;
  if (this->countoflivemeter() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->countoflivemeter());
  }

  // uint32 countofPRV = 4;
  if (this->countofprv() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->countofprv());
  }

  // uint32 countofPGM = 6;
  if (this->countofpgm() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->countofpgm());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_VuMeter_Live_Mixer_PGM::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_VuMeter_Live_Mixer_PGM* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_VuMeter_Live_Mixer_PGM>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM)
    MergeFrom(*source);
  }
}

void Value_VuMeter_Live_Mixer_PGM::MergeFrom(const Value_VuMeter_Live_Mixer_PGM& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  livemeter_.MergeFrom(from.livemeter_);
  prvmeter_.MergeFrom(from.prvmeter_);
  pgmmeter_.MergeFrom(from.pgmmeter_);
  if (from.has_mixermeter()) {
    mutable_mixermeter()->::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_VuMeter::MergeFrom(from.mixermeter());
  }
  if (from.countoflivemeter() != 0) {
    set_countoflivemeter(from.countoflivemeter());
  }
  if (from.countofprv() != 0) {
    set_countofprv(from.countofprv());
  }
  if (from.countofpgm() != 0) {
    set_countofpgm(from.countofpgm());
  }
}

void Value_VuMeter_Live_Mixer_PGM::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_VuMeter_Live_Mixer_PGM::CopyFrom(const Value_VuMeter_Live_Mixer_PGM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_VuMeter_Live_Mixer_PGM::IsInitialized() const {
  return true;
}

void Value_VuMeter_Live_Mixer_PGM::Swap(Value_VuMeter_Live_Mixer_PGM* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_VuMeter_Live_Mixer_PGM::InternalSwap(Value_VuMeter_Live_Mixer_PGM* other) {
  using std::swap;
  CastToBase(&livemeter_)->InternalSwap(CastToBase(&other->livemeter_));
  CastToBase(&prvmeter_)->InternalSwap(CastToBase(&other->prvmeter_));
  CastToBase(&pgmmeter_)->InternalSwap(CastToBase(&other->pgmmeter_));
  swap(mixermeter_, other->mixermeter_);
  swap(countoflivemeter_, other->countoflivemeter_);
  swap(countofprv_, other->countofprv_);
  swap(countofpgm_, other->countofpgm_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_VuMeter_Live_Mixer_PGM::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_PiP_Status_PiPStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_PiP_Status_PiPStatus::kTargetCnlIDFieldNumber;
const int Value_PiP_Status_PiPStatus::kPipCnlFieldNumber;
const int Value_PiP_Status_PiPStatus::kEnableFieldNumber;
const int Value_PiP_Status_PiPStatus::kBgFadeInDurationFieldNumber;
const int Value_PiP_Status_PiPStatus::kBgFadeOutDurationFieldNumber;
const int Value_PiP_Status_PiPStatus::kBgLoopInFieldNumber;
const int Value_PiP_Status_PiPStatus::kBgLoopOutFieldNumber;
const int Value_PiP_Status_PiPStatus::kBgLoopCntFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_PiP_Status_PiPStatus::Value_PiP_Status_PiPStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_PiP_Status_PiPStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_PiP_Status.PiPStatus)
}
Value_PiP_Status_PiPStatus::Value_PiP_Status_PiPStatus(const Value_PiP_Status_PiPStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&targetcnlid_, &from.targetcnlid_,
    static_cast<size_t>(reinterpret_cast<char*>(&bgloopcnt_) -
    reinterpret_cast<char*>(&targetcnlid_)) + sizeof(bgloopcnt_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_PiP_Status.PiPStatus)
}

void Value_PiP_Status_PiPStatus::SharedCtor() {
  ::memset(&targetcnlid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bgloopcnt_) -
      reinterpret_cast<char*>(&targetcnlid_)) + sizeof(bgloopcnt_));
}

Value_PiP_Status_PiPStatus::~Value_PiP_Status_PiPStatus() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_PiP_Status.PiPStatus)
  SharedDtor();
}

void Value_PiP_Status_PiPStatus::SharedDtor() {
}

void Value_PiP_Status_PiPStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_PiP_Status_PiPStatus::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_PiP_Status_PiPStatus& Value_PiP_Status_PiPStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_PiP_Status_PiPStatus.base);
  return *internal_default_instance();
}


void Value_PiP_Status_PiPStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_PiP_Status.PiPStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&targetcnlid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bgloopcnt_) -
      reinterpret_cast<char*>(&targetcnlid_)) + sizeof(bgloopcnt_));
  _internal_metadata_.Clear();
}

bool Value_PiP_Status_PiPStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_PiP_Status.PiPStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.CnlID targetCnlID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_targetcnlid(static_cast< ::GoogleProtoBB::CnlID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.PiPType pipCnl = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_pipcnl(static_cast< ::GoogleProtoBB::PiPType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enable = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bgFadeInDuration = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bgfadeinduration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bgFadeOutDuration = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bgfadeoutduration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bgLoopIn = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bgloopin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bgLoopOut = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bgloopout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bgLoopCnt = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bgloopcnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_PiP_Status.PiPStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_PiP_Status.PiPStatus)
  return false;
#undef DO_
}

void Value_PiP_Status_PiPStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_PiP_Status.PiPStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID targetCnlID = 1;
  if (this->targetcnlid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->targetcnlid(), output);
  }

  // .GoogleProtoBB.PiPType pipCnl = 2;
  if (this->pipcnl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->pipcnl(), output);
  }

  // bool enable = 3;
  if (this->enable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->enable(), output);
  }

  // uint32 bgFadeInDuration = 4;
  if (this->bgfadeinduration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->bgfadeinduration(), output);
  }

  // uint32 bgFadeOutDuration = 5;
  if (this->bgfadeoutduration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->bgfadeoutduration(), output);
  }

  // uint32 bgLoopIn = 6;
  if (this->bgloopin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->bgloopin(), output);
  }

  // uint32 bgLoopOut = 7;
  if (this->bgloopout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->bgloopout(), output);
  }

  // uint32 bgLoopCnt = 8;
  if (this->bgloopcnt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->bgloopcnt(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_PiP_Status.PiPStatus)
}

::google::protobuf::uint8* Value_PiP_Status_PiPStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_PiP_Status.PiPStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CnlID targetCnlID = 1;
  if (this->targetcnlid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->targetcnlid(), target);
  }

  // .GoogleProtoBB.PiPType pipCnl = 2;
  if (this->pipcnl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->pipcnl(), target);
  }

  // bool enable = 3;
  if (this->enable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->enable(), target);
  }

  // uint32 bgFadeInDuration = 4;
  if (this->bgfadeinduration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->bgfadeinduration(), target);
  }

  // uint32 bgFadeOutDuration = 5;
  if (this->bgfadeoutduration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->bgfadeoutduration(), target);
  }

  // uint32 bgLoopIn = 6;
  if (this->bgloopin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->bgloopin(), target);
  }

  // uint32 bgLoopOut = 7;
  if (this->bgloopout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->bgloopout(), target);
  }

  // uint32 bgLoopCnt = 8;
  if (this->bgloopcnt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->bgloopcnt(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_PiP_Status.PiPStatus)
  return target;
}

size_t Value_PiP_Status_PiPStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_PiP_Status.PiPStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GoogleProtoBB.CnlID targetCnlID = 1;
  if (this->targetcnlid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->targetcnlid());
  }

  // .GoogleProtoBB.PiPType pipCnl = 2;
  if (this->pipcnl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->pipcnl());
  }

  // bool enable = 3;
  if (this->enable() != 0) {
    total_size += 1 + 1;
  }

  // uint32 bgFadeInDuration = 4;
  if (this->bgfadeinduration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bgfadeinduration());
  }

  // uint32 bgFadeOutDuration = 5;
  if (this->bgfadeoutduration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bgfadeoutduration());
  }

  // uint32 bgLoopIn = 6;
  if (this->bgloopin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bgloopin());
  }

  // uint32 bgLoopOut = 7;
  if (this->bgloopout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bgloopout());
  }

  // uint32 bgLoopCnt = 8;
  if (this->bgloopcnt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bgloopcnt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_PiP_Status_PiPStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_PiP_Status.PiPStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_PiP_Status_PiPStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_PiP_Status_PiPStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_PiP_Status.PiPStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_PiP_Status.PiPStatus)
    MergeFrom(*source);
  }
}

void Value_PiP_Status_PiPStatus::MergeFrom(const Value_PiP_Status_PiPStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_PiP_Status.PiPStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.targetcnlid() != 0) {
    set_targetcnlid(from.targetcnlid());
  }
  if (from.pipcnl() != 0) {
    set_pipcnl(from.pipcnl());
  }
  if (from.enable() != 0) {
    set_enable(from.enable());
  }
  if (from.bgfadeinduration() != 0) {
    set_bgfadeinduration(from.bgfadeinduration());
  }
  if (from.bgfadeoutduration() != 0) {
    set_bgfadeoutduration(from.bgfadeoutduration());
  }
  if (from.bgloopin() != 0) {
    set_bgloopin(from.bgloopin());
  }
  if (from.bgloopout() != 0) {
    set_bgloopout(from.bgloopout());
  }
  if (from.bgloopcnt() != 0) {
    set_bgloopcnt(from.bgloopcnt());
  }
}

void Value_PiP_Status_PiPStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_PiP_Status.PiPStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_PiP_Status_PiPStatus::CopyFrom(const Value_PiP_Status_PiPStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_PiP_Status.PiPStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_PiP_Status_PiPStatus::IsInitialized() const {
  return true;
}

void Value_PiP_Status_PiPStatus::Swap(Value_PiP_Status_PiPStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_PiP_Status_PiPStatus::InternalSwap(Value_PiP_Status_PiPStatus* other) {
  using std::swap;
  swap(targetcnlid_, other->targetcnlid_);
  swap(pipcnl_, other->pipcnl_);
  swap(enable_, other->enable_);
  swap(bgfadeinduration_, other->bgfadeinduration_);
  swap(bgfadeoutduration_, other->bgfadeoutduration_);
  swap(bgloopin_, other->bgloopin_);
  swap(bgloopout_, other->bgloopout_);
  swap(bgloopcnt_, other->bgloopcnt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_PiP_Status_PiPStatus::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_PiP_Status_PGMPiP::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_PiP_Status_PGMPiP::kCountFieldNumber;
const int Value_PiP_Status_PGMPiP::kGfxStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_PiP_Status_PGMPiP::Value_PiP_Status_PGMPiP()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_PiP_Status_PGMPiP.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_PiP_Status.PGMPiP)
}
Value_PiP_Status_PGMPiP::Value_PiP_Status_PGMPiP(const Value_PiP_Status_PGMPiP& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      gfxstatus_(from.gfxstatus_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_PiP_Status.PGMPiP)
}

void Value_PiP_Status_PGMPiP::SharedCtor() {
  count_ = 0u;
}

Value_PiP_Status_PGMPiP::~Value_PiP_Status_PGMPiP() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_PiP_Status.PGMPiP)
  SharedDtor();
}

void Value_PiP_Status_PGMPiP::SharedDtor() {
}

void Value_PiP_Status_PGMPiP::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_PiP_Status_PGMPiP::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_PiP_Status_PGMPiP& Value_PiP_Status_PGMPiP::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_PiP_Status_PGMPiP.base);
  return *internal_default_instance();
}


void Value_PiP_Status_PGMPiP::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_PiP_Status.PGMPiP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gfxstatus_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_PiP_Status_PGMPiP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_PiP_Status.PGMPiP)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_PiP_Status.PiPStatus gfxStatus = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_gfxstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_PiP_Status.PGMPiP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_PiP_Status.PGMPiP)
  return false;
#undef DO_
}

void Value_PiP_Status_PGMPiP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_PiP_Status.PGMPiP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_PiP_Status.PiPStatus gfxStatus = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gfxstatus_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->gfxstatus(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_PiP_Status.PGMPiP)
}

::google::protobuf::uint8* Value_PiP_Status_PGMPiP::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_PiP_Status.PGMPiP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_PiP_Status.PiPStatus gfxStatus = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gfxstatus_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->gfxstatus(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_PiP_Status.PGMPiP)
  return target;
}

size_t Value_PiP_Status_PGMPiP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_PiP_Status.PGMPiP)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_PiP_Status.PiPStatus gfxStatus = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->gfxstatus_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->gfxstatus(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_PiP_Status_PGMPiP::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_PiP_Status.PGMPiP)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_PiP_Status_PGMPiP* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_PiP_Status_PGMPiP>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_PiP_Status.PGMPiP)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_PiP_Status.PGMPiP)
    MergeFrom(*source);
  }
}

void Value_PiP_Status_PGMPiP::MergeFrom(const Value_PiP_Status_PGMPiP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_PiP_Status.PGMPiP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gfxstatus_.MergeFrom(from.gfxstatus_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_PiP_Status_PGMPiP::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_PiP_Status.PGMPiP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_PiP_Status_PGMPiP::CopyFrom(const Value_PiP_Status_PGMPiP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_PiP_Status.PGMPiP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_PiP_Status_PGMPiP::IsInitialized() const {
  return true;
}

void Value_PiP_Status_PGMPiP::Swap(Value_PiP_Status_PGMPiP* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_PiP_Status_PGMPiP::InternalSwap(Value_PiP_Status_PGMPiP* other) {
  using std::swap;
  CastToBase(&gfxstatus_)->InternalSwap(CastToBase(&other->gfxstatus_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_PiP_Status_PGMPiP::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_PiP_Status::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_PiP_Status::kPgmCountFieldNumber;
const int Value_PiP_Status::kPgmPiPFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_PiP_Status::Value_PiP_Status()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_PiP_Status.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_PiP_Status)
}
Value_PiP_Status::Value_PiP_Status(const Value_PiP_Status& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pgmpip_(from.pgmpip_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pgmcount_ = from.pgmcount_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_PiP_Status)
}

void Value_PiP_Status::SharedCtor() {
  pgmcount_ = 0u;
}

Value_PiP_Status::~Value_PiP_Status() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_PiP_Status)
  SharedDtor();
}

void Value_PiP_Status::SharedDtor() {
}

void Value_PiP_Status::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_PiP_Status::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_PiP_Status& Value_PiP_Status::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_PiP_Status.base);
  return *internal_default_instance();
}


void Value_PiP_Status::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_PiP_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pgmpip_.Clear();
  pgmcount_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_PiP_Status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_PiP_Status)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 pgmCount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pgmcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_PiP_Status.PGMPiP pgmPiP = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pgmpip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_PiP_Status)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_PiP_Status)
  return false;
#undef DO_
}

void Value_PiP_Status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_PiP_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 pgmCount = 1;
  if (this->pgmcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pgmcount(), output);
  }

  // repeated .GoogleProtoBB.Value_PiP_Status.PGMPiP pgmPiP = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pgmpip_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->pgmpip(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_PiP_Status)
}

::google::protobuf::uint8* Value_PiP_Status::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_PiP_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 pgmCount = 1;
  if (this->pgmcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pgmcount(), target);
  }

  // repeated .GoogleProtoBB.Value_PiP_Status.PGMPiP pgmPiP = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pgmpip_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->pgmpip(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_PiP_Status)
  return target;
}

size_t Value_PiP_Status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_PiP_Status)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_PiP_Status.PGMPiP pgmPiP = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->pgmpip_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pgmpip(static_cast<int>(i)));
    }
  }

  // uint32 pgmCount = 1;
  if (this->pgmcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pgmcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_PiP_Status::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_PiP_Status)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_PiP_Status* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_PiP_Status>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_PiP_Status)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_PiP_Status)
    MergeFrom(*source);
  }
}

void Value_PiP_Status::MergeFrom(const Value_PiP_Status& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_PiP_Status)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pgmpip_.MergeFrom(from.pgmpip_);
  if (from.pgmcount() != 0) {
    set_pgmcount(from.pgmcount());
  }
}

void Value_PiP_Status::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_PiP_Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_PiP_Status::CopyFrom(const Value_PiP_Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_PiP_Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_PiP_Status::IsInitialized() const {
  return true;
}

void Value_PiP_Status::Swap(Value_PiP_Status* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_PiP_Status::InternalSwap(Value_PiP_Status* other) {
  using std::swap;
  CastToBase(&pgmpip_)->InternalSwap(CastToBase(&other->pgmpip_));
  swap(pgmcount_, other->pgmcount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_PiP_Status::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Server_Memory::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Server_Memory::kCurrentMemoryGBFieldNumber;
const int Value_Server_Memory::kExpectedMemoryGBFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Server_Memory::Value_Server_Memory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Server_Memory.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Server_Memory)
}
Value_Server_Memory::Value_Server_Memory(const Value_Server_Memory& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&currentmemory_gb_, &from.currentmemory_gb_,
    static_cast<size_t>(reinterpret_cast<char*>(&expectedmemory_gb_) -
    reinterpret_cast<char*>(&currentmemory_gb_)) + sizeof(expectedmemory_gb_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Server_Memory)
}

void Value_Server_Memory::SharedCtor() {
  ::memset(&currentmemory_gb_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expectedmemory_gb_) -
      reinterpret_cast<char*>(&currentmemory_gb_)) + sizeof(expectedmemory_gb_));
}

Value_Server_Memory::~Value_Server_Memory() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Server_Memory)
  SharedDtor();
}

void Value_Server_Memory::SharedDtor() {
}

void Value_Server_Memory::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Server_Memory::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Server_Memory& Value_Server_Memory::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Server_Memory.base);
  return *internal_default_instance();
}


void Value_Server_Memory::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Server_Memory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&currentmemory_gb_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expectedmemory_gb_) -
      reinterpret_cast<char*>(&currentmemory_gb_)) + sizeof(expectedmemory_gb_));
  _internal_metadata_.Clear();
}

bool Value_Server_Memory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Server_Memory)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 currentMemory_GB = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &currentmemory_gb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 expectedMemory_GB = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &expectedmemory_gb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Server_Memory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Server_Memory)
  return false;
#undef DO_
}

void Value_Server_Memory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Server_Memory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 currentMemory_GB = 1;
  if (this->currentmemory_gb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->currentmemory_gb(), output);
  }

  // uint32 expectedMemory_GB = 2;
  if (this->expectedmemory_gb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->expectedmemory_gb(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Server_Memory)
}

::google::protobuf::uint8* Value_Server_Memory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Server_Memory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 currentMemory_GB = 1;
  if (this->currentmemory_gb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->currentmemory_gb(), target);
  }

  // uint32 expectedMemory_GB = 2;
  if (this->expectedmemory_gb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->expectedmemory_gb(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Server_Memory)
  return target;
}

size_t Value_Server_Memory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Server_Memory)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 currentMemory_GB = 1;
  if (this->currentmemory_gb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->currentmemory_gb());
  }

  // uint32 expectedMemory_GB = 2;
  if (this->expectedmemory_gb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->expectedmemory_gb());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Server_Memory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Server_Memory)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Server_Memory* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Server_Memory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Server_Memory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Server_Memory)
    MergeFrom(*source);
  }
}

void Value_Server_Memory::MergeFrom(const Value_Server_Memory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Server_Memory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.currentmemory_gb() != 0) {
    set_currentmemory_gb(from.currentmemory_gb());
  }
  if (from.expectedmemory_gb() != 0) {
    set_expectedmemory_gb(from.expectedmemory_gb());
  }
}

void Value_Server_Memory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Server_Memory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Server_Memory::CopyFrom(const Value_Server_Memory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Server_Memory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Server_Memory::IsInitialized() const {
  return true;
}

void Value_Server_Memory::Swap(Value_Server_Memory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Server_Memory::InternalSwap(Value_Server_Memory* other) {
  using std::swap;
  swap(currentmemory_gb_, other->currentmemory_gb_);
  swap(expectedmemory_gb_, other->expectedmemory_gb_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Server_Memory::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Cache_ReplayPlayer_HighResVideo_Range::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Cache_ReplayPlayer_HighResVideo_Range::kCurrentFrameIDFieldNumber;
const int Value_Cache_ReplayPlayer_HighResVideo_Range::kOutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Cache_ReplayPlayer_HighResVideo_Range::Value_Cache_ReplayPlayer_HighResVideo_Range()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Cache_ReplayPlayer_HighResVideo_Range.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo.Range)
}
Value_Cache_ReplayPlayer_HighResVideo_Range::Value_Cache_ReplayPlayer_HighResVideo_Range(const Value_Cache_ReplayPlayer_HighResVideo_Range& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&currentframeid_, &from.currentframeid_,
    static_cast<size_t>(reinterpret_cast<char*>(&out_) -
    reinterpret_cast<char*>(&currentframeid_)) + sizeof(out_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo.Range)
}

void Value_Cache_ReplayPlayer_HighResVideo_Range::SharedCtor() {
  ::memset(&currentframeid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&out_) -
      reinterpret_cast<char*>(&currentframeid_)) + sizeof(out_));
}

Value_Cache_ReplayPlayer_HighResVideo_Range::~Value_Cache_ReplayPlayer_HighResVideo_Range() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo.Range)
  SharedDtor();
}

void Value_Cache_ReplayPlayer_HighResVideo_Range::SharedDtor() {
}

void Value_Cache_ReplayPlayer_HighResVideo_Range::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Cache_ReplayPlayer_HighResVideo_Range::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Cache_ReplayPlayer_HighResVideo_Range& Value_Cache_ReplayPlayer_HighResVideo_Range::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Cache_ReplayPlayer_HighResVideo_Range.base);
  return *internal_default_instance();
}


void Value_Cache_ReplayPlayer_HighResVideo_Range::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo.Range)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&currentframeid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&out_) -
      reinterpret_cast<char*>(&currentframeid_)) + sizeof(out_));
  _internal_metadata_.Clear();
}

bool Value_Cache_ReplayPlayer_HighResVideo_Range::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo.Range)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 currentFrameID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &currentframeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 out = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &out_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo.Range)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo.Range)
  return false;
#undef DO_
}

void Value_Cache_ReplayPlayer_HighResVideo_Range::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo.Range)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 currentFrameID = 1;
  if (this->currentframeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->currentframeid(), output);
  }

  // uint64 out = 2;
  if (this->out() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->out(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo.Range)
}

::google::protobuf::uint8* Value_Cache_ReplayPlayer_HighResVideo_Range::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo.Range)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 currentFrameID = 1;
  if (this->currentframeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->currentframeid(), target);
  }

  // uint64 out = 2;
  if (this->out() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->out(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo.Range)
  return target;
}

size_t Value_Cache_ReplayPlayer_HighResVideo_Range::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo.Range)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 currentFrameID = 1;
  if (this->currentframeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->currentframeid());
  }

  // uint64 out = 2;
  if (this->out() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->out());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Cache_ReplayPlayer_HighResVideo_Range::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo.Range)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Cache_ReplayPlayer_HighResVideo_Range* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Cache_ReplayPlayer_HighResVideo_Range>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo.Range)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo.Range)
    MergeFrom(*source);
  }
}

void Value_Cache_ReplayPlayer_HighResVideo_Range::MergeFrom(const Value_Cache_ReplayPlayer_HighResVideo_Range& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo.Range)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.currentframeid() != 0) {
    set_currentframeid(from.currentframeid());
  }
  if (from.out() != 0) {
    set_out(from.out());
  }
}

void Value_Cache_ReplayPlayer_HighResVideo_Range::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo.Range)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Cache_ReplayPlayer_HighResVideo_Range::CopyFrom(const Value_Cache_ReplayPlayer_HighResVideo_Range& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo.Range)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Cache_ReplayPlayer_HighResVideo_Range::IsInitialized() const {
  return true;
}

void Value_Cache_ReplayPlayer_HighResVideo_Range::Swap(Value_Cache_ReplayPlayer_HighResVideo_Range* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Cache_ReplayPlayer_HighResVideo_Range::InternalSwap(Value_Cache_ReplayPlayer_HighResVideo_Range* other) {
  using std::swap;
  swap(currentframeid_, other->currentframeid_);
  swap(out_, other->out_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Cache_ReplayPlayer_HighResVideo_Range::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Cache_ReplayPlayer_HighResVideo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Cache_ReplayPlayer_HighResVideo::kCountFieldNumber;
const int Value_Cache_ReplayPlayer_HighResVideo::kRangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Cache_ReplayPlayer_HighResVideo::Value_Cache_ReplayPlayer_HighResVideo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Cache_ReplayPlayer_HighResVideo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo)
}
Value_Cache_ReplayPlayer_HighResVideo::Value_Cache_ReplayPlayer_HighResVideo(const Value_Cache_ReplayPlayer_HighResVideo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      range_(from.range_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo)
}

void Value_Cache_ReplayPlayer_HighResVideo::SharedCtor() {
  count_ = 0u;
}

Value_Cache_ReplayPlayer_HighResVideo::~Value_Cache_ReplayPlayer_HighResVideo() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo)
  SharedDtor();
}

void Value_Cache_ReplayPlayer_HighResVideo::SharedDtor() {
}

void Value_Cache_ReplayPlayer_HighResVideo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Cache_ReplayPlayer_HighResVideo::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Cache_ReplayPlayer_HighResVideo& Value_Cache_ReplayPlayer_HighResVideo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Cache_ReplayPlayer_HighResVideo.base);
  return *internal_default_instance();
}


void Value_Cache_ReplayPlayer_HighResVideo::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  range_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_Cache_ReplayPlayer_HighResVideo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo.Range range = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo)
  return false;
#undef DO_
}

void Value_Cache_ReplayPlayer_HighResVideo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo.Range range = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->range_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->range(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo)
}

::google::protobuf::uint8* Value_Cache_ReplayPlayer_HighResVideo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo.Range range = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->range_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->range(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo)
  return target;
}

size_t Value_Cache_ReplayPlayer_HighResVideo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo.Range range = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->range_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->range(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Cache_ReplayPlayer_HighResVideo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Cache_ReplayPlayer_HighResVideo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Cache_ReplayPlayer_HighResVideo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo)
    MergeFrom(*source);
  }
}

void Value_Cache_ReplayPlayer_HighResVideo::MergeFrom(const Value_Cache_ReplayPlayer_HighResVideo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  range_.MergeFrom(from.range_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_Cache_ReplayPlayer_HighResVideo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Cache_ReplayPlayer_HighResVideo::CopyFrom(const Value_Cache_ReplayPlayer_HighResVideo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Cache_ReplayPlayer_HighResVideo::IsInitialized() const {
  return true;
}

void Value_Cache_ReplayPlayer_HighResVideo::Swap(Value_Cache_ReplayPlayer_HighResVideo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Cache_ReplayPlayer_HighResVideo::InternalSwap(Value_Cache_ReplayPlayer_HighResVideo* other) {
  using std::swap;
  CastToBase(&range_)->InternalSwap(CastToBase(&other->range_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Cache_ReplayPlayer_HighResVideo::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Cache_ReplayPlayer_ExternalAudio_Range::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Cache_ReplayPlayer_ExternalAudio_Range::kCurrentFrameIDFieldNumber;
const int Value_Cache_ReplayPlayer_ExternalAudio_Range::kOutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Cache_ReplayPlayer_ExternalAudio_Range::Value_Cache_ReplayPlayer_ExternalAudio_Range()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Cache_ReplayPlayer_ExternalAudio_Range.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio.Range)
}
Value_Cache_ReplayPlayer_ExternalAudio_Range::Value_Cache_ReplayPlayer_ExternalAudio_Range(const Value_Cache_ReplayPlayer_ExternalAudio_Range& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&currentframeid_, &from.currentframeid_,
    static_cast<size_t>(reinterpret_cast<char*>(&out_) -
    reinterpret_cast<char*>(&currentframeid_)) + sizeof(out_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio.Range)
}

void Value_Cache_ReplayPlayer_ExternalAudio_Range::SharedCtor() {
  ::memset(&currentframeid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&out_) -
      reinterpret_cast<char*>(&currentframeid_)) + sizeof(out_));
}

Value_Cache_ReplayPlayer_ExternalAudio_Range::~Value_Cache_ReplayPlayer_ExternalAudio_Range() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio.Range)
  SharedDtor();
}

void Value_Cache_ReplayPlayer_ExternalAudio_Range::SharedDtor() {
}

void Value_Cache_ReplayPlayer_ExternalAudio_Range::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Cache_ReplayPlayer_ExternalAudio_Range::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Cache_ReplayPlayer_ExternalAudio_Range& Value_Cache_ReplayPlayer_ExternalAudio_Range::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Cache_ReplayPlayer_ExternalAudio_Range.base);
  return *internal_default_instance();
}


void Value_Cache_ReplayPlayer_ExternalAudio_Range::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio.Range)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&currentframeid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&out_) -
      reinterpret_cast<char*>(&currentframeid_)) + sizeof(out_));
  _internal_metadata_.Clear();
}

bool Value_Cache_ReplayPlayer_ExternalAudio_Range::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio.Range)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 currentFrameID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &currentframeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 out = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &out_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio.Range)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio.Range)
  return false;
#undef DO_
}

void Value_Cache_ReplayPlayer_ExternalAudio_Range::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio.Range)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 currentFrameID = 1;
  if (this->currentframeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->currentframeid(), output);
  }

  // uint64 out = 2;
  if (this->out() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->out(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio.Range)
}

::google::protobuf::uint8* Value_Cache_ReplayPlayer_ExternalAudio_Range::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio.Range)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 currentFrameID = 1;
  if (this->currentframeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->currentframeid(), target);
  }

  // uint64 out = 2;
  if (this->out() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->out(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio.Range)
  return target;
}

size_t Value_Cache_ReplayPlayer_ExternalAudio_Range::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio.Range)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 currentFrameID = 1;
  if (this->currentframeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->currentframeid());
  }

  // uint64 out = 2;
  if (this->out() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->out());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Cache_ReplayPlayer_ExternalAudio_Range::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio.Range)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Cache_ReplayPlayer_ExternalAudio_Range* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Cache_ReplayPlayer_ExternalAudio_Range>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio.Range)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio.Range)
    MergeFrom(*source);
  }
}

void Value_Cache_ReplayPlayer_ExternalAudio_Range::MergeFrom(const Value_Cache_ReplayPlayer_ExternalAudio_Range& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio.Range)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.currentframeid() != 0) {
    set_currentframeid(from.currentframeid());
  }
  if (from.out() != 0) {
    set_out(from.out());
  }
}

void Value_Cache_ReplayPlayer_ExternalAudio_Range::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio.Range)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Cache_ReplayPlayer_ExternalAudio_Range::CopyFrom(const Value_Cache_ReplayPlayer_ExternalAudio_Range& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio.Range)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Cache_ReplayPlayer_ExternalAudio_Range::IsInitialized() const {
  return true;
}

void Value_Cache_ReplayPlayer_ExternalAudio_Range::Swap(Value_Cache_ReplayPlayer_ExternalAudio_Range* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Cache_ReplayPlayer_ExternalAudio_Range::InternalSwap(Value_Cache_ReplayPlayer_ExternalAudio_Range* other) {
  using std::swap;
  swap(currentframeid_, other->currentframeid_);
  swap(out_, other->out_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Cache_ReplayPlayer_ExternalAudio_Range::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Cache_ReplayPlayer_ExternalAudio::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Cache_ReplayPlayer_ExternalAudio::kCountFieldNumber;
const int Value_Cache_ReplayPlayer_ExternalAudio::kRangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Cache_ReplayPlayer_ExternalAudio::Value_Cache_ReplayPlayer_ExternalAudio()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Cache_ReplayPlayer_ExternalAudio.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio)
}
Value_Cache_ReplayPlayer_ExternalAudio::Value_Cache_ReplayPlayer_ExternalAudio(const Value_Cache_ReplayPlayer_ExternalAudio& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      range_(from.range_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio)
}

void Value_Cache_ReplayPlayer_ExternalAudio::SharedCtor() {
  count_ = 0u;
}

Value_Cache_ReplayPlayer_ExternalAudio::~Value_Cache_ReplayPlayer_ExternalAudio() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio)
  SharedDtor();
}

void Value_Cache_ReplayPlayer_ExternalAudio::SharedDtor() {
}

void Value_Cache_ReplayPlayer_ExternalAudio::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Cache_ReplayPlayer_ExternalAudio::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Cache_ReplayPlayer_ExternalAudio& Value_Cache_ReplayPlayer_ExternalAudio::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Cache_ReplayPlayer_ExternalAudio.base);
  return *internal_default_instance();
}


void Value_Cache_ReplayPlayer_ExternalAudio::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  range_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_Cache_ReplayPlayer_ExternalAudio::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio.Range range = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio)
  return false;
#undef DO_
}

void Value_Cache_ReplayPlayer_ExternalAudio::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio.Range range = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->range_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->range(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio)
}

::google::protobuf::uint8* Value_Cache_ReplayPlayer_ExternalAudio::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio.Range range = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->range_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->range(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio)
  return target;
}

size_t Value_Cache_ReplayPlayer_ExternalAudio::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio.Range range = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->range_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->range(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Cache_ReplayPlayer_ExternalAudio::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Cache_ReplayPlayer_ExternalAudio* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Cache_ReplayPlayer_ExternalAudio>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio)
    MergeFrom(*source);
  }
}

void Value_Cache_ReplayPlayer_ExternalAudio::MergeFrom(const Value_Cache_ReplayPlayer_ExternalAudio& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  range_.MergeFrom(from.range_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_Cache_ReplayPlayer_ExternalAudio::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Cache_ReplayPlayer_ExternalAudio::CopyFrom(const Value_Cache_ReplayPlayer_ExternalAudio& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Cache_ReplayPlayer_ExternalAudio::IsInitialized() const {
  return true;
}

void Value_Cache_ReplayPlayer_ExternalAudio::Swap(Value_Cache_ReplayPlayer_ExternalAudio* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Cache_ReplayPlayer_ExternalAudio::InternalSwap(Value_Cache_ReplayPlayer_ExternalAudio* other) {
  using std::swap;
  CastToBase(&range_)->InternalSwap(CastToBase(&other->range_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Cache_ReplayPlayer_ExternalAudio::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Storage_Capacity::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Storage_Capacity::kBlockSizeMBFieldNumber;
const int Value_Storage_Capacity::kNbBlockUsedFieldNumber;
const int Value_Storage_Capacity::kNbBlockTotalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Storage_Capacity::Value_Storage_Capacity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Storage_Capacity.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Storage_Capacity)
}
Value_Storage_Capacity::Value_Storage_Capacity(const Value_Storage_Capacity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&blocksize_mb_, &from.blocksize_mb_,
    static_cast<size_t>(reinterpret_cast<char*>(&nbblocktotal_) -
    reinterpret_cast<char*>(&blocksize_mb_)) + sizeof(nbblocktotal_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Storage_Capacity)
}

void Value_Storage_Capacity::SharedCtor() {
  ::memset(&blocksize_mb_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nbblocktotal_) -
      reinterpret_cast<char*>(&blocksize_mb_)) + sizeof(nbblocktotal_));
}

Value_Storage_Capacity::~Value_Storage_Capacity() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Storage_Capacity)
  SharedDtor();
}

void Value_Storage_Capacity::SharedDtor() {
}

void Value_Storage_Capacity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Storage_Capacity::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Storage_Capacity& Value_Storage_Capacity::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Storage_Capacity.base);
  return *internal_default_instance();
}


void Value_Storage_Capacity::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Storage_Capacity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&blocksize_mb_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nbblocktotal_) -
      reinterpret_cast<char*>(&blocksize_mb_)) + sizeof(nbblocktotal_));
  _internal_metadata_.Clear();
}

bool Value_Storage_Capacity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Storage_Capacity)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 blockSize_MB = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &blocksize_mb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nbBlockUsed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nbblockused_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nbBlockTotal = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nbblocktotal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Storage_Capacity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Storage_Capacity)
  return false;
#undef DO_
}

void Value_Storage_Capacity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Storage_Capacity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 blockSize_MB = 1;
  if (this->blocksize_mb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->blocksize_mb(), output);
  }

  // uint32 nbBlockUsed = 2;
  if (this->nbblockused() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->nbblockused(), output);
  }

  // uint32 nbBlockTotal = 3;
  if (this->nbblocktotal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->nbblocktotal(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Storage_Capacity)
}

::google::protobuf::uint8* Value_Storage_Capacity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Storage_Capacity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 blockSize_MB = 1;
  if (this->blocksize_mb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->blocksize_mb(), target);
  }

  // uint32 nbBlockUsed = 2;
  if (this->nbblockused() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->nbblockused(), target);
  }

  // uint32 nbBlockTotal = 3;
  if (this->nbblocktotal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->nbblocktotal(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Storage_Capacity)
  return target;
}

size_t Value_Storage_Capacity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Storage_Capacity)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 blockSize_MB = 1;
  if (this->blocksize_mb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->blocksize_mb());
  }

  // uint32 nbBlockUsed = 2;
  if (this->nbblockused() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nbblockused());
  }

  // uint32 nbBlockTotal = 3;
  if (this->nbblocktotal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nbblocktotal());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Storage_Capacity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Storage_Capacity)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Storage_Capacity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Storage_Capacity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Storage_Capacity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Storage_Capacity)
    MergeFrom(*source);
  }
}

void Value_Storage_Capacity::MergeFrom(const Value_Storage_Capacity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Storage_Capacity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.blocksize_mb() != 0) {
    set_blocksize_mb(from.blocksize_mb());
  }
  if (from.nbblockused() != 0) {
    set_nbblockused(from.nbblockused());
  }
  if (from.nbblocktotal() != 0) {
    set_nbblocktotal(from.nbblocktotal());
  }
}

void Value_Storage_Capacity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Storage_Capacity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Storage_Capacity::CopyFrom(const Value_Storage_Capacity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Storage_Capacity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Storage_Capacity::IsInitialized() const {
  return true;
}

void Value_Storage_Capacity::Swap(Value_Storage_Capacity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Storage_Capacity::InternalSwap(Value_Storage_Capacity* other) {
  using std::swap;
  swap(blocksize_mb_, other->blocksize_mb_);
  swap(nbblockused_, other->nbblockused_);
  swap(nbblocktotal_, other->nbblocktotal_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Storage_Capacity::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_HealthInfo_ReferenceStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_HealthInfo_ReferenceStatus::kReferenceStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_HealthInfo_ReferenceStatus::Value_HealthInfo_ReferenceStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_ReferenceStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_HealthInfo_ReferenceStatus)
}
Value_HealthInfo_ReferenceStatus::Value_HealthInfo_ReferenceStatus(const Value_HealthInfo_ReferenceStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  referencestatus_ = from.referencestatus_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_HealthInfo_ReferenceStatus)
}

void Value_HealthInfo_ReferenceStatus::SharedCtor() {
  referencestatus_ = 0;
}

Value_HealthInfo_ReferenceStatus::~Value_HealthInfo_ReferenceStatus() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_HealthInfo_ReferenceStatus)
  SharedDtor();
}

void Value_HealthInfo_ReferenceStatus::SharedDtor() {
}

void Value_HealthInfo_ReferenceStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_HealthInfo_ReferenceStatus::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_HealthInfo_ReferenceStatus& Value_HealthInfo_ReferenceStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_ReferenceStatus.base);
  return *internal_default_instance();
}


void Value_HealthInfo_ReferenceStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_HealthInfo_ReferenceStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  referencestatus_ = 0;
  _internal_metadata_.Clear();
}

bool Value_HealthInfo_ReferenceStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_HealthInfo_ReferenceStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.ReferenceStatus referenceStatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_referencestatus(static_cast< ::GoogleProtoBB::ReferenceStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_HealthInfo_ReferenceStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_HealthInfo_ReferenceStatus)
  return false;
#undef DO_
}

void Value_HealthInfo_ReferenceStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_HealthInfo_ReferenceStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.ReferenceStatus referenceStatus = 1;
  if (this->referencestatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->referencestatus(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_HealthInfo_ReferenceStatus)
}

::google::protobuf::uint8* Value_HealthInfo_ReferenceStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_HealthInfo_ReferenceStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.ReferenceStatus referenceStatus = 1;
  if (this->referencestatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->referencestatus(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_HealthInfo_ReferenceStatus)
  return target;
}

size_t Value_HealthInfo_ReferenceStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_HealthInfo_ReferenceStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GoogleProtoBB.ReferenceStatus referenceStatus = 1;
  if (this->referencestatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->referencestatus());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_HealthInfo_ReferenceStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_HealthInfo_ReferenceStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_HealthInfo_ReferenceStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_HealthInfo_ReferenceStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_HealthInfo_ReferenceStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_HealthInfo_ReferenceStatus)
    MergeFrom(*source);
  }
}

void Value_HealthInfo_ReferenceStatus::MergeFrom(const Value_HealthInfo_ReferenceStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_HealthInfo_ReferenceStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.referencestatus() != 0) {
    set_referencestatus(from.referencestatus());
  }
}

void Value_HealthInfo_ReferenceStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_HealthInfo_ReferenceStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_HealthInfo_ReferenceStatus::CopyFrom(const Value_HealthInfo_ReferenceStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_HealthInfo_ReferenceStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_HealthInfo_ReferenceStatus::IsInitialized() const {
  return true;
}

void Value_HealthInfo_ReferenceStatus::Swap(Value_HealthInfo_ReferenceStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_HealthInfo_ReferenceStatus::InternalSwap(Value_HealthInfo_ReferenceStatus* other) {
  using std::swap;
  swap(referencestatus_, other->referencestatus_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_HealthInfo_ReferenceStatus::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_HealthInfo_SerialNumber_ServerInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_HealthInfo_SerialNumber_ServerInfo::kIpFieldNumber;
const int Value_HealthInfo_SerialNumber_ServerInfo::kSnSizeFieldNumber;
const int Value_HealthInfo_SerialNumber_ServerInfo::kSnFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_HealthInfo_SerialNumber_ServerInfo::Value_HealthInfo_SerialNumber_ServerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_SerialNumber_ServerInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_HealthInfo_SerialNumber.ServerInfo)
}
Value_HealthInfo_SerialNumber_ServerInfo::Value_HealthInfo_SerialNumber_ServerInfo(const Value_HealthInfo_SerialNumber_ServerInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sn().size() > 0) {
    sn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sn_);
  }
  ::memcpy(&ip_, &from.ip_,
    static_cast<size_t>(reinterpret_cast<char*>(&snsize_) -
    reinterpret_cast<char*>(&ip_)) + sizeof(snsize_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_HealthInfo_SerialNumber.ServerInfo)
}

void Value_HealthInfo_SerialNumber_ServerInfo::SharedCtor() {
  sn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ip_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&snsize_) -
      reinterpret_cast<char*>(&ip_)) + sizeof(snsize_));
}

Value_HealthInfo_SerialNumber_ServerInfo::~Value_HealthInfo_SerialNumber_ServerInfo() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_HealthInfo_SerialNumber.ServerInfo)
  SharedDtor();
}

void Value_HealthInfo_SerialNumber_ServerInfo::SharedDtor() {
  sn_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Value_HealthInfo_SerialNumber_ServerInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_HealthInfo_SerialNumber_ServerInfo::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_HealthInfo_SerialNumber_ServerInfo& Value_HealthInfo_SerialNumber_ServerInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_SerialNumber_ServerInfo.base);
  return *internal_default_instance();
}


void Value_HealthInfo_SerialNumber_ServerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_HealthInfo_SerialNumber.ServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ip_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&snsize_) -
      reinterpret_cast<char*>(&ip_)) + sizeof(snsize_));
  _internal_metadata_.Clear();
}

bool Value_HealthInfo_SerialNumber_ServerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_HealthInfo_SerialNumber.ServerInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 snSize = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &snsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes sn = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sn()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_HealthInfo_SerialNumber.ServerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_HealthInfo_SerialNumber.ServerInfo)
  return false;
#undef DO_
}

void Value_HealthInfo_SerialNumber_ServerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_HealthInfo_SerialNumber.ServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ip = 1;
  if (this->ip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ip(), output);
  }

  // uint32 snSize = 2;
  if (this->snsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->snsize(), output);
  }

  // bytes sn = 3;
  if (this->sn().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->sn(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_HealthInfo_SerialNumber.ServerInfo)
}

::google::protobuf::uint8* Value_HealthInfo_SerialNumber_ServerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_HealthInfo_SerialNumber.ServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ip = 1;
  if (this->ip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ip(), target);
  }

  // uint32 snSize = 2;
  if (this->snsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->snsize(), target);
  }

  // bytes sn = 3;
  if (this->sn().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->sn(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_HealthInfo_SerialNumber.ServerInfo)
  return target;
}

size_t Value_HealthInfo_SerialNumber_ServerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_HealthInfo_SerialNumber.ServerInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes sn = 3;
  if (this->sn().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sn());
  }

  // int32 ip = 1;
  if (this->ip() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ip());
  }

  // uint32 snSize = 2;
  if (this->snsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->snsize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_HealthInfo_SerialNumber_ServerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_HealthInfo_SerialNumber.ServerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_HealthInfo_SerialNumber_ServerInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_HealthInfo_SerialNumber_ServerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_HealthInfo_SerialNumber.ServerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_HealthInfo_SerialNumber.ServerInfo)
    MergeFrom(*source);
  }
}

void Value_HealthInfo_SerialNumber_ServerInfo::MergeFrom(const Value_HealthInfo_SerialNumber_ServerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_HealthInfo_SerialNumber.ServerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sn().size() > 0) {

    sn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sn_);
  }
  if (from.ip() != 0) {
    set_ip(from.ip());
  }
  if (from.snsize() != 0) {
    set_snsize(from.snsize());
  }
}

void Value_HealthInfo_SerialNumber_ServerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_HealthInfo_SerialNumber.ServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_HealthInfo_SerialNumber_ServerInfo::CopyFrom(const Value_HealthInfo_SerialNumber_ServerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_HealthInfo_SerialNumber.ServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_HealthInfo_SerialNumber_ServerInfo::IsInitialized() const {
  return true;
}

void Value_HealthInfo_SerialNumber_ServerInfo::Swap(Value_HealthInfo_SerialNumber_ServerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_HealthInfo_SerialNumber_ServerInfo::InternalSwap(Value_HealthInfo_SerialNumber_ServerInfo* other) {
  using std::swap;
  sn_.Swap(&other->sn_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ip_, other->ip_);
  swap(snsize_, other->snsize_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_HealthInfo_SerialNumber_ServerInfo::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_HealthInfo_SerialNumber::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_HealthInfo_SerialNumber::kNbServerFieldNumber;
const int Value_HealthInfo_SerialNumber::kServerInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_HealthInfo_SerialNumber::Value_HealthInfo_SerialNumber()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_SerialNumber.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_HealthInfo_SerialNumber)
}
Value_HealthInfo_SerialNumber::Value_HealthInfo_SerialNumber(const Value_HealthInfo_SerialNumber& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      serverinfo_(from.serverinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nbserver_ = from.nbserver_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_HealthInfo_SerialNumber)
}

void Value_HealthInfo_SerialNumber::SharedCtor() {
  nbserver_ = 0u;
}

Value_HealthInfo_SerialNumber::~Value_HealthInfo_SerialNumber() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_HealthInfo_SerialNumber)
  SharedDtor();
}

void Value_HealthInfo_SerialNumber::SharedDtor() {
}

void Value_HealthInfo_SerialNumber::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_HealthInfo_SerialNumber::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_HealthInfo_SerialNumber& Value_HealthInfo_SerialNumber::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_SerialNumber.base);
  return *internal_default_instance();
}


void Value_HealthInfo_SerialNumber::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_HealthInfo_SerialNumber)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  serverinfo_.Clear();
  nbserver_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_HealthInfo_SerialNumber::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_HealthInfo_SerialNumber)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 nbServer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nbserver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_HealthInfo_SerialNumber.ServerInfo serverInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_serverinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_HealthInfo_SerialNumber)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_HealthInfo_SerialNumber)
  return false;
#undef DO_
}

void Value_HealthInfo_SerialNumber::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_HealthInfo_SerialNumber)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 nbServer = 1;
  if (this->nbserver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->nbserver(), output);
  }

  // repeated .GoogleProtoBB.Value_HealthInfo_SerialNumber.ServerInfo serverInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->serverinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->serverinfo(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_HealthInfo_SerialNumber)
}

::google::protobuf::uint8* Value_HealthInfo_SerialNumber::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_HealthInfo_SerialNumber)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 nbServer = 1;
  if (this->nbserver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->nbserver(), target);
  }

  // repeated .GoogleProtoBB.Value_HealthInfo_SerialNumber.ServerInfo serverInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->serverinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->serverinfo(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_HealthInfo_SerialNumber)
  return target;
}

size_t Value_HealthInfo_SerialNumber::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_HealthInfo_SerialNumber)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_HealthInfo_SerialNumber.ServerInfo serverInfo = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->serverinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->serverinfo(static_cast<int>(i)));
    }
  }

  // uint32 nbServer = 1;
  if (this->nbserver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nbserver());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_HealthInfo_SerialNumber::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_HealthInfo_SerialNumber)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_HealthInfo_SerialNumber* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_HealthInfo_SerialNumber>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_HealthInfo_SerialNumber)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_HealthInfo_SerialNumber)
    MergeFrom(*source);
  }
}

void Value_HealthInfo_SerialNumber::MergeFrom(const Value_HealthInfo_SerialNumber& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_HealthInfo_SerialNumber)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  serverinfo_.MergeFrom(from.serverinfo_);
  if (from.nbserver() != 0) {
    set_nbserver(from.nbserver());
  }
}

void Value_HealthInfo_SerialNumber::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_HealthInfo_SerialNumber)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_HealthInfo_SerialNumber::CopyFrom(const Value_HealthInfo_SerialNumber& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_HealthInfo_SerialNumber)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_HealthInfo_SerialNumber::IsInitialized() const {
  return true;
}

void Value_HealthInfo_SerialNumber::Swap(Value_HealthInfo_SerialNumber* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_HealthInfo_SerialNumber::InternalSwap(Value_HealthInfo_SerialNumber* other) {
  using std::swap;
  CastToBase(&serverinfo_)->InternalSwap(CastToBase(&other->serverinfo_));
  swap(nbserver_, other->nbserver_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_HealthInfo_SerialNumber::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_HealthInfo_RemainingTimePerCam_RemainingTime::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_HealthInfo_RemainingTimePerCam_RemainingTime::kCamFieldNumber;
const int Value_HealthInfo_RemainingTimePerCam_RemainingTime::kRemainingSecondFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_HealthInfo_RemainingTimePerCam_RemainingTime::Value_HealthInfo_RemainingTimePerCam_RemainingTime()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_RemainingTimePerCam_RemainingTime.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam.RemainingTime)
}
Value_HealthInfo_RemainingTimePerCam_RemainingTime::Value_HealthInfo_RemainingTimePerCam_RemainingTime(const Value_HealthInfo_RemainingTimePerCam_RemainingTime& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cam_, &from.cam_,
    static_cast<size_t>(reinterpret_cast<char*>(&remainingsecond_) -
    reinterpret_cast<char*>(&cam_)) + sizeof(remainingsecond_));
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam.RemainingTime)
}

void Value_HealthInfo_RemainingTimePerCam_RemainingTime::SharedCtor() {
  ::memset(&cam_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&remainingsecond_) -
      reinterpret_cast<char*>(&cam_)) + sizeof(remainingsecond_));
}

Value_HealthInfo_RemainingTimePerCam_RemainingTime::~Value_HealthInfo_RemainingTimePerCam_RemainingTime() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam.RemainingTime)
  SharedDtor();
}

void Value_HealthInfo_RemainingTimePerCam_RemainingTime::SharedDtor() {
}

void Value_HealthInfo_RemainingTimePerCam_RemainingTime::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_HealthInfo_RemainingTimePerCam_RemainingTime::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_HealthInfo_RemainingTimePerCam_RemainingTime& Value_HealthInfo_RemainingTimePerCam_RemainingTime::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_RemainingTimePerCam_RemainingTime.base);
  return *internal_default_instance();
}


void Value_HealthInfo_RemainingTimePerCam_RemainingTime::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam.RemainingTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cam_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&remainingsecond_) -
      reinterpret_cast<char*>(&cam_)) + sizeof(remainingsecond_));
  _internal_metadata_.Clear();
}

bool Value_HealthInfo_RemainingTimePerCam_RemainingTime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam.RemainingTime)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.CamID cam = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cam(static_cast< ::GoogleProtoBB::CamID >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 remainingSecond = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &remainingsecond_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam.RemainingTime)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam.RemainingTime)
  return false;
#undef DO_
}

void Value_HealthInfo_RemainingTimePerCam_RemainingTime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam.RemainingTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CamID cam = 1;
  if (this->cam() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cam(), output);
  }

  // uint32 remainingSecond = 2;
  if (this->remainingsecond() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->remainingsecond(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam.RemainingTime)
}

::google::protobuf::uint8* Value_HealthInfo_RemainingTimePerCam_RemainingTime::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam.RemainingTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.CamID cam = 1;
  if (this->cam() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cam(), target);
  }

  // uint32 remainingSecond = 2;
  if (this->remainingsecond() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->remainingsecond(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam.RemainingTime)
  return target;
}

size_t Value_HealthInfo_RemainingTimePerCam_RemainingTime::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam.RemainingTime)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GoogleProtoBB.CamID cam = 1;
  if (this->cam() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cam());
  }

  // uint32 remainingSecond = 2;
  if (this->remainingsecond() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->remainingsecond());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_HealthInfo_RemainingTimePerCam_RemainingTime::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam.RemainingTime)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_HealthInfo_RemainingTimePerCam_RemainingTime* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_HealthInfo_RemainingTimePerCam_RemainingTime>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam.RemainingTime)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam.RemainingTime)
    MergeFrom(*source);
  }
}

void Value_HealthInfo_RemainingTimePerCam_RemainingTime::MergeFrom(const Value_HealthInfo_RemainingTimePerCam_RemainingTime& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam.RemainingTime)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cam() != 0) {
    set_cam(from.cam());
  }
  if (from.remainingsecond() != 0) {
    set_remainingsecond(from.remainingsecond());
  }
}

void Value_HealthInfo_RemainingTimePerCam_RemainingTime::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam.RemainingTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_HealthInfo_RemainingTimePerCam_RemainingTime::CopyFrom(const Value_HealthInfo_RemainingTimePerCam_RemainingTime& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam.RemainingTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_HealthInfo_RemainingTimePerCam_RemainingTime::IsInitialized() const {
  return true;
}

void Value_HealthInfo_RemainingTimePerCam_RemainingTime::Swap(Value_HealthInfo_RemainingTimePerCam_RemainingTime* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_HealthInfo_RemainingTimePerCam_RemainingTime::InternalSwap(Value_HealthInfo_RemainingTimePerCam_RemainingTime* other) {
  using std::swap;
  swap(cam_, other->cam_);
  swap(remainingsecond_, other->remainingsecond_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_HealthInfo_RemainingTimePerCam_RemainingTime::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_HealthInfo_RemainingTimePerCam::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_HealthInfo_RemainingTimePerCam::kCountFieldNumber;
const int Value_HealthInfo_RemainingTimePerCam::kRemainingTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_HealthInfo_RemainingTimePerCam::Value_HealthInfo_RemainingTimePerCam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_RemainingTimePerCam.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam)
}
Value_HealthInfo_RemainingTimePerCam::Value_HealthInfo_RemainingTimePerCam(const Value_HealthInfo_RemainingTimePerCam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      remainingtime_(from.remainingtime_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam)
}

void Value_HealthInfo_RemainingTimePerCam::SharedCtor() {
  count_ = 0u;
}

Value_HealthInfo_RemainingTimePerCam::~Value_HealthInfo_RemainingTimePerCam() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam)
  SharedDtor();
}

void Value_HealthInfo_RemainingTimePerCam::SharedDtor() {
}

void Value_HealthInfo_RemainingTimePerCam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_HealthInfo_RemainingTimePerCam::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_HealthInfo_RemainingTimePerCam& Value_HealthInfo_RemainingTimePerCam::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_HealthInfo_RemainingTimePerCam.base);
  return *internal_default_instance();
}


void Value_HealthInfo_RemainingTimePerCam::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  remainingtime_.Clear();
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Value_HealthInfo_RemainingTimePerCam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam.RemainingTime remainingTime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_remainingtime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam)
  return false;
#undef DO_
}

void Value_HealthInfo_RemainingTimePerCam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam.RemainingTime remainingTime = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->remainingtime_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->remainingtime(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam)
}

::google::protobuf::uint8* Value_HealthInfo_RemainingTimePerCam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam.RemainingTime remainingTime = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->remainingtime_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->remainingtime(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam)
  return target;
}

size_t Value_HealthInfo_RemainingTimePerCam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam.RemainingTime remainingTime = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->remainingtime_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->remainingtime(static_cast<int>(i)));
    }
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_HealthInfo_RemainingTimePerCam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_HealthInfo_RemainingTimePerCam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_HealthInfo_RemainingTimePerCam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam)
    MergeFrom(*source);
  }
}

void Value_HealthInfo_RemainingTimePerCam::MergeFrom(const Value_HealthInfo_RemainingTimePerCam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  remainingtime_.MergeFrom(from.remainingtime_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Value_HealthInfo_RemainingTimePerCam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_HealthInfo_RemainingTimePerCam::CopyFrom(const Value_HealthInfo_RemainingTimePerCam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_HealthInfo_RemainingTimePerCam::IsInitialized() const {
  return true;
}

void Value_HealthInfo_RemainingTimePerCam::Swap(Value_HealthInfo_RemainingTimePerCam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_HealthInfo_RemainingTimePerCam::InternalSwap(Value_HealthInfo_RemainingTimePerCam* other) {
  using std::swap;
  CastToBase(&remainingtime_)->InternalSwap(CastToBase(&other->remainingtime_));
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_HealthInfo_RemainingTimePerCam::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Film_Effect_Status::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Film_Effect_Status::kPGMEnabledFieldNumber;
const int Value_Film_Effect_Status::kPRVEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Film_Effect_Status::Value_Film_Effect_Status()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Film_Effect_Status.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Film_Effect_Status)
}
Value_Film_Effect_Status::Value_Film_Effect_Status(const Value_Film_Effect_Status& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pgm_enabled_(from.pgm_enabled_),
      prv_enabled_(from.prv_enabled_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Film_Effect_Status)
}

void Value_Film_Effect_Status::SharedCtor() {
}

Value_Film_Effect_Status::~Value_Film_Effect_Status() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Film_Effect_Status)
  SharedDtor();
}

void Value_Film_Effect_Status::SharedDtor() {
}

void Value_Film_Effect_Status::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Film_Effect_Status::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Film_Effect_Status& Value_Film_Effect_Status::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Film_Effect_Status.base);
  return *internal_default_instance();
}


void Value_Film_Effect_Status::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Film_Effect_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pgm_enabled_.Clear();
  prv_enabled_.Clear();
  _internal_metadata_.Clear();
}

bool Value_Film_Effect_Status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Film_Effect_Status)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bool PGM_enabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_pgm_enabled())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 10u, input, this->mutable_pgm_enabled())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool PRV_enabled = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_prv_enabled())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 18u, input, this->mutable_prv_enabled())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Film_Effect_Status)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Film_Effect_Status)
  return false;
#undef DO_
}

void Value_Film_Effect_Status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Film_Effect_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool PGM_enabled = 1;
  if (this->pgm_enabled_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _pgm_enabled_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->pgm_enabled().data(), this->pgm_enabled_size(), output);
  }

  // repeated bool PRV_enabled = 2;
  if (this->prv_enabled_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _prv_enabled_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->prv_enabled().data(), this->prv_enabled_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Film_Effect_Status)
}

::google::protobuf::uint8* Value_Film_Effect_Status::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Film_Effect_Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool PGM_enabled = 1;
  if (this->pgm_enabled_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _pgm_enabled_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->pgm_enabled_, target);
  }

  // repeated bool PRV_enabled = 2;
  if (this->prv_enabled_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _prv_enabled_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->prv_enabled_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Film_Effect_Status)
  return target;
}

size_t Value_Film_Effect_Status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Film_Effect_Status)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bool PGM_enabled = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->pgm_enabled_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _pgm_enabled_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool PRV_enabled = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->prv_enabled_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _prv_enabled_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Film_Effect_Status::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Film_Effect_Status)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Film_Effect_Status* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Film_Effect_Status>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Film_Effect_Status)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Film_Effect_Status)
    MergeFrom(*source);
  }
}

void Value_Film_Effect_Status::MergeFrom(const Value_Film_Effect_Status& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Film_Effect_Status)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pgm_enabled_.MergeFrom(from.pgm_enabled_);
  prv_enabled_.MergeFrom(from.prv_enabled_);
}

void Value_Film_Effect_Status::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Film_Effect_Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Film_Effect_Status::CopyFrom(const Value_Film_Effect_Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Film_Effect_Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Film_Effect_Status::IsInitialized() const {
  return true;
}

void Value_Film_Effect_Status::Swap(Value_Film_Effect_Status* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Film_Effect_Status::InternalSwap(Value_Film_Effect_Status* other) {
  using std::swap;
  pgm_enabled_.InternalSwap(&other->pgm_enabled_);
  prv_enabled_.InternalSwap(&other->prv_enabled_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Film_Effect_Status::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value_Common_TimeReference::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_Common_TimeReference::kTimeReferenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_Common_TimeReference::Value_Common_TimeReference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_Value_Common_TimeReference.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.Value_Common_TimeReference)
}
Value_Common_TimeReference::Value_Common_TimeReference(const Value_Common_TimeReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timereference_ = from.timereference_;
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.Value_Common_TimeReference)
}

void Value_Common_TimeReference::SharedCtor() {
  timereference_ = GOOGLE_ULONGLONG(0);
}

Value_Common_TimeReference::~Value_Common_TimeReference() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.Value_Common_TimeReference)
  SharedDtor();
}

void Value_Common_TimeReference::SharedDtor() {
}

void Value_Common_TimeReference::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value_Common_TimeReference::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value_Common_TimeReference& Value_Common_TimeReference::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_Value_Common_TimeReference.base);
  return *internal_default_instance();
}


void Value_Common_TimeReference::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.Value_Common_TimeReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  timereference_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Value_Common_TimeReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.Value_Common_TimeReference)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 timeReference = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timereference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.Value_Common_TimeReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.Value_Common_TimeReference)
  return false;
#undef DO_
}

void Value_Common_TimeReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.Value_Common_TimeReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 timeReference = 1;
  if (this->timereference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->timereference(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.Value_Common_TimeReference)
}

::google::protobuf::uint8* Value_Common_TimeReference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.Value_Common_TimeReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 timeReference = 1;
  if (this->timereference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->timereference(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.Value_Common_TimeReference)
  return target;
}

size_t Value_Common_TimeReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.Value_Common_TimeReference)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 timeReference = 1;
  if (this->timereference() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timereference());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value_Common_TimeReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.Value_Common_TimeReference)
  GOOGLE_DCHECK_NE(&from, this);
  const Value_Common_TimeReference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value_Common_TimeReference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.Value_Common_TimeReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.Value_Common_TimeReference)
    MergeFrom(*source);
  }
}

void Value_Common_TimeReference::MergeFrom(const Value_Common_TimeReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.Value_Common_TimeReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.timereference() != 0) {
    set_timereference(from.timereference());
  }
}

void Value_Common_TimeReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.Value_Common_TimeReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value_Common_TimeReference::CopyFrom(const Value_Common_TimeReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.Value_Common_TimeReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_Common_TimeReference::IsInitialized() const {
  return true;
}

void Value_Common_TimeReference::Swap(Value_Common_TimeReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_Common_TimeReference::InternalSwap(Value_Common_TimeReference* other) {
  using std::swap;
  swap(timereference_, other->timereference_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value_Common_TimeReference::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BroadCastData::InitAsDefaultInstance() {
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_recorder_train_in_out_ = const_cast< ::GoogleProtoBB::Value_Recorder_Train_In_Out*>(
      ::GoogleProtoBB::Value_Recorder_Train_In_Out::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_player_status_ = const_cast< ::GoogleProtoBB::Value_Player_Status*>(
      ::GoogleProtoBB::Value_Player_Status::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_camera_type_ = const_cast< ::GoogleProtoBB::Value_Camera_Type*>(
      ::GoogleProtoBB::Value_Camera_Type::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_recorder_closedcaption_ = const_cast< ::GoogleProtoBB::Value_Recorder_ClosedCaption*>(
      ::GoogleProtoBB::Value_Recorder_ClosedCaption::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_player_closedcaption_ = const_cast< ::GoogleProtoBB::Value_Player_ClosedCaption*>(
      ::GoogleProtoBB::Value_Player_ClosedCaption::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_player_group_ = const_cast< ::GoogleProtoBB::Value_Player_Group*>(
      ::GoogleProtoBB::Value_Player_Group::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_player_camera_ = const_cast< ::GoogleProtoBB::Value_Player_Camera*>(
      ::GoogleProtoBB::Value_Player_Camera::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_player_type_ = const_cast< ::GoogleProtoBB::Value_Player_Type*>(
      ::GoogleProtoBB::Value_Player_Type::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_player_audiopresetid_ = const_cast< ::GoogleProtoBB::Value_Player_AudioPresetId*>(
      ::GoogleProtoBB::Value_Player_AudioPresetId::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_player_speed_ = const_cast< ::GoogleProtoBB::Value_Player_Speed*>(
      ::GoogleProtoBB::Value_Player_Speed::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_player_consigne_ = const_cast< ::GoogleProtoBB::Value_Player_Consigne*>(
      ::GoogleProtoBB::Value_Player_Consigne::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_player_mode_ = const_cast< ::GoogleProtoBB::Value_Player_Mode*>(
      ::GoogleProtoBB::Value_Player_Mode::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_player_extend_playlist_ = const_cast< ::GoogleProtoBB::Value_Player_Extend_Playlist*>(
      ::GoogleProtoBB::Value_Player_Extend_Playlist::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_player_limit_in_out_ = const_cast< ::GoogleProtoBB::Value_Player_Limit_In_Out*>(
      ::GoogleProtoBB::Value_Player_Limit_In_Out::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_player_loop_mode_ = const_cast< ::GoogleProtoBB::Value_Player_Loop_Mode*>(
      ::GoogleProtoBB::Value_Player_Loop_Mode::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_player_loop_count_ = const_cast< ::GoogleProtoBB::Value_Player_Loop_Count*>(
      ::GoogleProtoBB::Value_Player_Loop_Count::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_player_playlist_id_ = const_cast< ::GoogleProtoBB::Value_Player_Playlist_ID*>(
      ::GoogleProtoBB::Value_Player_Playlist_ID::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_player_playlist_element_id_ = const_cast< ::GoogleProtoBB::Value_Player_Playlist_Element_ID*>(
      ::GoogleProtoBB::Value_Player_Playlist_Element_ID::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_dve_mode_ = const_cast< ::GoogleProtoBB::Value_DVE_Mode*>(
      ::GoogleProtoBB::Value_DVE_Mode::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_dve_type_ = const_cast< ::GoogleProtoBB::Value_DVE_Type*>(
      ::GoogleProtoBB::Value_DVE_Type::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_dve_channel_ = const_cast< ::GoogleProtoBB::Value_DVE_Channel*>(
      ::GoogleProtoBB::Value_DVE_Channel::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_dve_num_ = const_cast< ::GoogleProtoBB::Value_DVE_Num*>(
      ::GoogleProtoBB::Value_DVE_Num::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_dve_den_ = const_cast< ::GoogleProtoBB::Value_DVE_Den*>(
      ::GoogleProtoBB::Value_DVE_Den::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_dve_cutthreshold_ = const_cast< ::GoogleProtoBB::Value_DVE_CutThreshold*>(
      ::GoogleProtoBB::Value_DVE_CutThreshold::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_dve_custom_transparency_ = const_cast< ::GoogleProtoBB::Value_DVE_Custom_Transparency*>(
      ::GoogleProtoBB::Value_DVE_Custom_Transparency::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_rtd_status_ = const_cast< ::GoogleProtoBB::Value_RTD_Status*>(
      ::GoogleProtoBB::Value_RTD_Status::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_rtd_type_ = const_cast< ::GoogleProtoBB::Value_RTD_Type*>(
      ::GoogleProtoBB::Value_RTD_Type::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_rtd_position_ = const_cast< ::GoogleProtoBB::Value_RTD_Position*>(
      ::GoogleProtoBB::Value_RTD_Position::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_gfx_status_ = const_cast< ::GoogleProtoBB::Value_GFX_Status*>(
      ::GoogleProtoBB::Value_GFX_Status::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_gfx_position_ = const_cast< ::GoogleProtoBB::Value_GFX_Position*>(
      ::GoogleProtoBB::Value_GFX_Position::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_gfx_fade_in_out_duration_ = const_cast< ::GoogleProtoBB::Value_GFX_Fade_In_Out_Duration*>(
      ::GoogleProtoBB::Value_GFX_Fade_In_Out_Duration::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_gfx_loop_in_out_ = const_cast< ::GoogleProtoBB::Value_GFX_Loop_In_Out*>(
      ::GoogleProtoBB::Value_GFX_Loop_In_Out::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_gfx_loop_count_ = const_cast< ::GoogleProtoBB::Value_GFX_Loop_Count*>(
      ::GoogleProtoBB::Value_GFX_Loop_Count::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_gfx_preload_status_ = const_cast< ::GoogleProtoBB::Value_GFX_Preload_Status*>(
      ::GoogleProtoBB::Value_GFX_Preload_Status::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_healthinfo_version_ = const_cast< ::GoogleProtoBB::Value_HealthInfo_Version*>(
      ::GoogleProtoBB::Value_HealthInfo_Version::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_healthinfo_mixer_status_ = const_cast< ::GoogleProtoBB::Value_HealthInfo_Mixer_Status*>(
      ::GoogleProtoBB::Value_HealthInfo_Mixer_Status::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_healthinfo_network_bandwidth_ = const_cast< ::GoogleProtoBB::Value_HealthInfo_Network_Bandwidth*>(
      ::GoogleProtoBB::Value_HealthInfo_Network_Bandwidth::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_healthinfo_gpu_temperature_ = const_cast< ::GoogleProtoBB::Value_HealthInfo_GPU_Temperature*>(
      ::GoogleProtoBB::Value_HealthInfo_GPU_Temperature::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_healthinfo_aja_status_ = const_cast< ::GoogleProtoBB::Value_HealthInfo_AJA_Status*>(
      ::GoogleProtoBB::Value_HealthInfo_AJA_Status::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_healthinfo_hdd_status_ = const_cast< ::GoogleProtoBB::Value_HealthInfo_HDD_Status*>(
      ::GoogleProtoBB::Value_HealthInfo_HDD_Status::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_healthinfo_asio_status_ = const_cast< ::GoogleProtoBB::Value_HealthInfo_ASIO_Status*>(
      ::GoogleProtoBB::Value_HealthInfo_ASIO_Status::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_healthinfo_external_timecode_ = const_cast< ::GoogleProtoBB::Value_HealthInfo_External_TimeCode*>(
      ::GoogleProtoBB::Value_HealthInfo_External_TimeCode::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_custominfo_ = const_cast< ::GoogleProtoBB::Value_CustomInfo*>(
      ::GoogleProtoBB::Value_CustomInfo::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_bmr_setting_ = const_cast< ::GoogleProtoBB::Value_BMR_Setting*>(
      ::GoogleProtoBB::Value_BMR_Setting::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_vumeter_live_mixer_pgm_ = const_cast< ::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM*>(
      ::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_pip_status_ = const_cast< ::GoogleProtoBB::Value_PiP_Status*>(
      ::GoogleProtoBB::Value_PiP_Status::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_server_memory_ = const_cast< ::GoogleProtoBB::Value_Server_Memory*>(
      ::GoogleProtoBB::Value_Server_Memory::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_cache_replayplayer_highresvideo_ = const_cast< ::GoogleProtoBB::Value_Cache_ReplayPlayer_HighResVideo*>(
      ::GoogleProtoBB::Value_Cache_ReplayPlayer_HighResVideo::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_cache_replayplayer_externalaudio_ = const_cast< ::GoogleProtoBB::Value_Cache_ReplayPlayer_ExternalAudio*>(
      ::GoogleProtoBB::Value_Cache_ReplayPlayer_ExternalAudio::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_storage_capacity_ = const_cast< ::GoogleProtoBB::Value_Storage_Capacity*>(
      ::GoogleProtoBB::Value_Storage_Capacity::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_healthinfo_referencestatus_ = const_cast< ::GoogleProtoBB::Value_HealthInfo_ReferenceStatus*>(
      ::GoogleProtoBB::Value_HealthInfo_ReferenceStatus::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_healthinfo_serialnumber_ = const_cast< ::GoogleProtoBB::Value_HealthInfo_SerialNumber*>(
      ::GoogleProtoBB::Value_HealthInfo_SerialNumber::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_healthinfo_remainingtimepercam_ = const_cast< ::GoogleProtoBB::Value_HealthInfo_RemainingTimePerCam*>(
      ::GoogleProtoBB::Value_HealthInfo_RemainingTimePerCam::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_film_effect_status_ = const_cast< ::GoogleProtoBB::Value_Film_Effect_Status*>(
      ::GoogleProtoBB::Value_Film_Effect_Status::internal_default_instance());
  ::GoogleProtoBB::_BroadCastData_default_instance_._instance.get_mutable()->value_common_timereference_ = const_cast< ::GoogleProtoBB::Value_Common_TimeReference*>(
      ::GoogleProtoBB::Value_Common_TimeReference::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BroadCastData::kValueRecorderTrainInOutFieldNumber;
const int BroadCastData::kValuePlayerStatusFieldNumber;
const int BroadCastData::kValueCameraTypeFieldNumber;
const int BroadCastData::kValueRecorderClosedCaptionFieldNumber;
const int BroadCastData::kValuePlayerClosedCaptionFieldNumber;
const int BroadCastData::kValuePlayerGroupFieldNumber;
const int BroadCastData::kValuePlayerCameraFieldNumber;
const int BroadCastData::kValuePlayerTypeFieldNumber;
const int BroadCastData::kValuePlayerAudioPresetIdFieldNumber;
const int BroadCastData::kValuePlayerSpeedFieldNumber;
const int BroadCastData::kValuePlayerConsigneFieldNumber;
const int BroadCastData::kValuePlayerModeFieldNumber;
const int BroadCastData::kValuePlayerExtendPlaylistFieldNumber;
const int BroadCastData::kValuePlayerLimitInOutFieldNumber;
const int BroadCastData::kValuePlayerLoopModeFieldNumber;
const int BroadCastData::kValuePlayerLoopCountFieldNumber;
const int BroadCastData::kValuePlayerPlaylistIDFieldNumber;
const int BroadCastData::kValuePlayerPlaylistElementIDFieldNumber;
const int BroadCastData::kValueDVEModeFieldNumber;
const int BroadCastData::kValueDVETypeFieldNumber;
const int BroadCastData::kValueDVEChannelFieldNumber;
const int BroadCastData::kValueDVENumFieldNumber;
const int BroadCastData::kValueDVEDenFieldNumber;
const int BroadCastData::kValueDVECutThresholdFieldNumber;
const int BroadCastData::kValueDVECustomTransparencyFieldNumber;
const int BroadCastData::kValueRTDStatusFieldNumber;
const int BroadCastData::kValueRTDTypeFieldNumber;
const int BroadCastData::kValueRTDPositionFieldNumber;
const int BroadCastData::kValueGFXStatusFieldNumber;
const int BroadCastData::kValueGFXPositionFieldNumber;
const int BroadCastData::kValueGFXFadeInOutDurationFieldNumber;
const int BroadCastData::kValueGFXLoopInOutFieldNumber;
const int BroadCastData::kValueGFXLoopCountFieldNumber;
const int BroadCastData::kValueGFXPreloadStatusFieldNumber;
const int BroadCastData::kValueHealthInfoVersionFieldNumber;
const int BroadCastData::kValueHealthInfoMixerStatusFieldNumber;
const int BroadCastData::kValueHealthInfoNetworkBandwidthFieldNumber;
const int BroadCastData::kValueHealthInfoGPUTemperatureFieldNumber;
const int BroadCastData::kValueHealthInfoAJAStatusFieldNumber;
const int BroadCastData::kValueHealthInfoHDDStatusFieldNumber;
const int BroadCastData::kValueHealthInfoASIOStatusFieldNumber;
const int BroadCastData::kValueHealthInfoExternalTimeCodeFieldNumber;
const int BroadCastData::kValueCustomInfoFieldNumber;
const int BroadCastData::kValueBMRSettingFieldNumber;
const int BroadCastData::kValueVuMeterLiveMixerPGMFieldNumber;
const int BroadCastData::kValuePiPStatusFieldNumber;
const int BroadCastData::kValueServerMemoryFieldNumber;
const int BroadCastData::kValueCacheReplayPlayerHighResVideoFieldNumber;
const int BroadCastData::kValueCacheReplayPlayerExternalAudioFieldNumber;
const int BroadCastData::kValueStorageCapacityFieldNumber;
const int BroadCastData::kValueHealthInfoReferenceStatusFieldNumber;
const int BroadCastData::kValueHealthInfoSerialNumberFieldNumber;
const int BroadCastData::kValueHealthInfoRemainingTimePerCamFieldNumber;
const int BroadCastData::kValueFilmEffectStatusFieldNumber;
const int BroadCastData::kValueCommonTimeReferenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BroadCastData::BroadCastData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_broadcast_2eproto::scc_info_BroadCastData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:GoogleProtoBB.BroadCastData)
}
BroadCastData::BroadCastData(const BroadCastData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_value_recorder_train_in_out()) {
    value_recorder_train_in_out_ = new ::GoogleProtoBB::Value_Recorder_Train_In_Out(*from.value_recorder_train_in_out_);
  } else {
    value_recorder_train_in_out_ = NULL;
  }
  if (from.has_value_player_status()) {
    value_player_status_ = new ::GoogleProtoBB::Value_Player_Status(*from.value_player_status_);
  } else {
    value_player_status_ = NULL;
  }
  if (from.has_value_camera_type()) {
    value_camera_type_ = new ::GoogleProtoBB::Value_Camera_Type(*from.value_camera_type_);
  } else {
    value_camera_type_ = NULL;
  }
  if (from.has_value_recorder_closedcaption()) {
    value_recorder_closedcaption_ = new ::GoogleProtoBB::Value_Recorder_ClosedCaption(*from.value_recorder_closedcaption_);
  } else {
    value_recorder_closedcaption_ = NULL;
  }
  if (from.has_value_player_closedcaption()) {
    value_player_closedcaption_ = new ::GoogleProtoBB::Value_Player_ClosedCaption(*from.value_player_closedcaption_);
  } else {
    value_player_closedcaption_ = NULL;
  }
  if (from.has_value_player_group()) {
    value_player_group_ = new ::GoogleProtoBB::Value_Player_Group(*from.value_player_group_);
  } else {
    value_player_group_ = NULL;
  }
  if (from.has_value_player_camera()) {
    value_player_camera_ = new ::GoogleProtoBB::Value_Player_Camera(*from.value_player_camera_);
  } else {
    value_player_camera_ = NULL;
  }
  if (from.has_value_player_type()) {
    value_player_type_ = new ::GoogleProtoBB::Value_Player_Type(*from.value_player_type_);
  } else {
    value_player_type_ = NULL;
  }
  if (from.has_value_player_audiopresetid()) {
    value_player_audiopresetid_ = new ::GoogleProtoBB::Value_Player_AudioPresetId(*from.value_player_audiopresetid_);
  } else {
    value_player_audiopresetid_ = NULL;
  }
  if (from.has_value_player_speed()) {
    value_player_speed_ = new ::GoogleProtoBB::Value_Player_Speed(*from.value_player_speed_);
  } else {
    value_player_speed_ = NULL;
  }
  if (from.has_value_player_consigne()) {
    value_player_consigne_ = new ::GoogleProtoBB::Value_Player_Consigne(*from.value_player_consigne_);
  } else {
    value_player_consigne_ = NULL;
  }
  if (from.has_value_player_mode()) {
    value_player_mode_ = new ::GoogleProtoBB::Value_Player_Mode(*from.value_player_mode_);
  } else {
    value_player_mode_ = NULL;
  }
  if (from.has_value_player_extend_playlist()) {
    value_player_extend_playlist_ = new ::GoogleProtoBB::Value_Player_Extend_Playlist(*from.value_player_extend_playlist_);
  } else {
    value_player_extend_playlist_ = NULL;
  }
  if (from.has_value_player_limit_in_out()) {
    value_player_limit_in_out_ = new ::GoogleProtoBB::Value_Player_Limit_In_Out(*from.value_player_limit_in_out_);
  } else {
    value_player_limit_in_out_ = NULL;
  }
  if (from.has_value_player_loop_mode()) {
    value_player_loop_mode_ = new ::GoogleProtoBB::Value_Player_Loop_Mode(*from.value_player_loop_mode_);
  } else {
    value_player_loop_mode_ = NULL;
  }
  if (from.has_value_player_loop_count()) {
    value_player_loop_count_ = new ::GoogleProtoBB::Value_Player_Loop_Count(*from.value_player_loop_count_);
  } else {
    value_player_loop_count_ = NULL;
  }
  if (from.has_value_player_playlist_id()) {
    value_player_playlist_id_ = new ::GoogleProtoBB::Value_Player_Playlist_ID(*from.value_player_playlist_id_);
  } else {
    value_player_playlist_id_ = NULL;
  }
  if (from.has_value_player_playlist_element_id()) {
    value_player_playlist_element_id_ = new ::GoogleProtoBB::Value_Player_Playlist_Element_ID(*from.value_player_playlist_element_id_);
  } else {
    value_player_playlist_element_id_ = NULL;
  }
  if (from.has_value_dve_mode()) {
    value_dve_mode_ = new ::GoogleProtoBB::Value_DVE_Mode(*from.value_dve_mode_);
  } else {
    value_dve_mode_ = NULL;
  }
  if (from.has_value_dve_type()) {
    value_dve_type_ = new ::GoogleProtoBB::Value_DVE_Type(*from.value_dve_type_);
  } else {
    value_dve_type_ = NULL;
  }
  if (from.has_value_dve_channel()) {
    value_dve_channel_ = new ::GoogleProtoBB::Value_DVE_Channel(*from.value_dve_channel_);
  } else {
    value_dve_channel_ = NULL;
  }
  if (from.has_value_dve_num()) {
    value_dve_num_ = new ::GoogleProtoBB::Value_DVE_Num(*from.value_dve_num_);
  } else {
    value_dve_num_ = NULL;
  }
  if (from.has_value_dve_den()) {
    value_dve_den_ = new ::GoogleProtoBB::Value_DVE_Den(*from.value_dve_den_);
  } else {
    value_dve_den_ = NULL;
  }
  if (from.has_value_dve_cutthreshold()) {
    value_dve_cutthreshold_ = new ::GoogleProtoBB::Value_DVE_CutThreshold(*from.value_dve_cutthreshold_);
  } else {
    value_dve_cutthreshold_ = NULL;
  }
  if (from.has_value_dve_custom_transparency()) {
    value_dve_custom_transparency_ = new ::GoogleProtoBB::Value_DVE_Custom_Transparency(*from.value_dve_custom_transparency_);
  } else {
    value_dve_custom_transparency_ = NULL;
  }
  if (from.has_value_rtd_status()) {
    value_rtd_status_ = new ::GoogleProtoBB::Value_RTD_Status(*from.value_rtd_status_);
  } else {
    value_rtd_status_ = NULL;
  }
  if (from.has_value_rtd_type()) {
    value_rtd_type_ = new ::GoogleProtoBB::Value_RTD_Type(*from.value_rtd_type_);
  } else {
    value_rtd_type_ = NULL;
  }
  if (from.has_value_rtd_position()) {
    value_rtd_position_ = new ::GoogleProtoBB::Value_RTD_Position(*from.value_rtd_position_);
  } else {
    value_rtd_position_ = NULL;
  }
  if (from.has_value_gfx_status()) {
    value_gfx_status_ = new ::GoogleProtoBB::Value_GFX_Status(*from.value_gfx_status_);
  } else {
    value_gfx_status_ = NULL;
  }
  if (from.has_value_gfx_position()) {
    value_gfx_position_ = new ::GoogleProtoBB::Value_GFX_Position(*from.value_gfx_position_);
  } else {
    value_gfx_position_ = NULL;
  }
  if (from.has_value_gfx_fade_in_out_duration()) {
    value_gfx_fade_in_out_duration_ = new ::GoogleProtoBB::Value_GFX_Fade_In_Out_Duration(*from.value_gfx_fade_in_out_duration_);
  } else {
    value_gfx_fade_in_out_duration_ = NULL;
  }
  if (from.has_value_gfx_loop_in_out()) {
    value_gfx_loop_in_out_ = new ::GoogleProtoBB::Value_GFX_Loop_In_Out(*from.value_gfx_loop_in_out_);
  } else {
    value_gfx_loop_in_out_ = NULL;
  }
  if (from.has_value_gfx_loop_count()) {
    value_gfx_loop_count_ = new ::GoogleProtoBB::Value_GFX_Loop_Count(*from.value_gfx_loop_count_);
  } else {
    value_gfx_loop_count_ = NULL;
  }
  if (from.has_value_gfx_preload_status()) {
    value_gfx_preload_status_ = new ::GoogleProtoBB::Value_GFX_Preload_Status(*from.value_gfx_preload_status_);
  } else {
    value_gfx_preload_status_ = NULL;
  }
  if (from.has_value_healthinfo_version()) {
    value_healthinfo_version_ = new ::GoogleProtoBB::Value_HealthInfo_Version(*from.value_healthinfo_version_);
  } else {
    value_healthinfo_version_ = NULL;
  }
  if (from.has_value_healthinfo_mixer_status()) {
    value_healthinfo_mixer_status_ = new ::GoogleProtoBB::Value_HealthInfo_Mixer_Status(*from.value_healthinfo_mixer_status_);
  } else {
    value_healthinfo_mixer_status_ = NULL;
  }
  if (from.has_value_healthinfo_network_bandwidth()) {
    value_healthinfo_network_bandwidth_ = new ::GoogleProtoBB::Value_HealthInfo_Network_Bandwidth(*from.value_healthinfo_network_bandwidth_);
  } else {
    value_healthinfo_network_bandwidth_ = NULL;
  }
  if (from.has_value_healthinfo_gpu_temperature()) {
    value_healthinfo_gpu_temperature_ = new ::GoogleProtoBB::Value_HealthInfo_GPU_Temperature(*from.value_healthinfo_gpu_temperature_);
  } else {
    value_healthinfo_gpu_temperature_ = NULL;
  }
  if (from.has_value_healthinfo_aja_status()) {
    value_healthinfo_aja_status_ = new ::GoogleProtoBB::Value_HealthInfo_AJA_Status(*from.value_healthinfo_aja_status_);
  } else {
    value_healthinfo_aja_status_ = NULL;
  }
  if (from.has_value_healthinfo_hdd_status()) {
    value_healthinfo_hdd_status_ = new ::GoogleProtoBB::Value_HealthInfo_HDD_Status(*from.value_healthinfo_hdd_status_);
  } else {
    value_healthinfo_hdd_status_ = NULL;
  }
  if (from.has_value_healthinfo_asio_status()) {
    value_healthinfo_asio_status_ = new ::GoogleProtoBB::Value_HealthInfo_ASIO_Status(*from.value_healthinfo_asio_status_);
  } else {
    value_healthinfo_asio_status_ = NULL;
  }
  if (from.has_value_healthinfo_external_timecode()) {
    value_healthinfo_external_timecode_ = new ::GoogleProtoBB::Value_HealthInfo_External_TimeCode(*from.value_healthinfo_external_timecode_);
  } else {
    value_healthinfo_external_timecode_ = NULL;
  }
  if (from.has_value_custominfo()) {
    value_custominfo_ = new ::GoogleProtoBB::Value_CustomInfo(*from.value_custominfo_);
  } else {
    value_custominfo_ = NULL;
  }
  if (from.has_value_bmr_setting()) {
    value_bmr_setting_ = new ::GoogleProtoBB::Value_BMR_Setting(*from.value_bmr_setting_);
  } else {
    value_bmr_setting_ = NULL;
  }
  if (from.has_value_vumeter_live_mixer_pgm()) {
    value_vumeter_live_mixer_pgm_ = new ::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM(*from.value_vumeter_live_mixer_pgm_);
  } else {
    value_vumeter_live_mixer_pgm_ = NULL;
  }
  if (from.has_value_pip_status()) {
    value_pip_status_ = new ::GoogleProtoBB::Value_PiP_Status(*from.value_pip_status_);
  } else {
    value_pip_status_ = NULL;
  }
  if (from.has_value_server_memory()) {
    value_server_memory_ = new ::GoogleProtoBB::Value_Server_Memory(*from.value_server_memory_);
  } else {
    value_server_memory_ = NULL;
  }
  if (from.has_value_cache_replayplayer_highresvideo()) {
    value_cache_replayplayer_highresvideo_ = new ::GoogleProtoBB::Value_Cache_ReplayPlayer_HighResVideo(*from.value_cache_replayplayer_highresvideo_);
  } else {
    value_cache_replayplayer_highresvideo_ = NULL;
  }
  if (from.has_value_cache_replayplayer_externalaudio()) {
    value_cache_replayplayer_externalaudio_ = new ::GoogleProtoBB::Value_Cache_ReplayPlayer_ExternalAudio(*from.value_cache_replayplayer_externalaudio_);
  } else {
    value_cache_replayplayer_externalaudio_ = NULL;
  }
  if (from.has_value_storage_capacity()) {
    value_storage_capacity_ = new ::GoogleProtoBB::Value_Storage_Capacity(*from.value_storage_capacity_);
  } else {
    value_storage_capacity_ = NULL;
  }
  if (from.has_value_healthinfo_referencestatus()) {
    value_healthinfo_referencestatus_ = new ::GoogleProtoBB::Value_HealthInfo_ReferenceStatus(*from.value_healthinfo_referencestatus_);
  } else {
    value_healthinfo_referencestatus_ = NULL;
  }
  if (from.has_value_healthinfo_serialnumber()) {
    value_healthinfo_serialnumber_ = new ::GoogleProtoBB::Value_HealthInfo_SerialNumber(*from.value_healthinfo_serialnumber_);
  } else {
    value_healthinfo_serialnumber_ = NULL;
  }
  if (from.has_value_healthinfo_remainingtimepercam()) {
    value_healthinfo_remainingtimepercam_ = new ::GoogleProtoBB::Value_HealthInfo_RemainingTimePerCam(*from.value_healthinfo_remainingtimepercam_);
  } else {
    value_healthinfo_remainingtimepercam_ = NULL;
  }
  if (from.has_value_film_effect_status()) {
    value_film_effect_status_ = new ::GoogleProtoBB::Value_Film_Effect_Status(*from.value_film_effect_status_);
  } else {
    value_film_effect_status_ = NULL;
  }
  if (from.has_value_common_timereference()) {
    value_common_timereference_ = new ::GoogleProtoBB::Value_Common_TimeReference(*from.value_common_timereference_);
  } else {
    value_common_timereference_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:GoogleProtoBB.BroadCastData)
}

void BroadCastData::SharedCtor() {
  ::memset(&value_recorder_train_in_out_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_common_timereference_) -
      reinterpret_cast<char*>(&value_recorder_train_in_out_)) + sizeof(value_common_timereference_));
}

BroadCastData::~BroadCastData() {
  // @@protoc_insertion_point(destructor:GoogleProtoBB.BroadCastData)
  SharedDtor();
}

void BroadCastData::SharedDtor() {
  if (this != internal_default_instance()) delete value_recorder_train_in_out_;
  if (this != internal_default_instance()) delete value_player_status_;
  if (this != internal_default_instance()) delete value_camera_type_;
  if (this != internal_default_instance()) delete value_recorder_closedcaption_;
  if (this != internal_default_instance()) delete value_player_closedcaption_;
  if (this != internal_default_instance()) delete value_player_group_;
  if (this != internal_default_instance()) delete value_player_camera_;
  if (this != internal_default_instance()) delete value_player_type_;
  if (this != internal_default_instance()) delete value_player_audiopresetid_;
  if (this != internal_default_instance()) delete value_player_speed_;
  if (this != internal_default_instance()) delete value_player_consigne_;
  if (this != internal_default_instance()) delete value_player_mode_;
  if (this != internal_default_instance()) delete value_player_extend_playlist_;
  if (this != internal_default_instance()) delete value_player_limit_in_out_;
  if (this != internal_default_instance()) delete value_player_loop_mode_;
  if (this != internal_default_instance()) delete value_player_loop_count_;
  if (this != internal_default_instance()) delete value_player_playlist_id_;
  if (this != internal_default_instance()) delete value_player_playlist_element_id_;
  if (this != internal_default_instance()) delete value_dve_mode_;
  if (this != internal_default_instance()) delete value_dve_type_;
  if (this != internal_default_instance()) delete value_dve_channel_;
  if (this != internal_default_instance()) delete value_dve_num_;
  if (this != internal_default_instance()) delete value_dve_den_;
  if (this != internal_default_instance()) delete value_dve_cutthreshold_;
  if (this != internal_default_instance()) delete value_dve_custom_transparency_;
  if (this != internal_default_instance()) delete value_rtd_status_;
  if (this != internal_default_instance()) delete value_rtd_type_;
  if (this != internal_default_instance()) delete value_rtd_position_;
  if (this != internal_default_instance()) delete value_gfx_status_;
  if (this != internal_default_instance()) delete value_gfx_position_;
  if (this != internal_default_instance()) delete value_gfx_fade_in_out_duration_;
  if (this != internal_default_instance()) delete value_gfx_loop_in_out_;
  if (this != internal_default_instance()) delete value_gfx_loop_count_;
  if (this != internal_default_instance()) delete value_gfx_preload_status_;
  if (this != internal_default_instance()) delete value_healthinfo_version_;
  if (this != internal_default_instance()) delete value_healthinfo_mixer_status_;
  if (this != internal_default_instance()) delete value_healthinfo_network_bandwidth_;
  if (this != internal_default_instance()) delete value_healthinfo_gpu_temperature_;
  if (this != internal_default_instance()) delete value_healthinfo_aja_status_;
  if (this != internal_default_instance()) delete value_healthinfo_hdd_status_;
  if (this != internal_default_instance()) delete value_healthinfo_asio_status_;
  if (this != internal_default_instance()) delete value_healthinfo_external_timecode_;
  if (this != internal_default_instance()) delete value_custominfo_;
  if (this != internal_default_instance()) delete value_bmr_setting_;
  if (this != internal_default_instance()) delete value_vumeter_live_mixer_pgm_;
  if (this != internal_default_instance()) delete value_pip_status_;
  if (this != internal_default_instance()) delete value_server_memory_;
  if (this != internal_default_instance()) delete value_cache_replayplayer_highresvideo_;
  if (this != internal_default_instance()) delete value_cache_replayplayer_externalaudio_;
  if (this != internal_default_instance()) delete value_storage_capacity_;
  if (this != internal_default_instance()) delete value_healthinfo_referencestatus_;
  if (this != internal_default_instance()) delete value_healthinfo_serialnumber_;
  if (this != internal_default_instance()) delete value_healthinfo_remainingtimepercam_;
  if (this != internal_default_instance()) delete value_film_effect_status_;
  if (this != internal_default_instance()) delete value_common_timereference_;
}

void BroadCastData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BroadCastData::descriptor() {
  ::protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BroadCastData& BroadCastData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_broadcast_2eproto::scc_info_BroadCastData.base);
  return *internal_default_instance();
}


void BroadCastData::Clear() {
// @@protoc_insertion_point(message_clear_start:GoogleProtoBB.BroadCastData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && value_recorder_train_in_out_ != NULL) {
    delete value_recorder_train_in_out_;
  }
  value_recorder_train_in_out_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_player_status_ != NULL) {
    delete value_player_status_;
  }
  value_player_status_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_camera_type_ != NULL) {
    delete value_camera_type_;
  }
  value_camera_type_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_recorder_closedcaption_ != NULL) {
    delete value_recorder_closedcaption_;
  }
  value_recorder_closedcaption_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_player_closedcaption_ != NULL) {
    delete value_player_closedcaption_;
  }
  value_player_closedcaption_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_player_group_ != NULL) {
    delete value_player_group_;
  }
  value_player_group_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_player_camera_ != NULL) {
    delete value_player_camera_;
  }
  value_player_camera_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_player_type_ != NULL) {
    delete value_player_type_;
  }
  value_player_type_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_player_audiopresetid_ != NULL) {
    delete value_player_audiopresetid_;
  }
  value_player_audiopresetid_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_player_speed_ != NULL) {
    delete value_player_speed_;
  }
  value_player_speed_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_player_consigne_ != NULL) {
    delete value_player_consigne_;
  }
  value_player_consigne_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_player_mode_ != NULL) {
    delete value_player_mode_;
  }
  value_player_mode_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_player_extend_playlist_ != NULL) {
    delete value_player_extend_playlist_;
  }
  value_player_extend_playlist_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_player_limit_in_out_ != NULL) {
    delete value_player_limit_in_out_;
  }
  value_player_limit_in_out_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_player_loop_mode_ != NULL) {
    delete value_player_loop_mode_;
  }
  value_player_loop_mode_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_player_loop_count_ != NULL) {
    delete value_player_loop_count_;
  }
  value_player_loop_count_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_player_playlist_id_ != NULL) {
    delete value_player_playlist_id_;
  }
  value_player_playlist_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_player_playlist_element_id_ != NULL) {
    delete value_player_playlist_element_id_;
  }
  value_player_playlist_element_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_dve_mode_ != NULL) {
    delete value_dve_mode_;
  }
  value_dve_mode_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_dve_type_ != NULL) {
    delete value_dve_type_;
  }
  value_dve_type_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_dve_channel_ != NULL) {
    delete value_dve_channel_;
  }
  value_dve_channel_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_dve_num_ != NULL) {
    delete value_dve_num_;
  }
  value_dve_num_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_dve_den_ != NULL) {
    delete value_dve_den_;
  }
  value_dve_den_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_dve_cutthreshold_ != NULL) {
    delete value_dve_cutthreshold_;
  }
  value_dve_cutthreshold_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_dve_custom_transparency_ != NULL) {
    delete value_dve_custom_transparency_;
  }
  value_dve_custom_transparency_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_rtd_status_ != NULL) {
    delete value_rtd_status_;
  }
  value_rtd_status_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_rtd_type_ != NULL) {
    delete value_rtd_type_;
  }
  value_rtd_type_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_rtd_position_ != NULL) {
    delete value_rtd_position_;
  }
  value_rtd_position_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_gfx_status_ != NULL) {
    delete value_gfx_status_;
  }
  value_gfx_status_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_gfx_position_ != NULL) {
    delete value_gfx_position_;
  }
  value_gfx_position_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_gfx_fade_in_out_duration_ != NULL) {
    delete value_gfx_fade_in_out_duration_;
  }
  value_gfx_fade_in_out_duration_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_gfx_loop_in_out_ != NULL) {
    delete value_gfx_loop_in_out_;
  }
  value_gfx_loop_in_out_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_gfx_loop_count_ != NULL) {
    delete value_gfx_loop_count_;
  }
  value_gfx_loop_count_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_gfx_preload_status_ != NULL) {
    delete value_gfx_preload_status_;
  }
  value_gfx_preload_status_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_healthinfo_version_ != NULL) {
    delete value_healthinfo_version_;
  }
  value_healthinfo_version_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_healthinfo_mixer_status_ != NULL) {
    delete value_healthinfo_mixer_status_;
  }
  value_healthinfo_mixer_status_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_healthinfo_network_bandwidth_ != NULL) {
    delete value_healthinfo_network_bandwidth_;
  }
  value_healthinfo_network_bandwidth_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_healthinfo_gpu_temperature_ != NULL) {
    delete value_healthinfo_gpu_temperature_;
  }
  value_healthinfo_gpu_temperature_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_healthinfo_aja_status_ != NULL) {
    delete value_healthinfo_aja_status_;
  }
  value_healthinfo_aja_status_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_healthinfo_hdd_status_ != NULL) {
    delete value_healthinfo_hdd_status_;
  }
  value_healthinfo_hdd_status_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_healthinfo_asio_status_ != NULL) {
    delete value_healthinfo_asio_status_;
  }
  value_healthinfo_asio_status_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_healthinfo_external_timecode_ != NULL) {
    delete value_healthinfo_external_timecode_;
  }
  value_healthinfo_external_timecode_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_custominfo_ != NULL) {
    delete value_custominfo_;
  }
  value_custominfo_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_bmr_setting_ != NULL) {
    delete value_bmr_setting_;
  }
  value_bmr_setting_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_vumeter_live_mixer_pgm_ != NULL) {
    delete value_vumeter_live_mixer_pgm_;
  }
  value_vumeter_live_mixer_pgm_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_pip_status_ != NULL) {
    delete value_pip_status_;
  }
  value_pip_status_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_server_memory_ != NULL) {
    delete value_server_memory_;
  }
  value_server_memory_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_cache_replayplayer_highresvideo_ != NULL) {
    delete value_cache_replayplayer_highresvideo_;
  }
  value_cache_replayplayer_highresvideo_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_cache_replayplayer_externalaudio_ != NULL) {
    delete value_cache_replayplayer_externalaudio_;
  }
  value_cache_replayplayer_externalaudio_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_storage_capacity_ != NULL) {
    delete value_storage_capacity_;
  }
  value_storage_capacity_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_healthinfo_referencestatus_ != NULL) {
    delete value_healthinfo_referencestatus_;
  }
  value_healthinfo_referencestatus_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_healthinfo_serialnumber_ != NULL) {
    delete value_healthinfo_serialnumber_;
  }
  value_healthinfo_serialnumber_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_healthinfo_remainingtimepercam_ != NULL) {
    delete value_healthinfo_remainingtimepercam_;
  }
  value_healthinfo_remainingtimepercam_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_film_effect_status_ != NULL) {
    delete value_film_effect_status_;
  }
  value_film_effect_status_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_common_timereference_ != NULL) {
    delete value_common_timereference_;
  }
  value_common_timereference_ = NULL;
  _internal_metadata_.Clear();
}

bool BroadCastData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GoogleProtoBB.BroadCastData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GoogleProtoBB.Value_Recorder_Train_In_Out value_Recorder_Train_In_Out = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_recorder_train_in_out()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_Player_Status value_Player_Status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_player_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_Camera_Type value_Camera_Type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_camera_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_Recorder_ClosedCaption value_Recorder_ClosedCaption = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_recorder_closedcaption()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_Player_ClosedCaption value_Player_ClosedCaption = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_player_closedcaption()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_Player_Group value_Player_Group = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_player_group()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_Player_Camera value_Player_Camera = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_player_camera()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_Player_Type value_Player_Type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_player_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_Player_AudioPresetId value_Player_AudioPresetId = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_player_audiopresetid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_Player_Speed value_Player_Speed = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_player_speed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_Player_Consigne value_Player_Consigne = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_player_consigne()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_Player_Mode value_Player_Mode = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_player_mode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_Player_Extend_Playlist value_Player_Extend_Playlist = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_player_extend_playlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_Player_Limit_In_Out value_Player_Limit_In_Out = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_player_limit_in_out()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_Player_Loop_Mode value_Player_Loop_Mode = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_player_loop_mode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_Player_Loop_Count value_Player_Loop_Count = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_player_loop_count()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_Player_Playlist_ID value_Player_Playlist_ID = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_player_playlist_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_Player_Playlist_Element_ID value_Player_Playlist_Element_ID = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_player_playlist_element_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_DVE_Mode value_DVE_Mode = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_dve_mode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_DVE_Type value_DVE_Type = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_dve_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_DVE_Channel value_DVE_Channel = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_dve_channel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_DVE_Num value_DVE_Num = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_dve_num()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_DVE_Den value_DVE_Den = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_dve_den()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_DVE_CutThreshold value_DVE_CutThreshold = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_dve_cutthreshold()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_DVE_Custom_Transparency value_DVE_Custom_Transparency = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_dve_custom_transparency()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_RTD_Status value_RTD_Status = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_rtd_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_RTD_Type value_RTD_Type = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_rtd_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_RTD_Position value_RTD_Position = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_rtd_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_GFX_Status value_GFX_Status = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_gfx_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_GFX_Position value_GFX_Position = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_gfx_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_GFX_Fade_In_Out_Duration value_GFX_Fade_In_Out_Duration = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_gfx_fade_in_out_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_GFX_Loop_In_Out value_GFX_Loop_In_Out = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_gfx_loop_in_out()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_GFX_Loop_Count value_GFX_Loop_Count = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_gfx_loop_count()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_GFX_Preload_Status value_GFX_Preload_Status = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_gfx_preload_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_HealthInfo_Version value_HealthInfo_Version = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 282 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_healthinfo_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_HealthInfo_Mixer_Status value_HealthInfo_Mixer_Status = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 290 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_healthinfo_mixer_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_HealthInfo_Network_Bandwidth value_HealthInfo_Network_Bandwidth = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 298 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_healthinfo_network_bandwidth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_HealthInfo_GPU_Temperature value_HealthInfo_GPU_Temperature = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 306 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_healthinfo_gpu_temperature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_HealthInfo_AJA_Status value_HealthInfo_AJA_Status = 39;
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 314 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_healthinfo_aja_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_HealthInfo_HDD_Status value_HealthInfo_HDD_Status = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_healthinfo_hdd_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_HealthInfo_ASIO_Status value_HealthInfo_ASIO_Status = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 330 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_healthinfo_asio_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_HealthInfo_External_TimeCode value_HealthInfo_External_TimeCode = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 338 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_healthinfo_external_timecode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_CustomInfo value_CustomInfo = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 346 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_custominfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_BMR_Setting value_BMR_Setting = 44;
      case 44: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 354 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_bmr_setting()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM value_VuMeter_Live_Mixer_PGM = 45;
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 362 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_vumeter_live_mixer_pgm()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_PiP_Status value_PiP_Status = 46;
      case 46: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 370 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_pip_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_Server_Memory value_Server_Memory = 47;
      case 47: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 378 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_server_memory()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo value_Cache_ReplayPlayer_HighResVideo = 48;
      case 48: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_cache_replayplayer_highresvideo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio value_Cache_ReplayPlayer_ExternalAudio = 49;
      case 49: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 394 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_cache_replayplayer_externalaudio()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_Storage_Capacity value_Storage_Capacity = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_storage_capacity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_HealthInfo_ReferenceStatus value_HealthInfo_ReferenceStatus = 51;
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 410 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_healthinfo_referencestatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_HealthInfo_SerialNumber value_HealthInfo_SerialNumber = 52;
      case 52: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 418 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_healthinfo_serialnumber()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam value_HealthInfo_RemainingTimePerCam = 53;
      case 53: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 426 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_healthinfo_remainingtimepercam()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_Film_Effect_Status value_Film_Effect_Status = 54;
      case 54: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 434 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_film_effect_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GoogleProtoBB.Value_Common_TimeReference value_Common_TimeReference = 55;
      case 55: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 442 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_common_timereference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GoogleProtoBB.BroadCastData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GoogleProtoBB.BroadCastData)
  return false;
#undef DO_
}

void BroadCastData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GoogleProtoBB.BroadCastData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.Value_Recorder_Train_In_Out value_Recorder_Train_In_Out = 1;
  if (this->has_value_recorder_train_in_out()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_value_recorder_train_in_out(), output);
  }

  // .GoogleProtoBB.Value_Player_Status value_Player_Status = 2;
  if (this->has_value_player_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_value_player_status(), output);
  }

  // .GoogleProtoBB.Value_Camera_Type value_Camera_Type = 3;
  if (this->has_value_camera_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_value_camera_type(), output);
  }

  // .GoogleProtoBB.Value_Recorder_ClosedCaption value_Recorder_ClosedCaption = 4;
  if (this->has_value_recorder_closedcaption()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_value_recorder_closedcaption(), output);
  }

  // .GoogleProtoBB.Value_Player_ClosedCaption value_Player_ClosedCaption = 5;
  if (this->has_value_player_closedcaption()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_value_player_closedcaption(), output);
  }

  // .GoogleProtoBB.Value_Player_Group value_Player_Group = 6;
  if (this->has_value_player_group()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_value_player_group(), output);
  }

  // .GoogleProtoBB.Value_Player_Camera value_Player_Camera = 7;
  if (this->has_value_player_camera()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_value_player_camera(), output);
  }

  // .GoogleProtoBB.Value_Player_Type value_Player_Type = 8;
  if (this->has_value_player_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_value_player_type(), output);
  }

  // .GoogleProtoBB.Value_Player_AudioPresetId value_Player_AudioPresetId = 9;
  if (this->has_value_player_audiopresetid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_value_player_audiopresetid(), output);
  }

  // .GoogleProtoBB.Value_Player_Speed value_Player_Speed = 10;
  if (this->has_value_player_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_value_player_speed(), output);
  }

  // .GoogleProtoBB.Value_Player_Consigne value_Player_Consigne = 11;
  if (this->has_value_player_consigne()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_value_player_consigne(), output);
  }

  // .GoogleProtoBB.Value_Player_Mode value_Player_Mode = 12;
  if (this->has_value_player_mode()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_value_player_mode(), output);
  }

  // .GoogleProtoBB.Value_Player_Extend_Playlist value_Player_Extend_Playlist = 13;
  if (this->has_value_player_extend_playlist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_value_player_extend_playlist(), output);
  }

  // .GoogleProtoBB.Value_Player_Limit_In_Out value_Player_Limit_In_Out = 14;
  if (this->has_value_player_limit_in_out()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_value_player_limit_in_out(), output);
  }

  // .GoogleProtoBB.Value_Player_Loop_Mode value_Player_Loop_Mode = 15;
  if (this->has_value_player_loop_mode()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_value_player_loop_mode(), output);
  }

  // .GoogleProtoBB.Value_Player_Loop_Count value_Player_Loop_Count = 16;
  if (this->has_value_player_loop_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_value_player_loop_count(), output);
  }

  // .GoogleProtoBB.Value_Player_Playlist_ID value_Player_Playlist_ID = 17;
  if (this->has_value_player_playlist_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_value_player_playlist_id(), output);
  }

  // .GoogleProtoBB.Value_Player_Playlist_Element_ID value_Player_Playlist_Element_ID = 18;
  if (this->has_value_player_playlist_element_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_value_player_playlist_element_id(), output);
  }

  // .GoogleProtoBB.Value_DVE_Mode value_DVE_Mode = 19;
  if (this->has_value_dve_mode()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_value_dve_mode(), output);
  }

  // .GoogleProtoBB.Value_DVE_Type value_DVE_Type = 20;
  if (this->has_value_dve_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_value_dve_type(), output);
  }

  // .GoogleProtoBB.Value_DVE_Channel value_DVE_Channel = 21;
  if (this->has_value_dve_channel()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->_internal_value_dve_channel(), output);
  }

  // .GoogleProtoBB.Value_DVE_Num value_DVE_Num = 22;
  if (this->has_value_dve_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->_internal_value_dve_num(), output);
  }

  // .GoogleProtoBB.Value_DVE_Den value_DVE_Den = 23;
  if (this->has_value_dve_den()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->_internal_value_dve_den(), output);
  }

  // .GoogleProtoBB.Value_DVE_CutThreshold value_DVE_CutThreshold = 24;
  if (this->has_value_dve_cutthreshold()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->_internal_value_dve_cutthreshold(), output);
  }

  // .GoogleProtoBB.Value_DVE_Custom_Transparency value_DVE_Custom_Transparency = 25;
  if (this->has_value_dve_custom_transparency()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->_internal_value_dve_custom_transparency(), output);
  }

  // .GoogleProtoBB.Value_RTD_Status value_RTD_Status = 26;
  if (this->has_value_rtd_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->_internal_value_rtd_status(), output);
  }

  // .GoogleProtoBB.Value_RTD_Type value_RTD_Type = 27;
  if (this->has_value_rtd_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, this->_internal_value_rtd_type(), output);
  }

  // .GoogleProtoBB.Value_RTD_Position value_RTD_Position = 28;
  if (this->has_value_rtd_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, this->_internal_value_rtd_position(), output);
  }

  // .GoogleProtoBB.Value_GFX_Status value_GFX_Status = 29;
  if (this->has_value_gfx_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29, this->_internal_value_gfx_status(), output);
  }

  // .GoogleProtoBB.Value_GFX_Position value_GFX_Position = 30;
  if (this->has_value_gfx_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, this->_internal_value_gfx_position(), output);
  }

  // .GoogleProtoBB.Value_GFX_Fade_In_Out_Duration value_GFX_Fade_In_Out_Duration = 31;
  if (this->has_value_gfx_fade_in_out_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, this->_internal_value_gfx_fade_in_out_duration(), output);
  }

  // .GoogleProtoBB.Value_GFX_Loop_In_Out value_GFX_Loop_In_Out = 32;
  if (this->has_value_gfx_loop_in_out()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      32, this->_internal_value_gfx_loop_in_out(), output);
  }

  // .GoogleProtoBB.Value_GFX_Loop_Count value_GFX_Loop_Count = 33;
  if (this->has_value_gfx_loop_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33, this->_internal_value_gfx_loop_count(), output);
  }

  // .GoogleProtoBB.Value_GFX_Preload_Status value_GFX_Preload_Status = 34;
  if (this->has_value_gfx_preload_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      34, this->_internal_value_gfx_preload_status(), output);
  }

  // .GoogleProtoBB.Value_HealthInfo_Version value_HealthInfo_Version = 35;
  if (this->has_value_healthinfo_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      35, this->_internal_value_healthinfo_version(), output);
  }

  // .GoogleProtoBB.Value_HealthInfo_Mixer_Status value_HealthInfo_Mixer_Status = 36;
  if (this->has_value_healthinfo_mixer_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      36, this->_internal_value_healthinfo_mixer_status(), output);
  }

  // .GoogleProtoBB.Value_HealthInfo_Network_Bandwidth value_HealthInfo_Network_Bandwidth = 37;
  if (this->has_value_healthinfo_network_bandwidth()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      37, this->_internal_value_healthinfo_network_bandwidth(), output);
  }

  // .GoogleProtoBB.Value_HealthInfo_GPU_Temperature value_HealthInfo_GPU_Temperature = 38;
  if (this->has_value_healthinfo_gpu_temperature()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      38, this->_internal_value_healthinfo_gpu_temperature(), output);
  }

  // .GoogleProtoBB.Value_HealthInfo_AJA_Status value_HealthInfo_AJA_Status = 39;
  if (this->has_value_healthinfo_aja_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      39, this->_internal_value_healthinfo_aja_status(), output);
  }

  // .GoogleProtoBB.Value_HealthInfo_HDD_Status value_HealthInfo_HDD_Status = 40;
  if (this->has_value_healthinfo_hdd_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      40, this->_internal_value_healthinfo_hdd_status(), output);
  }

  // .GoogleProtoBB.Value_HealthInfo_ASIO_Status value_HealthInfo_ASIO_Status = 41;
  if (this->has_value_healthinfo_asio_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      41, this->_internal_value_healthinfo_asio_status(), output);
  }

  // .GoogleProtoBB.Value_HealthInfo_External_TimeCode value_HealthInfo_External_TimeCode = 42;
  if (this->has_value_healthinfo_external_timecode()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      42, this->_internal_value_healthinfo_external_timecode(), output);
  }

  // .GoogleProtoBB.Value_CustomInfo value_CustomInfo = 43;
  if (this->has_value_custominfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      43, this->_internal_value_custominfo(), output);
  }

  // .GoogleProtoBB.Value_BMR_Setting value_BMR_Setting = 44;
  if (this->has_value_bmr_setting()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      44, this->_internal_value_bmr_setting(), output);
  }

  // .GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM value_VuMeter_Live_Mixer_PGM = 45;
  if (this->has_value_vumeter_live_mixer_pgm()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      45, this->_internal_value_vumeter_live_mixer_pgm(), output);
  }

  // .GoogleProtoBB.Value_PiP_Status value_PiP_Status = 46;
  if (this->has_value_pip_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      46, this->_internal_value_pip_status(), output);
  }

  // .GoogleProtoBB.Value_Server_Memory value_Server_Memory = 47;
  if (this->has_value_server_memory()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      47, this->_internal_value_server_memory(), output);
  }

  // .GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo value_Cache_ReplayPlayer_HighResVideo = 48;
  if (this->has_value_cache_replayplayer_highresvideo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      48, this->_internal_value_cache_replayplayer_highresvideo(), output);
  }

  // .GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio value_Cache_ReplayPlayer_ExternalAudio = 49;
  if (this->has_value_cache_replayplayer_externalaudio()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      49, this->_internal_value_cache_replayplayer_externalaudio(), output);
  }

  // .GoogleProtoBB.Value_Storage_Capacity value_Storage_Capacity = 50;
  if (this->has_value_storage_capacity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      50, this->_internal_value_storage_capacity(), output);
  }

  // .GoogleProtoBB.Value_HealthInfo_ReferenceStatus value_HealthInfo_ReferenceStatus = 51;
  if (this->has_value_healthinfo_referencestatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      51, this->_internal_value_healthinfo_referencestatus(), output);
  }

  // .GoogleProtoBB.Value_HealthInfo_SerialNumber value_HealthInfo_SerialNumber = 52;
  if (this->has_value_healthinfo_serialnumber()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      52, this->_internal_value_healthinfo_serialnumber(), output);
  }

  // .GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam value_HealthInfo_RemainingTimePerCam = 53;
  if (this->has_value_healthinfo_remainingtimepercam()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      53, this->_internal_value_healthinfo_remainingtimepercam(), output);
  }

  // .GoogleProtoBB.Value_Film_Effect_Status value_Film_Effect_Status = 54;
  if (this->has_value_film_effect_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      54, this->_internal_value_film_effect_status(), output);
  }

  // .GoogleProtoBB.Value_Common_TimeReference value_Common_TimeReference = 55;
  if (this->has_value_common_timereference()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      55, this->_internal_value_common_timereference(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GoogleProtoBB.BroadCastData)
}

::google::protobuf::uint8* BroadCastData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GoogleProtoBB.BroadCastData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GoogleProtoBB.Value_Recorder_Train_In_Out value_Recorder_Train_In_Out = 1;
  if (this->has_value_recorder_train_in_out()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_value_recorder_train_in_out(), deterministic, target);
  }

  // .GoogleProtoBB.Value_Player_Status value_Player_Status = 2;
  if (this->has_value_player_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_value_player_status(), deterministic, target);
  }

  // .GoogleProtoBB.Value_Camera_Type value_Camera_Type = 3;
  if (this->has_value_camera_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_value_camera_type(), deterministic, target);
  }

  // .GoogleProtoBB.Value_Recorder_ClosedCaption value_Recorder_ClosedCaption = 4;
  if (this->has_value_recorder_closedcaption()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_value_recorder_closedcaption(), deterministic, target);
  }

  // .GoogleProtoBB.Value_Player_ClosedCaption value_Player_ClosedCaption = 5;
  if (this->has_value_player_closedcaption()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_value_player_closedcaption(), deterministic, target);
  }

  // .GoogleProtoBB.Value_Player_Group value_Player_Group = 6;
  if (this->has_value_player_group()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_value_player_group(), deterministic, target);
  }

  // .GoogleProtoBB.Value_Player_Camera value_Player_Camera = 7;
  if (this->has_value_player_camera()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_value_player_camera(), deterministic, target);
  }

  // .GoogleProtoBB.Value_Player_Type value_Player_Type = 8;
  if (this->has_value_player_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_value_player_type(), deterministic, target);
  }

  // .GoogleProtoBB.Value_Player_AudioPresetId value_Player_AudioPresetId = 9;
  if (this->has_value_player_audiopresetid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_value_player_audiopresetid(), deterministic, target);
  }

  // .GoogleProtoBB.Value_Player_Speed value_Player_Speed = 10;
  if (this->has_value_player_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_value_player_speed(), deterministic, target);
  }

  // .GoogleProtoBB.Value_Player_Consigne value_Player_Consigne = 11;
  if (this->has_value_player_consigne()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_value_player_consigne(), deterministic, target);
  }

  // .GoogleProtoBB.Value_Player_Mode value_Player_Mode = 12;
  if (this->has_value_player_mode()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_value_player_mode(), deterministic, target);
  }

  // .GoogleProtoBB.Value_Player_Extend_Playlist value_Player_Extend_Playlist = 13;
  if (this->has_value_player_extend_playlist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_value_player_extend_playlist(), deterministic, target);
  }

  // .GoogleProtoBB.Value_Player_Limit_In_Out value_Player_Limit_In_Out = 14;
  if (this->has_value_player_limit_in_out()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_value_player_limit_in_out(), deterministic, target);
  }

  // .GoogleProtoBB.Value_Player_Loop_Mode value_Player_Loop_Mode = 15;
  if (this->has_value_player_loop_mode()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_value_player_loop_mode(), deterministic, target);
  }

  // .GoogleProtoBB.Value_Player_Loop_Count value_Player_Loop_Count = 16;
  if (this->has_value_player_loop_count()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_value_player_loop_count(), deterministic, target);
  }

  // .GoogleProtoBB.Value_Player_Playlist_ID value_Player_Playlist_ID = 17;
  if (this->has_value_player_playlist_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_value_player_playlist_id(), deterministic, target);
  }

  // .GoogleProtoBB.Value_Player_Playlist_Element_ID value_Player_Playlist_Element_ID = 18;
  if (this->has_value_player_playlist_element_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_value_player_playlist_element_id(), deterministic, target);
  }

  // .GoogleProtoBB.Value_DVE_Mode value_DVE_Mode = 19;
  if (this->has_value_dve_mode()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_value_dve_mode(), deterministic, target);
  }

  // .GoogleProtoBB.Value_DVE_Type value_DVE_Type = 20;
  if (this->has_value_dve_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_value_dve_type(), deterministic, target);
  }

  // .GoogleProtoBB.Value_DVE_Channel value_DVE_Channel = 21;
  if (this->has_value_dve_channel()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->_internal_value_dve_channel(), deterministic, target);
  }

  // .GoogleProtoBB.Value_DVE_Num value_DVE_Num = 22;
  if (this->has_value_dve_num()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->_internal_value_dve_num(), deterministic, target);
  }

  // .GoogleProtoBB.Value_DVE_Den value_DVE_Den = 23;
  if (this->has_value_dve_den()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->_internal_value_dve_den(), deterministic, target);
  }

  // .GoogleProtoBB.Value_DVE_CutThreshold value_DVE_CutThreshold = 24;
  if (this->has_value_dve_cutthreshold()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->_internal_value_dve_cutthreshold(), deterministic, target);
  }

  // .GoogleProtoBB.Value_DVE_Custom_Transparency value_DVE_Custom_Transparency = 25;
  if (this->has_value_dve_custom_transparency()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->_internal_value_dve_custom_transparency(), deterministic, target);
  }

  // .GoogleProtoBB.Value_RTD_Status value_RTD_Status = 26;
  if (this->has_value_rtd_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, this->_internal_value_rtd_status(), deterministic, target);
  }

  // .GoogleProtoBB.Value_RTD_Type value_RTD_Type = 27;
  if (this->has_value_rtd_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        27, this->_internal_value_rtd_type(), deterministic, target);
  }

  // .GoogleProtoBB.Value_RTD_Position value_RTD_Position = 28;
  if (this->has_value_rtd_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        28, this->_internal_value_rtd_position(), deterministic, target);
  }

  // .GoogleProtoBB.Value_GFX_Status value_GFX_Status = 29;
  if (this->has_value_gfx_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        29, this->_internal_value_gfx_status(), deterministic, target);
  }

  // .GoogleProtoBB.Value_GFX_Position value_GFX_Position = 30;
  if (this->has_value_gfx_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, this->_internal_value_gfx_position(), deterministic, target);
  }

  // .GoogleProtoBB.Value_GFX_Fade_In_Out_Duration value_GFX_Fade_In_Out_Duration = 31;
  if (this->has_value_gfx_fade_in_out_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        31, this->_internal_value_gfx_fade_in_out_duration(), deterministic, target);
  }

  // .GoogleProtoBB.Value_GFX_Loop_In_Out value_GFX_Loop_In_Out = 32;
  if (this->has_value_gfx_loop_in_out()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        32, this->_internal_value_gfx_loop_in_out(), deterministic, target);
  }

  // .GoogleProtoBB.Value_GFX_Loop_Count value_GFX_Loop_Count = 33;
  if (this->has_value_gfx_loop_count()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        33, this->_internal_value_gfx_loop_count(), deterministic, target);
  }

  // .GoogleProtoBB.Value_GFX_Preload_Status value_GFX_Preload_Status = 34;
  if (this->has_value_gfx_preload_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        34, this->_internal_value_gfx_preload_status(), deterministic, target);
  }

  // .GoogleProtoBB.Value_HealthInfo_Version value_HealthInfo_Version = 35;
  if (this->has_value_healthinfo_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        35, this->_internal_value_healthinfo_version(), deterministic, target);
  }

  // .GoogleProtoBB.Value_HealthInfo_Mixer_Status value_HealthInfo_Mixer_Status = 36;
  if (this->has_value_healthinfo_mixer_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        36, this->_internal_value_healthinfo_mixer_status(), deterministic, target);
  }

  // .GoogleProtoBB.Value_HealthInfo_Network_Bandwidth value_HealthInfo_Network_Bandwidth = 37;
  if (this->has_value_healthinfo_network_bandwidth()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        37, this->_internal_value_healthinfo_network_bandwidth(), deterministic, target);
  }

  // .GoogleProtoBB.Value_HealthInfo_GPU_Temperature value_HealthInfo_GPU_Temperature = 38;
  if (this->has_value_healthinfo_gpu_temperature()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        38, this->_internal_value_healthinfo_gpu_temperature(), deterministic, target);
  }

  // .GoogleProtoBB.Value_HealthInfo_AJA_Status value_HealthInfo_AJA_Status = 39;
  if (this->has_value_healthinfo_aja_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        39, this->_internal_value_healthinfo_aja_status(), deterministic, target);
  }

  // .GoogleProtoBB.Value_HealthInfo_HDD_Status value_HealthInfo_HDD_Status = 40;
  if (this->has_value_healthinfo_hdd_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        40, this->_internal_value_healthinfo_hdd_status(), deterministic, target);
  }

  // .GoogleProtoBB.Value_HealthInfo_ASIO_Status value_HealthInfo_ASIO_Status = 41;
  if (this->has_value_healthinfo_asio_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        41, this->_internal_value_healthinfo_asio_status(), deterministic, target);
  }

  // .GoogleProtoBB.Value_HealthInfo_External_TimeCode value_HealthInfo_External_TimeCode = 42;
  if (this->has_value_healthinfo_external_timecode()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        42, this->_internal_value_healthinfo_external_timecode(), deterministic, target);
  }

  // .GoogleProtoBB.Value_CustomInfo value_CustomInfo = 43;
  if (this->has_value_custominfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        43, this->_internal_value_custominfo(), deterministic, target);
  }

  // .GoogleProtoBB.Value_BMR_Setting value_BMR_Setting = 44;
  if (this->has_value_bmr_setting()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        44, this->_internal_value_bmr_setting(), deterministic, target);
  }

  // .GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM value_VuMeter_Live_Mixer_PGM = 45;
  if (this->has_value_vumeter_live_mixer_pgm()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        45, this->_internal_value_vumeter_live_mixer_pgm(), deterministic, target);
  }

  // .GoogleProtoBB.Value_PiP_Status value_PiP_Status = 46;
  if (this->has_value_pip_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        46, this->_internal_value_pip_status(), deterministic, target);
  }

  // .GoogleProtoBB.Value_Server_Memory value_Server_Memory = 47;
  if (this->has_value_server_memory()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        47, this->_internal_value_server_memory(), deterministic, target);
  }

  // .GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo value_Cache_ReplayPlayer_HighResVideo = 48;
  if (this->has_value_cache_replayplayer_highresvideo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        48, this->_internal_value_cache_replayplayer_highresvideo(), deterministic, target);
  }

  // .GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio value_Cache_ReplayPlayer_ExternalAudio = 49;
  if (this->has_value_cache_replayplayer_externalaudio()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        49, this->_internal_value_cache_replayplayer_externalaudio(), deterministic, target);
  }

  // .GoogleProtoBB.Value_Storage_Capacity value_Storage_Capacity = 50;
  if (this->has_value_storage_capacity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        50, this->_internal_value_storage_capacity(), deterministic, target);
  }

  // .GoogleProtoBB.Value_HealthInfo_ReferenceStatus value_HealthInfo_ReferenceStatus = 51;
  if (this->has_value_healthinfo_referencestatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        51, this->_internal_value_healthinfo_referencestatus(), deterministic, target);
  }

  // .GoogleProtoBB.Value_HealthInfo_SerialNumber value_HealthInfo_SerialNumber = 52;
  if (this->has_value_healthinfo_serialnumber()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        52, this->_internal_value_healthinfo_serialnumber(), deterministic, target);
  }

  // .GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam value_HealthInfo_RemainingTimePerCam = 53;
  if (this->has_value_healthinfo_remainingtimepercam()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        53, this->_internal_value_healthinfo_remainingtimepercam(), deterministic, target);
  }

  // .GoogleProtoBB.Value_Film_Effect_Status value_Film_Effect_Status = 54;
  if (this->has_value_film_effect_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        54, this->_internal_value_film_effect_status(), deterministic, target);
  }

  // .GoogleProtoBB.Value_Common_TimeReference value_Common_TimeReference = 55;
  if (this->has_value_common_timereference()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        55, this->_internal_value_common_timereference(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GoogleProtoBB.BroadCastData)
  return target;
}

size_t BroadCastData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GoogleProtoBB.BroadCastData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GoogleProtoBB.Value_Recorder_Train_In_Out value_Recorder_Train_In_Out = 1;
  if (this->has_value_recorder_train_in_out()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_recorder_train_in_out_);
  }

  // .GoogleProtoBB.Value_Player_Status value_Player_Status = 2;
  if (this->has_value_player_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_player_status_);
  }

  // .GoogleProtoBB.Value_Camera_Type value_Camera_Type = 3;
  if (this->has_value_camera_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_camera_type_);
  }

  // .GoogleProtoBB.Value_Recorder_ClosedCaption value_Recorder_ClosedCaption = 4;
  if (this->has_value_recorder_closedcaption()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_recorder_closedcaption_);
  }

  // .GoogleProtoBB.Value_Player_ClosedCaption value_Player_ClosedCaption = 5;
  if (this->has_value_player_closedcaption()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_player_closedcaption_);
  }

  // .GoogleProtoBB.Value_Player_Group value_Player_Group = 6;
  if (this->has_value_player_group()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_player_group_);
  }

  // .GoogleProtoBB.Value_Player_Camera value_Player_Camera = 7;
  if (this->has_value_player_camera()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_player_camera_);
  }

  // .GoogleProtoBB.Value_Player_Type value_Player_Type = 8;
  if (this->has_value_player_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_player_type_);
  }

  // .GoogleProtoBB.Value_Player_AudioPresetId value_Player_AudioPresetId = 9;
  if (this->has_value_player_audiopresetid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_player_audiopresetid_);
  }

  // .GoogleProtoBB.Value_Player_Speed value_Player_Speed = 10;
  if (this->has_value_player_speed()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_player_speed_);
  }

  // .GoogleProtoBB.Value_Player_Consigne value_Player_Consigne = 11;
  if (this->has_value_player_consigne()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_player_consigne_);
  }

  // .GoogleProtoBB.Value_Player_Mode value_Player_Mode = 12;
  if (this->has_value_player_mode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_player_mode_);
  }

  // .GoogleProtoBB.Value_Player_Extend_Playlist value_Player_Extend_Playlist = 13;
  if (this->has_value_player_extend_playlist()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_player_extend_playlist_);
  }

  // .GoogleProtoBB.Value_Player_Limit_In_Out value_Player_Limit_In_Out = 14;
  if (this->has_value_player_limit_in_out()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_player_limit_in_out_);
  }

  // .GoogleProtoBB.Value_Player_Loop_Mode value_Player_Loop_Mode = 15;
  if (this->has_value_player_loop_mode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_player_loop_mode_);
  }

  // .GoogleProtoBB.Value_Player_Loop_Count value_Player_Loop_Count = 16;
  if (this->has_value_player_loop_count()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_player_loop_count_);
  }

  // .GoogleProtoBB.Value_Player_Playlist_ID value_Player_Playlist_ID = 17;
  if (this->has_value_player_playlist_id()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_player_playlist_id_);
  }

  // .GoogleProtoBB.Value_Player_Playlist_Element_ID value_Player_Playlist_Element_ID = 18;
  if (this->has_value_player_playlist_element_id()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_player_playlist_element_id_);
  }

  // .GoogleProtoBB.Value_DVE_Mode value_DVE_Mode = 19;
  if (this->has_value_dve_mode()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_dve_mode_);
  }

  // .GoogleProtoBB.Value_DVE_Type value_DVE_Type = 20;
  if (this->has_value_dve_type()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_dve_type_);
  }

  // .GoogleProtoBB.Value_DVE_Channel value_DVE_Channel = 21;
  if (this->has_value_dve_channel()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_dve_channel_);
  }

  // .GoogleProtoBB.Value_DVE_Num value_DVE_Num = 22;
  if (this->has_value_dve_num()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_dve_num_);
  }

  // .GoogleProtoBB.Value_DVE_Den value_DVE_Den = 23;
  if (this->has_value_dve_den()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_dve_den_);
  }

  // .GoogleProtoBB.Value_DVE_CutThreshold value_DVE_CutThreshold = 24;
  if (this->has_value_dve_cutthreshold()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_dve_cutthreshold_);
  }

  // .GoogleProtoBB.Value_DVE_Custom_Transparency value_DVE_Custom_Transparency = 25;
  if (this->has_value_dve_custom_transparency()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_dve_custom_transparency_);
  }

  // .GoogleProtoBB.Value_RTD_Status value_RTD_Status = 26;
  if (this->has_value_rtd_status()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_rtd_status_);
  }

  // .GoogleProtoBB.Value_RTD_Type value_RTD_Type = 27;
  if (this->has_value_rtd_type()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_rtd_type_);
  }

  // .GoogleProtoBB.Value_RTD_Position value_RTD_Position = 28;
  if (this->has_value_rtd_position()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_rtd_position_);
  }

  // .GoogleProtoBB.Value_GFX_Status value_GFX_Status = 29;
  if (this->has_value_gfx_status()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_gfx_status_);
  }

  // .GoogleProtoBB.Value_GFX_Position value_GFX_Position = 30;
  if (this->has_value_gfx_position()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_gfx_position_);
  }

  // .GoogleProtoBB.Value_GFX_Fade_In_Out_Duration value_GFX_Fade_In_Out_Duration = 31;
  if (this->has_value_gfx_fade_in_out_duration()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_gfx_fade_in_out_duration_);
  }

  // .GoogleProtoBB.Value_GFX_Loop_In_Out value_GFX_Loop_In_Out = 32;
  if (this->has_value_gfx_loop_in_out()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_gfx_loop_in_out_);
  }

  // .GoogleProtoBB.Value_GFX_Loop_Count value_GFX_Loop_Count = 33;
  if (this->has_value_gfx_loop_count()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_gfx_loop_count_);
  }

  // .GoogleProtoBB.Value_GFX_Preload_Status value_GFX_Preload_Status = 34;
  if (this->has_value_gfx_preload_status()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_gfx_preload_status_);
  }

  // .GoogleProtoBB.Value_HealthInfo_Version value_HealthInfo_Version = 35;
  if (this->has_value_healthinfo_version()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_healthinfo_version_);
  }

  // .GoogleProtoBB.Value_HealthInfo_Mixer_Status value_HealthInfo_Mixer_Status = 36;
  if (this->has_value_healthinfo_mixer_status()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_healthinfo_mixer_status_);
  }

  // .GoogleProtoBB.Value_HealthInfo_Network_Bandwidth value_HealthInfo_Network_Bandwidth = 37;
  if (this->has_value_healthinfo_network_bandwidth()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_healthinfo_network_bandwidth_);
  }

  // .GoogleProtoBB.Value_HealthInfo_GPU_Temperature value_HealthInfo_GPU_Temperature = 38;
  if (this->has_value_healthinfo_gpu_temperature()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_healthinfo_gpu_temperature_);
  }

  // .GoogleProtoBB.Value_HealthInfo_AJA_Status value_HealthInfo_AJA_Status = 39;
  if (this->has_value_healthinfo_aja_status()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_healthinfo_aja_status_);
  }

  // .GoogleProtoBB.Value_HealthInfo_HDD_Status value_HealthInfo_HDD_Status = 40;
  if (this->has_value_healthinfo_hdd_status()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_healthinfo_hdd_status_);
  }

  // .GoogleProtoBB.Value_HealthInfo_ASIO_Status value_HealthInfo_ASIO_Status = 41;
  if (this->has_value_healthinfo_asio_status()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_healthinfo_asio_status_);
  }

  // .GoogleProtoBB.Value_HealthInfo_External_TimeCode value_HealthInfo_External_TimeCode = 42;
  if (this->has_value_healthinfo_external_timecode()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_healthinfo_external_timecode_);
  }

  // .GoogleProtoBB.Value_CustomInfo value_CustomInfo = 43;
  if (this->has_value_custominfo()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_custominfo_);
  }

  // .GoogleProtoBB.Value_BMR_Setting value_BMR_Setting = 44;
  if (this->has_value_bmr_setting()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_bmr_setting_);
  }

  // .GoogleProtoBB.Value_VuMeter_Live_Mixer_PGM value_VuMeter_Live_Mixer_PGM = 45;
  if (this->has_value_vumeter_live_mixer_pgm()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_vumeter_live_mixer_pgm_);
  }

  // .GoogleProtoBB.Value_PiP_Status value_PiP_Status = 46;
  if (this->has_value_pip_status()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_pip_status_);
  }

  // .GoogleProtoBB.Value_Server_Memory value_Server_Memory = 47;
  if (this->has_value_server_memory()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_server_memory_);
  }

  // .GoogleProtoBB.Value_Cache_ReplayPlayer_HighResVideo value_Cache_ReplayPlayer_HighResVideo = 48;
  if (this->has_value_cache_replayplayer_highresvideo()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_cache_replayplayer_highresvideo_);
  }

  // .GoogleProtoBB.Value_Cache_ReplayPlayer_ExternalAudio value_Cache_ReplayPlayer_ExternalAudio = 49;
  if (this->has_value_cache_replayplayer_externalaudio()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_cache_replayplayer_externalaudio_);
  }

  // .GoogleProtoBB.Value_Storage_Capacity value_Storage_Capacity = 50;
  if (this->has_value_storage_capacity()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_storage_capacity_);
  }

  // .GoogleProtoBB.Value_HealthInfo_ReferenceStatus value_HealthInfo_ReferenceStatus = 51;
  if (this->has_value_healthinfo_referencestatus()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_healthinfo_referencestatus_);
  }

  // .GoogleProtoBB.Value_HealthInfo_SerialNumber value_HealthInfo_SerialNumber = 52;
  if (this->has_value_healthinfo_serialnumber()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_healthinfo_serialnumber_);
  }

  // .GoogleProtoBB.Value_HealthInfo_RemainingTimePerCam value_HealthInfo_RemainingTimePerCam = 53;
  if (this->has_value_healthinfo_remainingtimepercam()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_healthinfo_remainingtimepercam_);
  }

  // .GoogleProtoBB.Value_Film_Effect_Status value_Film_Effect_Status = 54;
  if (this->has_value_film_effect_status()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_film_effect_status_);
  }

  // .GoogleProtoBB.Value_Common_TimeReference value_Common_TimeReference = 55;
  if (this->has_value_common_timereference()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_common_timereference_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BroadCastData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GoogleProtoBB.BroadCastData)
  GOOGLE_DCHECK_NE(&from, this);
  const BroadCastData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BroadCastData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GoogleProtoBB.BroadCastData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GoogleProtoBB.BroadCastData)
    MergeFrom(*source);
  }
}

void BroadCastData::MergeFrom(const BroadCastData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GoogleProtoBB.BroadCastData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value_recorder_train_in_out()) {
    mutable_value_recorder_train_in_out()->::GoogleProtoBB::Value_Recorder_Train_In_Out::MergeFrom(from.value_recorder_train_in_out());
  }
  if (from.has_value_player_status()) {
    mutable_value_player_status()->::GoogleProtoBB::Value_Player_Status::MergeFrom(from.value_player_status());
  }
  if (from.has_value_camera_type()) {
    mutable_value_camera_type()->::GoogleProtoBB::Value_Camera_Type::MergeFrom(from.value_camera_type());
  }
  if (from.has_value_recorder_closedcaption()) {
    mutable_value_recorder_closedcaption()->::GoogleProtoBB::Value_Recorder_ClosedCaption::MergeFrom(from.value_recorder_closedcaption());
  }
  if (from.has_value_player_closedcaption()) {
    mutable_value_player_closedcaption()->::GoogleProtoBB::Value_Player_ClosedCaption::MergeFrom(from.value_player_closedcaption());
  }
  if (from.has_value_player_group()) {
    mutable_value_player_group()->::GoogleProtoBB::Value_Player_Group::MergeFrom(from.value_player_group());
  }
  if (from.has_value_player_camera()) {
    mutable_value_player_camera()->::GoogleProtoBB::Value_Player_Camera::MergeFrom(from.value_player_camera());
  }
  if (from.has_value_player_type()) {
    mutable_value_player_type()->::GoogleProtoBB::Value_Player_Type::MergeFrom(from.value_player_type());
  }
  if (from.has_value_player_audiopresetid()) {
    mutable_value_player_audiopresetid()->::GoogleProtoBB::Value_Player_AudioPresetId::MergeFrom(from.value_player_audiopresetid());
  }
  if (from.has_value_player_speed()) {
    mutable_value_player_speed()->::GoogleProtoBB::Value_Player_Speed::MergeFrom(from.value_player_speed());
  }
  if (from.has_value_player_consigne()) {
    mutable_value_player_consigne()->::GoogleProtoBB::Value_Player_Consigne::MergeFrom(from.value_player_consigne());
  }
  if (from.has_value_player_mode()) {
    mutable_value_player_mode()->::GoogleProtoBB::Value_Player_Mode::MergeFrom(from.value_player_mode());
  }
  if (from.has_value_player_extend_playlist()) {
    mutable_value_player_extend_playlist()->::GoogleProtoBB::Value_Player_Extend_Playlist::MergeFrom(from.value_player_extend_playlist());
  }
  if (from.has_value_player_limit_in_out()) {
    mutable_value_player_limit_in_out()->::GoogleProtoBB::Value_Player_Limit_In_Out::MergeFrom(from.value_player_limit_in_out());
  }
  if (from.has_value_player_loop_mode()) {
    mutable_value_player_loop_mode()->::GoogleProtoBB::Value_Player_Loop_Mode::MergeFrom(from.value_player_loop_mode());
  }
  if (from.has_value_player_loop_count()) {
    mutable_value_player_loop_count()->::GoogleProtoBB::Value_Player_Loop_Count::MergeFrom(from.value_player_loop_count());
  }
  if (from.has_value_player_playlist_id()) {
    mutable_value_player_playlist_id()->::GoogleProtoBB::Value_Player_Playlist_ID::MergeFrom(from.value_player_playlist_id());
  }
  if (from.has_value_player_playlist_element_id()) {
    mutable_value_player_playlist_element_id()->::GoogleProtoBB::Value_Player_Playlist_Element_ID::MergeFrom(from.value_player_playlist_element_id());
  }
  if (from.has_value_dve_mode()) {
    mutable_value_dve_mode()->::GoogleProtoBB::Value_DVE_Mode::MergeFrom(from.value_dve_mode());
  }
  if (from.has_value_dve_type()) {
    mutable_value_dve_type()->::GoogleProtoBB::Value_DVE_Type::MergeFrom(from.value_dve_type());
  }
  if (from.has_value_dve_channel()) {
    mutable_value_dve_channel()->::GoogleProtoBB::Value_DVE_Channel::MergeFrom(from.value_dve_channel());
  }
  if (from.has_value_dve_num()) {
    mutable_value_dve_num()->::GoogleProtoBB::Value_DVE_Num::MergeFrom(from.value_dve_num());
  }
  if (from.has_value_dve_den()) {
    mutable_value_dve_den()->::GoogleProtoBB::Value_DVE_Den::MergeFrom(from.value_dve_den());
  }
  if (from.has_value_dve_cutthreshold()) {
    mutable_value_dve_cutthreshold()->::GoogleProtoBB::Value_DVE_CutThreshold::MergeFrom(from.value_dve_cutthreshold());
  }
  if (from.has_value_dve_custom_transparency()) {
    mutable_value_dve_custom_transparency()->::GoogleProtoBB::Value_DVE_Custom_Transparency::MergeFrom(from.value_dve_custom_transparency());
  }
  if (from.has_value_rtd_status()) {
    mutable_value_rtd_status()->::GoogleProtoBB::Value_RTD_Status::MergeFrom(from.value_rtd_status());
  }
  if (from.has_value_rtd_type()) {
    mutable_value_rtd_type()->::GoogleProtoBB::Value_RTD_Type::MergeFrom(from.value_rtd_type());
  }
  if (from.has_value_rtd_position()) {
    mutable_value_rtd_position()->::GoogleProtoBB::Value_RTD_Position::MergeFrom(from.value_rtd_position());
  }
  if (from.has_value_gfx_status()) {
    mutable_value_gfx_status()->::GoogleProtoBB::Value_GFX_Status::MergeFrom(from.value_gfx_status());
  }
  if (from.has_value_gfx_position()) {
    mutable_value_gfx_position()->::GoogleProtoBB::Value_GFX_Position::MergeFrom(from.value_gfx_position());
  }
  if (from.has_value_gfx_fade_in_out_duration()) {
    mutable_value_gfx_fade_in_out_duration()->::GoogleProtoBB::Value_GFX_Fade_In_Out_Duration::MergeFrom(from.value_gfx_fade_in_out_duration());
  }
  if (from.has_value_gfx_loop_in_out()) {
    mutable_value_gfx_loop_in_out()->::GoogleProtoBB::Value_GFX_Loop_In_Out::MergeFrom(from.value_gfx_loop_in_out());
  }
  if (from.has_value_gfx_loop_count()) {
    mutable_value_gfx_loop_count()->::GoogleProtoBB::Value_GFX_Loop_Count::MergeFrom(from.value_gfx_loop_count());
  }
  if (from.has_value_gfx_preload_status()) {
    mutable_value_gfx_preload_status()->::GoogleProtoBB::Value_GFX_Preload_Status::MergeFrom(from.value_gfx_preload_status());
  }
  if (from.has_value_healthinfo_version()) {
    mutable_value_healthinfo_version()->::GoogleProtoBB::Value_HealthInfo_Version::MergeFrom(from.value_healthinfo_version());
  }
  if (from.has_value_healthinfo_mixer_status()) {
    mutable_value_healthinfo_mixer_status()->::GoogleProtoBB::Value_HealthInfo_Mixer_Status::MergeFrom(from.value_healthinfo_mixer_status());
  }
  if (from.has_value_healthinfo_network_bandwidth()) {
    mutable_value_healthinfo_network_bandwidth()->::GoogleProtoBB::Value_HealthInfo_Network_Bandwidth::MergeFrom(from.value_healthinfo_network_bandwidth());
  }
  if (from.has_value_healthinfo_gpu_temperature()) {
    mutable_value_healthinfo_gpu_temperature()->::GoogleProtoBB::Value_HealthInfo_GPU_Temperature::MergeFrom(from.value_healthinfo_gpu_temperature());
  }
  if (from.has_value_healthinfo_aja_status()) {
    mutable_value_healthinfo_aja_status()->::GoogleProtoBB::Value_HealthInfo_AJA_Status::MergeFrom(from.value_healthinfo_aja_status());
  }
  if (from.has_value_healthinfo_hdd_status()) {
    mutable_value_healthinfo_hdd_status()->::GoogleProtoBB::Value_HealthInfo_HDD_Status::MergeFrom(from.value_healthinfo_hdd_status());
  }
  if (from.has_value_healthinfo_asio_status()) {
    mutable_value_healthinfo_asio_status()->::GoogleProtoBB::Value_HealthInfo_ASIO_Status::MergeFrom(from.value_healthinfo_asio_status());
  }
  if (from.has_value_healthinfo_external_timecode()) {
    mutable_value_healthinfo_external_timecode()->::GoogleProtoBB::Value_HealthInfo_External_TimeCode::MergeFrom(from.value_healthinfo_external_timecode());
  }
  if (from.has_value_custominfo()) {
    mutable_value_custominfo()->::GoogleProtoBB::Value_CustomInfo::MergeFrom(from.value_custominfo());
  }
  if (from.has_value_bmr_setting()) {
    mutable_value_bmr_setting()->::GoogleProtoBB::Value_BMR_Setting::MergeFrom(from.value_bmr_setting());
  }
  if (from.has_value_vumeter_live_mixer_pgm()) {
    mutable_value_vumeter_live_mixer_pgm()->::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM::MergeFrom(from.value_vumeter_live_mixer_pgm());
  }
  if (from.has_value_pip_status()) {
    mutable_value_pip_status()->::GoogleProtoBB::Value_PiP_Status::MergeFrom(from.value_pip_status());
  }
  if (from.has_value_server_memory()) {
    mutable_value_server_memory()->::GoogleProtoBB::Value_Server_Memory::MergeFrom(from.value_server_memory());
  }
  if (from.has_value_cache_replayplayer_highresvideo()) {
    mutable_value_cache_replayplayer_highresvideo()->::GoogleProtoBB::Value_Cache_ReplayPlayer_HighResVideo::MergeFrom(from.value_cache_replayplayer_highresvideo());
  }
  if (from.has_value_cache_replayplayer_externalaudio()) {
    mutable_value_cache_replayplayer_externalaudio()->::GoogleProtoBB::Value_Cache_ReplayPlayer_ExternalAudio::MergeFrom(from.value_cache_replayplayer_externalaudio());
  }
  if (from.has_value_storage_capacity()) {
    mutable_value_storage_capacity()->::GoogleProtoBB::Value_Storage_Capacity::MergeFrom(from.value_storage_capacity());
  }
  if (from.has_value_healthinfo_referencestatus()) {
    mutable_value_healthinfo_referencestatus()->::GoogleProtoBB::Value_HealthInfo_ReferenceStatus::MergeFrom(from.value_healthinfo_referencestatus());
  }
  if (from.has_value_healthinfo_serialnumber()) {
    mutable_value_healthinfo_serialnumber()->::GoogleProtoBB::Value_HealthInfo_SerialNumber::MergeFrom(from.value_healthinfo_serialnumber());
  }
  if (from.has_value_healthinfo_remainingtimepercam()) {
    mutable_value_healthinfo_remainingtimepercam()->::GoogleProtoBB::Value_HealthInfo_RemainingTimePerCam::MergeFrom(from.value_healthinfo_remainingtimepercam());
  }
  if (from.has_value_film_effect_status()) {
    mutable_value_film_effect_status()->::GoogleProtoBB::Value_Film_Effect_Status::MergeFrom(from.value_film_effect_status());
  }
  if (from.has_value_common_timereference()) {
    mutable_value_common_timereference()->::GoogleProtoBB::Value_Common_TimeReference::MergeFrom(from.value_common_timereference());
  }
}

void BroadCastData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GoogleProtoBB.BroadCastData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BroadCastData::CopyFrom(const BroadCastData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GoogleProtoBB.BroadCastData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BroadCastData::IsInitialized() const {
  return true;
}

void BroadCastData::Swap(BroadCastData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BroadCastData::InternalSwap(BroadCastData* other) {
  using std::swap;
  swap(value_recorder_train_in_out_, other->value_recorder_train_in_out_);
  swap(value_player_status_, other->value_player_status_);
  swap(value_camera_type_, other->value_camera_type_);
  swap(value_recorder_closedcaption_, other->value_recorder_closedcaption_);
  swap(value_player_closedcaption_, other->value_player_closedcaption_);
  swap(value_player_group_, other->value_player_group_);
  swap(value_player_camera_, other->value_player_camera_);
  swap(value_player_type_, other->value_player_type_);
  swap(value_player_audiopresetid_, other->value_player_audiopresetid_);
  swap(value_player_speed_, other->value_player_speed_);
  swap(value_player_consigne_, other->value_player_consigne_);
  swap(value_player_mode_, other->value_player_mode_);
  swap(value_player_extend_playlist_, other->value_player_extend_playlist_);
  swap(value_player_limit_in_out_, other->value_player_limit_in_out_);
  swap(value_player_loop_mode_, other->value_player_loop_mode_);
  swap(value_player_loop_count_, other->value_player_loop_count_);
  swap(value_player_playlist_id_, other->value_player_playlist_id_);
  swap(value_player_playlist_element_id_, other->value_player_playlist_element_id_);
  swap(value_dve_mode_, other->value_dve_mode_);
  swap(value_dve_type_, other->value_dve_type_);
  swap(value_dve_channel_, other->value_dve_channel_);
  swap(value_dve_num_, other->value_dve_num_);
  swap(value_dve_den_, other->value_dve_den_);
  swap(value_dve_cutthreshold_, other->value_dve_cutthreshold_);
  swap(value_dve_custom_transparency_, other->value_dve_custom_transparency_);
  swap(value_rtd_status_, other->value_rtd_status_);
  swap(value_rtd_type_, other->value_rtd_type_);
  swap(value_rtd_position_, other->value_rtd_position_);
  swap(value_gfx_status_, other->value_gfx_status_);
  swap(value_gfx_position_, other->value_gfx_position_);
  swap(value_gfx_fade_in_out_duration_, other->value_gfx_fade_in_out_duration_);
  swap(value_gfx_loop_in_out_, other->value_gfx_loop_in_out_);
  swap(value_gfx_loop_count_, other->value_gfx_loop_count_);
  swap(value_gfx_preload_status_, other->value_gfx_preload_status_);
  swap(value_healthinfo_version_, other->value_healthinfo_version_);
  swap(value_healthinfo_mixer_status_, other->value_healthinfo_mixer_status_);
  swap(value_healthinfo_network_bandwidth_, other->value_healthinfo_network_bandwidth_);
  swap(value_healthinfo_gpu_temperature_, other->value_healthinfo_gpu_temperature_);
  swap(value_healthinfo_aja_status_, other->value_healthinfo_aja_status_);
  swap(value_healthinfo_hdd_status_, other->value_healthinfo_hdd_status_);
  swap(value_healthinfo_asio_status_, other->value_healthinfo_asio_status_);
  swap(value_healthinfo_external_timecode_, other->value_healthinfo_external_timecode_);
  swap(value_custominfo_, other->value_custominfo_);
  swap(value_bmr_setting_, other->value_bmr_setting_);
  swap(value_vumeter_live_mixer_pgm_, other->value_vumeter_live_mixer_pgm_);
  swap(value_pip_status_, other->value_pip_status_);
  swap(value_server_memory_, other->value_server_memory_);
  swap(value_cache_replayplayer_highresvideo_, other->value_cache_replayplayer_highresvideo_);
  swap(value_cache_replayplayer_externalaudio_, other->value_cache_replayplayer_externalaudio_);
  swap(value_storage_capacity_, other->value_storage_capacity_);
  swap(value_healthinfo_referencestatus_, other->value_healthinfo_referencestatus_);
  swap(value_healthinfo_serialnumber_, other->value_healthinfo_serialnumber_);
  swap(value_healthinfo_remainingtimepercam_, other->value_healthinfo_remainingtimepercam_);
  swap(value_film_effect_status_, other->value_film_effect_status_);
  swap(value_common_timereference_, other->value_common_timereference_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BroadCastData::GetMetadata() const {
  protobuf_broadcast_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_broadcast_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace GoogleProtoBB
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Recorder_Train_In_Out* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Recorder_Train_In_Out >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Recorder_Train_In_Out >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Player_Status_StatusInfo* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Player_Status_StatusInfo >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Player_Status_StatusInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Player_Status* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Player_Status >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Player_Status >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Camera_Type_ItemInfo* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Camera_Type_ItemInfo >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Camera_Type_ItemInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Camera_Type* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Camera_Type >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Camera_Type >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Recorder_ClosedCaption_ItemInfo* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Recorder_ClosedCaption_ItemInfo >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Recorder_ClosedCaption_ItemInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Recorder_ClosedCaption* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Recorder_ClosedCaption >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Recorder_ClosedCaption >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Player_ClosedCaption_ItemInfo* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Player_ClosedCaption_ItemInfo >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Player_ClosedCaption_ItemInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Player_ClosedCaption* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Player_ClosedCaption >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Player_ClosedCaption >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Player_Group_GroupInfo* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Player_Group_GroupInfo >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Player_Group_GroupInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Player_Group* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Player_Group >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Player_Group >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Player_Camera_CameraInfo* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Player_Camera_CameraInfo >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Player_Camera_CameraInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Player_Camera* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Player_Camera >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Player_Camera >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Player_Type_TypeInfo* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Player_Type_TypeInfo >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Player_Type_TypeInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Player_Type* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Player_Type >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Player_Type >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Player_AudioPresetId_TypeInfo* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Player_AudioPresetId_TypeInfo >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Player_AudioPresetId_TypeInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Player_AudioPresetId* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Player_AudioPresetId >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Player_AudioPresetId >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Player_Speed_SpeedInfo* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Player_Speed_SpeedInfo >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Player_Speed_SpeedInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Player_Speed* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Player_Speed >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Player_Speed >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Player_Consigne_ConsigneInfo* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Player_Consigne_ConsigneInfo >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Player_Consigne_ConsigneInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Player_Consigne* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Player_Consigne >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Player_Consigne >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Player_Mode_ModeInfo* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Player_Mode_ModeInfo >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Player_Mode_ModeInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Player_Mode* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Player_Mode >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Player_Mode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Player_Extend_Playlist_ExtendPlaylistInfo* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Player_Extend_Playlist_ExtendPlaylistInfo >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Player_Extend_Playlist_ExtendPlaylistInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Player_Extend_Playlist* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Player_Extend_Playlist >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Player_Extend_Playlist >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Player_Limit_In_Out_LimitInfo* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Player_Limit_In_Out_LimitInfo >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Player_Limit_In_Out_LimitInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Player_Limit_In_Out* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Player_Limit_In_Out >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Player_Limit_In_Out >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Player_Loop_Mode_LoopModeInfo* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Player_Loop_Mode_LoopModeInfo >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Player_Loop_Mode_LoopModeInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Player_Loop_Mode* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Player_Loop_Mode >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Player_Loop_Mode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Player_Loop_Count_LoopCountInfo* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Player_Loop_Count_LoopCountInfo >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Player_Loop_Count_LoopCountInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Player_Loop_Count* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Player_Loop_Count >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Player_Loop_Count >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Player_Playlist_ID_PlaylistIDInfo* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Player_Playlist_ID_PlaylistIDInfo >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Player_Playlist_ID_PlaylistIDInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Player_Playlist_ID* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Player_Playlist_ID >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Player_Playlist_ID >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Player_Playlist_Element_ID_ElementIDInfo* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Player_Playlist_Element_ID_ElementIDInfo >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Player_Playlist_Element_ID_ElementIDInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Player_Playlist_Element_ID* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Player_Playlist_Element_ID >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Player_Playlist_Element_ID >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_DVE_Mode_DVEModeInfo* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_DVE_Mode_DVEModeInfo >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_DVE_Mode_DVEModeInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_DVE_Mode* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_DVE_Mode >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_DVE_Mode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_DVE_Type_DVETypeInfo* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_DVE_Type_DVETypeInfo >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_DVE_Type_DVETypeInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_DVE_Type* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_DVE_Type >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_DVE_Type >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_DVE_Channel* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_DVE_Channel >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_DVE_Channel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_DVE_Num_DVENumInfo* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_DVE_Num_DVENumInfo >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_DVE_Num_DVENumInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_DVE_Num* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_DVE_Num >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_DVE_Num >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_DVE_Den_DVEDenInfo* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_DVE_Den_DVEDenInfo >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_DVE_Den_DVEDenInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_DVE_Den* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_DVE_Den >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_DVE_Den >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_DVE_CutThreshold_DVEThresholdInfo* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_DVE_CutThreshold_DVEThresholdInfo >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_DVE_CutThreshold_DVEThresholdInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_DVE_CutThreshold* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_DVE_CutThreshold >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_DVE_CutThreshold >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_DVE_Custom_Transparency_DVECustomTransparencyInfo* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_DVE_Custom_Transparency_DVECustomTransparencyInfo >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_DVE_Custom_Transparency_DVECustomTransparencyInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_DVE_Custom_Transparency* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_DVE_Custom_Transparency >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_DVE_Custom_Transparency >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_RTD_Status_RTDStatusInfo* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_RTD_Status_RTDStatusInfo >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_RTD_Status_RTDStatusInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_RTD_Status* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_RTD_Status >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_RTD_Status >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_RTD_Type_RTDTypeInfo* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_RTD_Type_RTDTypeInfo >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_RTD_Type_RTDTypeInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_RTD_Type* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_RTD_Type >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_RTD_Type >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_RTD_Position_RTDPositionInfo* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_RTD_Position_RTDPositionInfo >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_RTD_Position_RTDPositionInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_RTD_Position* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_RTD_Position >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_RTD_Position >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_GFX_Status_GFXStatus* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_GFX_Status_GFXStatus >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_GFX_Status_GFXStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_GFX_Status_PGMGFX* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_GFX_Status_PGMGFX >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_GFX_Status_PGMGFX >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_GFX_Status* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_GFX_Status >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_GFX_Status >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_GFX_Position_GFXPosition* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_GFX_Position_GFXPosition >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_GFX_Position_GFXPosition >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_GFX_Position_PGMGFX* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_GFX_Position_PGMGFX >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_GFX_Position_PGMGFX >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_GFX_Position* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_GFX_Position >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_GFX_Position >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_GFX_Fade_In_Out_Duration_GFXFadeDuration* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_GFX_Fade_In_Out_Duration_GFXFadeDuration >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_GFX_Fade_In_Out_Duration_GFXFadeDuration >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_GFX_Fade_In_Out_Duration_PGMGFX* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_GFX_Fade_In_Out_Duration_PGMGFX >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_GFX_Fade_In_Out_Duration_PGMGFX >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_GFX_Fade_In_Out_Duration* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_GFX_Fade_In_Out_Duration >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_GFX_Fade_In_Out_Duration >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_GFX_Loop_In_Out_GFXLoopInOut* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_GFX_Loop_In_Out_GFXLoopInOut >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_GFX_Loop_In_Out_GFXLoopInOut >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_GFX_Loop_In_Out_PGMGFX* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_GFX_Loop_In_Out_PGMGFX >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_GFX_Loop_In_Out_PGMGFX >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_GFX_Loop_In_Out* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_GFX_Loop_In_Out >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_GFX_Loop_In_Out >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_GFX_Loop_Count_GFXLoopCnt* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_GFX_Loop_Count_GFXLoopCnt >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_GFX_Loop_Count_GFXLoopCnt >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_GFX_Loop_Count_PGMGFX* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_GFX_Loop_Count_PGMGFX >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_GFX_Loop_Count_PGMGFX >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_GFX_Loop_Count* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_GFX_Loop_Count >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_GFX_Loop_Count >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_GFX_Preload_Status_GFXPreloadStatus* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_GFX_Preload_Status_GFXPreloadStatus >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_GFX_Preload_Status_GFXPreloadStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_GFX_Preload_Status* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_GFX_Preload_Status >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_GFX_Preload_Status >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_HealthInfo_Version* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_HealthInfo_Version >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_HealthInfo_Version >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_HealthInfo_Mixer_Status* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_HealthInfo_Mixer_Status >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_HealthInfo_Mixer_Status >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_HealthInfo_Network_Bandwidth* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_HealthInfo_Network_Bandwidth >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_HealthInfo_Network_Bandwidth >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_HealthInfo_GPU_Temperature* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_HealthInfo_GPU_Temperature >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_HealthInfo_GPU_Temperature >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_HealthInfo_AJA_Status_InfoAJA* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_HealthInfo_AJA_Status_InfoAJA >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_HealthInfo_AJA_Status_InfoAJA >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_HealthInfo_AJA_Status* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_HealthInfo_AJA_Status >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_HealthInfo_AJA_Status >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_HealthInfo_HDD_Status* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_HealthInfo_HDD_Status >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_HealthInfo_HDD_Status >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_HealthInfo_ASIO_Status_ValueStatusPair* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_HealthInfo_ASIO_Status_ValueStatusPair >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_HealthInfo_ASIO_Status_ValueStatusPair >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_HealthInfo_ASIO_Status_AsioStatus* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_HealthInfo_ASIO_Status_AsioStatus >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_HealthInfo_ASIO_Status_AsioStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_HealthInfo_ASIO_Status* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_HealthInfo_ASIO_Status >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_HealthInfo_ASIO_Status >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_HealthInfo_External_TimeCode* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_HealthInfo_External_TimeCode >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_HealthInfo_External_TimeCode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_CustomInfo_InfoPair* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_CustomInfo_InfoPair >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_CustomInfo_InfoPair >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_CustomInfo* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_CustomInfo >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_CustomInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_BMR_Setting* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_BMR_Setting >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_BMR_Setting >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_VuMeter* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_VuMeter >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_VuMeter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_PGMUV* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_PGMUV >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM_PGMUV >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_VuMeter_Live_Mixer_PGM >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_PiP_Status_PiPStatus* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_PiP_Status_PiPStatus >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_PiP_Status_PiPStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_PiP_Status_PGMPiP* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_PiP_Status_PGMPiP >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_PiP_Status_PGMPiP >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_PiP_Status* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_PiP_Status >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_PiP_Status >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Server_Memory* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Server_Memory >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Server_Memory >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Cache_ReplayPlayer_HighResVideo_Range* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Cache_ReplayPlayer_HighResVideo_Range >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Cache_ReplayPlayer_HighResVideo_Range >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Cache_ReplayPlayer_HighResVideo* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Cache_ReplayPlayer_HighResVideo >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Cache_ReplayPlayer_HighResVideo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Cache_ReplayPlayer_ExternalAudio_Range* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Cache_ReplayPlayer_ExternalAudio_Range >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Cache_ReplayPlayer_ExternalAudio_Range >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Cache_ReplayPlayer_ExternalAudio* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Cache_ReplayPlayer_ExternalAudio >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Cache_ReplayPlayer_ExternalAudio >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Storage_Capacity* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Storage_Capacity >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Storage_Capacity >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_HealthInfo_ReferenceStatus* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_HealthInfo_ReferenceStatus >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_HealthInfo_ReferenceStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_HealthInfo_SerialNumber_ServerInfo* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_HealthInfo_SerialNumber_ServerInfo >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_HealthInfo_SerialNumber_ServerInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_HealthInfo_SerialNumber* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_HealthInfo_SerialNumber >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_HealthInfo_SerialNumber >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_HealthInfo_RemainingTimePerCam_RemainingTime* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_HealthInfo_RemainingTimePerCam_RemainingTime >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_HealthInfo_RemainingTimePerCam_RemainingTime >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_HealthInfo_RemainingTimePerCam* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_HealthInfo_RemainingTimePerCam >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_HealthInfo_RemainingTimePerCam >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Film_Effect_Status* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Film_Effect_Status >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Film_Effect_Status >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::Value_Common_TimeReference* Arena::CreateMaybeMessage< ::GoogleProtoBB::Value_Common_TimeReference >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::Value_Common_TimeReference >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GoogleProtoBB::BroadCastData* Arena::CreateMaybeMessage< ::GoogleProtoBB::BroadCastData >(Arena* arena) {
  return Arena::CreateInternal< ::GoogleProtoBB::BroadCastData >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
